
NUCLEO_F401RE/rosserial_mbed_pubsub.elf:     file format elf32-littlearm
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08004e0d


Disassembly of section .text:

08000000 <g_pfnVectors>:
 8000000:	00 80 01 20 0d 4e 00 08 41 4e 00 08 41 4e 00 08     ... .N..AN..AN..
 8000010:	41 4e 00 08 41 4e 00 08 41 4e 00 08 00 00 00 00     AN..AN..AN......
	...
 800002c:	d1 4c 00 08 41 4e 00 08 00 00 00 00 77 4d 00 08     .L..AN......wM..
 800003c:	d7 4d 00 08 41 4e 00 08 41 4e 00 08 41 4e 00 08     .M..AN..AN..AN..
 800004c:	41 4e 00 08 41 4e 00 08 41 4e 00 08 41 4e 00 08     AN..AN..AN..AN..
 800005c:	41 4e 00 08 41 4e 00 08 41 4e 00 08 41 4e 00 08     AN..AN..AN..AN..
 800006c:	41 4e 00 08 41 4e 00 08 41 4e 00 08 41 4e 00 08     AN..AN..AN..AN..
 800007c:	41 4e 00 08 41 4e 00 08 41 4e 00 08 41 4e 00 08     AN..AN..AN..AN..
	...
 800009c:	41 4e 00 08 41 4e 00 08 41 4e 00 08 41 4e 00 08     AN..AN..AN..AN..
 80000ac:	41 4e 00 08 41 4e 00 08 41 4e 00 08 41 4e 00 08     AN..AN..AN..AN..
 80000bc:	41 4e 00 08 41 4e 00 08 41 4e 00 08 41 4e 00 08     AN..AN..AN..AN..
 80000cc:	41 4e 00 08 41 4e 00 08 41 4e 00 08 41 4e 00 08     AN..AN..AN..AN..
 80000dc:	00 00 00 00 41 4e 00 08 41 4e 00 08 41 4e 00 08     ....AN..AN..AN..
	...
 80000fc:	41 4e 00 08 00 00 00 00 41 4e 00 08 41 4e 00 08     AN......AN..AN..
 800010c:	41 4e 00 08 00 00 00 00 00 00 00 00 00 00 00 00     AN..............
 800011c:	00 00 00 00 41 4e 00 08 41 4e 00 08 41 4e 00 08     ....AN..AN..AN..
 800012c:	41 4e 00 08 41 4e 00 08 00 00 00 00 00 00 00 00     AN..AN..........
	...
 800014c:	41 4e 00 08 41 4e 00 08 41 4e 00 08 41 4e 00 08     AN..AN..AN..AN..
 800015c:	41 4e 00 08 41 4e 00 08 41 4e 00 08 00 00 00 00     AN..AN..AN......
	...
 8000184:	41 4e 00 08 00 00 00 00 00 00 00 00 41 4e 00 08     AN..........AN..

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000230 	.word	0x20000230
 80001b0:	00000000 	.word	0x00000000
 80001b4:	080067f8 	.word	0x080067f8

080001b8 <frame_dummy>:
 80001b8:	4b0c      	ldr	r3, [pc, #48]	; (80001ec <frame_dummy+0x34>)
 80001ba:	b143      	cbz	r3, 80001ce <frame_dummy+0x16>
 80001bc:	480c      	ldr	r0, [pc, #48]	; (80001f0 <frame_dummy+0x38>)
 80001be:	490d      	ldr	r1, [pc, #52]	; (80001f4 <frame_dummy+0x3c>)
 80001c0:	b510      	push	{r4, lr}
 80001c2:	f3af 8000 	nop.w
 80001c6:	480c      	ldr	r0, [pc, #48]	; (80001f8 <frame_dummy+0x40>)
 80001c8:	6803      	ldr	r3, [r0, #0]
 80001ca:	b923      	cbnz	r3, 80001d6 <frame_dummy+0x1e>
 80001cc:	bd10      	pop	{r4, pc}
 80001ce:	480a      	ldr	r0, [pc, #40]	; (80001f8 <frame_dummy+0x40>)
 80001d0:	6803      	ldr	r3, [r0, #0]
 80001d2:	b933      	cbnz	r3, 80001e2 <frame_dummy+0x2a>
 80001d4:	4770      	bx	lr
 80001d6:	4b09      	ldr	r3, [pc, #36]	; (80001fc <frame_dummy+0x44>)
 80001d8:	2b00      	cmp	r3, #0
 80001da:	d0f7      	beq.n	80001cc <frame_dummy+0x14>
 80001dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80001e0:	4718      	bx	r3
 80001e2:	4b06      	ldr	r3, [pc, #24]	; (80001fc <frame_dummy+0x44>)
 80001e4:	2b00      	cmp	r3, #0
 80001e6:	d0f5      	beq.n	80001d4 <frame_dummy+0x1c>
 80001e8:	4718      	bx	r3
 80001ea:	bf00      	nop
 80001ec:	00000000 	.word	0x00000000
 80001f0:	080067f8 	.word	0x080067f8
 80001f4:	20000234 	.word	0x20000234
 80001f8:	2000022c 	.word	0x2000022c
 80001fc:	00000000 	.word	0x00000000

08000200 <std_msgs::Time::serialize(unsigned char*) const>:
 8000200:	6843      	ldr	r3, [r0, #4]
 8000202:	700b      	strb	r3, [r1, #0]
 8000204:	6843      	ldr	r3, [r0, #4]
 8000206:	0a1b      	lsrs	r3, r3, #8
 8000208:	704b      	strb	r3, [r1, #1]
 800020a:	88c3      	ldrh	r3, [r0, #6]
 800020c:	708b      	strb	r3, [r1, #2]
 800020e:	79c3      	ldrb	r3, [r0, #7]
 8000210:	70cb      	strb	r3, [r1, #3]
 8000212:	6883      	ldr	r3, [r0, #8]
 8000214:	710b      	strb	r3, [r1, #4]
 8000216:	6883      	ldr	r3, [r0, #8]
 8000218:	0a1b      	lsrs	r3, r3, #8
 800021a:	714b      	strb	r3, [r1, #5]
 800021c:	8943      	ldrh	r3, [r0, #10]
 800021e:	718b      	strb	r3, [r1, #6]
 8000220:	7ac3      	ldrb	r3, [r0, #11]
 8000222:	71cb      	strb	r3, [r1, #7]
 8000224:	2008      	movs	r0, #8
 8000226:	4770      	bx	lr

08000228 <std_msgs::Time::deserialize(unsigned char*)>:
 8000228:	780b      	ldrb	r3, [r1, #0]
 800022a:	6043      	str	r3, [r0, #4]
 800022c:	784a      	ldrb	r2, [r1, #1]
 800022e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000232:	6043      	str	r3, [r0, #4]
 8000234:	788a      	ldrb	r2, [r1, #2]
 8000236:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800023a:	6043      	str	r3, [r0, #4]
 800023c:	78ca      	ldrb	r2, [r1, #3]
 800023e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8000242:	6043      	str	r3, [r0, #4]
 8000244:	790b      	ldrb	r3, [r1, #4]
 8000246:	6083      	str	r3, [r0, #8]
 8000248:	794a      	ldrb	r2, [r1, #5]
 800024a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800024e:	6083      	str	r3, [r0, #8]
 8000250:	798a      	ldrb	r2, [r1, #6]
 8000252:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000256:	6083      	str	r3, [r0, #8]
 8000258:	79ca      	ldrb	r2, [r1, #7]
 800025a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800025e:	6083      	str	r3, [r0, #8]
 8000260:	2008      	movs	r0, #8
 8000262:	4770      	bx	lr

08000264 <std_msgs::Time::getType()>:
 8000264:	4800      	ldr	r0, [pc, #0]	; (8000268 <std_msgs::Time::getType()+0x4>)
 8000266:	4770      	bx	lr
 8000268:	08006270 	.word	0x08006270

0800026c <std_msgs::Time::getMD5()>:
 800026c:	4800      	ldr	r0, [pc, #0]	; (8000270 <std_msgs::Time::getMD5()+0x4>)
 800026e:	4770      	bx	lr
 8000270:	0800624f 	.word	0x0800624f

08000274 <rosserial_msgs::TopicInfo::getType()>:
 8000274:	4800      	ldr	r0, [pc, #0]	; (8000278 <rosserial_msgs::TopicInfo::getType()+0x4>)
 8000276:	4770      	bx	lr
 8000278:	08006173 	.word	0x08006173

0800027c <rosserial_msgs::TopicInfo::getMD5()>:
 800027c:	4800      	ldr	r0, [pc, #0]	; (8000280 <rosserial_msgs::TopicInfo::getMD5()+0x4>)
 800027e:	4770      	bx	lr
 8000280:	08006152 	.word	0x08006152

08000284 <rosserial_msgs::Log::getType()>:
 8000284:	4800      	ldr	r0, [pc, #0]	; (8000288 <rosserial_msgs::Log::getType()+0x4>)
 8000286:	4770      	bx	lr
 8000288:	0800613f 	.word	0x0800613f

0800028c <rosserial_msgs::Log::getMD5()>:
 800028c:	4800      	ldr	r0, [pc, #0]	; (8000290 <rosserial_msgs::Log::getMD5()+0x4>)
 800028e:	4770      	bx	lr
 8000290:	0800611e 	.word	0x0800611e

08000294 <rosserial_msgs::RequestParamResponse::getType()>:
 8000294:	4800      	ldr	r0, [pc, #0]	; (8000298 <rosserial_msgs::RequestParamResponse::getType()+0x4>)
 8000296:	4770      	bx	lr
 8000298:	0800618c 	.word	0x0800618c

0800029c <rosserial_msgs::RequestParamResponse::getMD5()>:
 800029c:	4800      	ldr	r0, [pc, #0]	; (80002a0 <rosserial_msgs::RequestParamResponse::getMD5()+0x4>)
 800029e:	4770      	bx	lr
 80002a0:	080060fd 	.word	0x080060fd

080002a4 <control::HardwareCommand::serialize(unsigned char*) const>:
 80002a4:	6843      	ldr	r3, [r0, #4]
 80002a6:	700b      	strb	r3, [r1, #0]
 80002a8:	0a1a      	lsrs	r2, r3, #8
 80002aa:	704a      	strb	r2, [r1, #1]
 80002ac:	0c1a      	lsrs	r2, r3, #16
 80002ae:	0e1b      	lsrs	r3, r3, #24
 80002b0:	708a      	strb	r2, [r1, #2]
 80002b2:	70cb      	strb	r3, [r1, #3]
 80002b4:	6883      	ldr	r3, [r0, #8]
 80002b6:	710b      	strb	r3, [r1, #4]
 80002b8:	0a1a      	lsrs	r2, r3, #8
 80002ba:	714a      	strb	r2, [r1, #5]
 80002bc:	0c1a      	lsrs	r2, r3, #16
 80002be:	0e1b      	lsrs	r3, r3, #24
 80002c0:	718a      	strb	r2, [r1, #6]
 80002c2:	71cb      	strb	r3, [r1, #7]
 80002c4:	68c3      	ldr	r3, [r0, #12]
 80002c6:	720b      	strb	r3, [r1, #8]
 80002c8:	0a1a      	lsrs	r2, r3, #8
 80002ca:	724a      	strb	r2, [r1, #9]
 80002cc:	0c1a      	lsrs	r2, r3, #16
 80002ce:	0e1b      	lsrs	r3, r3, #24
 80002d0:	728a      	strb	r2, [r1, #10]
 80002d2:	72cb      	strb	r3, [r1, #11]
 80002d4:	6903      	ldr	r3, [r0, #16]
 80002d6:	730b      	strb	r3, [r1, #12]
 80002d8:	0a1a      	lsrs	r2, r3, #8
 80002da:	734a      	strb	r2, [r1, #13]
 80002dc:	0c1a      	lsrs	r2, r3, #16
 80002de:	0e1b      	lsrs	r3, r3, #24
 80002e0:	738a      	strb	r2, [r1, #14]
 80002e2:	73cb      	strb	r3, [r1, #15]
 80002e4:	2010      	movs	r0, #16
 80002e6:	4770      	bx	lr

080002e8 <control::HardwareCommand::deserialize(unsigned char*)>:
 80002e8:	680b      	ldr	r3, [r1, #0]
 80002ea:	6043      	str	r3, [r0, #4]
 80002ec:	684b      	ldr	r3, [r1, #4]
 80002ee:	6083      	str	r3, [r0, #8]
 80002f0:	688b      	ldr	r3, [r1, #8]
 80002f2:	60c3      	str	r3, [r0, #12]
 80002f4:	68cb      	ldr	r3, [r1, #12]
 80002f6:	6103      	str	r3, [r0, #16]
 80002f8:	2010      	movs	r0, #16
 80002fa:	4770      	bx	lr

080002fc <control::HardwareCommand::getType()>:
 80002fc:	4800      	ldr	r0, [pc, #0]	; (8000300 <control::HardwareCommand::getType()+0x4>)
 80002fe:	4770      	bx	lr
 8000300:	08006237 	.word	0x08006237

08000304 <control::HardwareCommand::getMD5()>:
 8000304:	4800      	ldr	r0, [pc, #0]	; (8000308 <control::HardwareCommand::getMD5()+0x4>)
 8000306:	4770      	bx	lr
 8000308:	08006216 	.word	0x08006216

0800030c <control::EncoderData::serialize(unsigned char*) const>:
 800030c:	6843      	ldr	r3, [r0, #4]
 800030e:	700b      	strb	r3, [r1, #0]
 8000310:	0a1a      	lsrs	r2, r3, #8
 8000312:	704a      	strb	r2, [r1, #1]
 8000314:	0c1a      	lsrs	r2, r3, #16
 8000316:	0e1b      	lsrs	r3, r3, #24
 8000318:	708a      	strb	r2, [r1, #2]
 800031a:	70cb      	strb	r3, [r1, #3]
 800031c:	6883      	ldr	r3, [r0, #8]
 800031e:	710b      	strb	r3, [r1, #4]
 8000320:	0a1a      	lsrs	r2, r3, #8
 8000322:	714a      	strb	r2, [r1, #5]
 8000324:	0c1a      	lsrs	r2, r3, #16
 8000326:	0e1b      	lsrs	r3, r3, #24
 8000328:	718a      	strb	r2, [r1, #6]
 800032a:	71cb      	strb	r3, [r1, #7]
 800032c:	68c3      	ldr	r3, [r0, #12]
 800032e:	720b      	strb	r3, [r1, #8]
 8000330:	0a1a      	lsrs	r2, r3, #8
 8000332:	724a      	strb	r2, [r1, #9]
 8000334:	0c1a      	lsrs	r2, r3, #16
 8000336:	0e1b      	lsrs	r3, r3, #24
 8000338:	728a      	strb	r2, [r1, #10]
 800033a:	72cb      	strb	r3, [r1, #11]
 800033c:	6903      	ldr	r3, [r0, #16]
 800033e:	730b      	strb	r3, [r1, #12]
 8000340:	0a1a      	lsrs	r2, r3, #8
 8000342:	734a      	strb	r2, [r1, #13]
 8000344:	0c1a      	lsrs	r2, r3, #16
 8000346:	0e1b      	lsrs	r3, r3, #24
 8000348:	738a      	strb	r2, [r1, #14]
 800034a:	73cb      	strb	r3, [r1, #15]
 800034c:	6943      	ldr	r3, [r0, #20]
 800034e:	740b      	strb	r3, [r1, #16]
 8000350:	0a1a      	lsrs	r2, r3, #8
 8000352:	744a      	strb	r2, [r1, #17]
 8000354:	0c1a      	lsrs	r2, r3, #16
 8000356:	0e1b      	lsrs	r3, r3, #24
 8000358:	748a      	strb	r2, [r1, #18]
 800035a:	74cb      	strb	r3, [r1, #19]
 800035c:	6983      	ldr	r3, [r0, #24]
 800035e:	750b      	strb	r3, [r1, #20]
 8000360:	0a1a      	lsrs	r2, r3, #8
 8000362:	754a      	strb	r2, [r1, #21]
 8000364:	0c1a      	lsrs	r2, r3, #16
 8000366:	0e1b      	lsrs	r3, r3, #24
 8000368:	758a      	strb	r2, [r1, #22]
 800036a:	75cb      	strb	r3, [r1, #23]
 800036c:	69c3      	ldr	r3, [r0, #28]
 800036e:	760b      	strb	r3, [r1, #24]
 8000370:	0a1a      	lsrs	r2, r3, #8
 8000372:	764a      	strb	r2, [r1, #25]
 8000374:	0c1a      	lsrs	r2, r3, #16
 8000376:	0e1b      	lsrs	r3, r3, #24
 8000378:	768a      	strb	r2, [r1, #26]
 800037a:	76cb      	strb	r3, [r1, #27]
 800037c:	201c      	movs	r0, #28
 800037e:	4770      	bx	lr

08000380 <control::EncoderData::deserialize(unsigned char*)>:
 8000380:	680b      	ldr	r3, [r1, #0]
 8000382:	6043      	str	r3, [r0, #4]
 8000384:	684b      	ldr	r3, [r1, #4]
 8000386:	6083      	str	r3, [r0, #8]
 8000388:	688b      	ldr	r3, [r1, #8]
 800038a:	60c3      	str	r3, [r0, #12]
 800038c:	68cb      	ldr	r3, [r1, #12]
 800038e:	6103      	str	r3, [r0, #16]
 8000390:	690b      	ldr	r3, [r1, #16]
 8000392:	6143      	str	r3, [r0, #20]
 8000394:	694b      	ldr	r3, [r1, #20]
 8000396:	6183      	str	r3, [r0, #24]
 8000398:	698b      	ldr	r3, [r1, #24]
 800039a:	61c3      	str	r3, [r0, #28]
 800039c:	201c      	movs	r0, #28
 800039e:	4770      	bx	lr

080003a0 <control::EncoderData::getType()>:
 80003a0:	4800      	ldr	r0, [pc, #0]	; (80003a4 <control::EncoderData::getType()+0x4>)
 80003a2:	4770      	bx	lr
 80003a4:	08006202 	.word	0x08006202

080003a8 <control::EncoderData::getMD5()>:
 80003a8:	4800      	ldr	r0, [pc, #0]	; (80003ac <control::EncoderData::getMD5()+0x4>)
 80003aa:	4770      	bx	lr
 80003ac:	080061e1 	.word	0x080061e1

080003b0 <ros::Subscriber<control::HardwareCommand, void>::callback(unsigned char*)>:
 80003b0:	b570      	push	{r4, r5, r6, lr}
 80003b2:	4605      	mov	r5, r0
 80003b4:	f100 040c 	add.w	r4, r0, #12
 80003b8:	4620      	mov	r0, r4
 80003ba:	f7ff ff95 	bl	80002e8 <control::HardwareCommand::deserialize(unsigned char*)>
 80003be:	6a2b      	ldr	r3, [r5, #32]
 80003c0:	4620      	mov	r0, r4
 80003c2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80003c6:	4718      	bx	r3

080003c8 <ros::Subscriber<control::HardwareCommand, void>::getEndpointType()>:
 80003c8:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80003ca:	4770      	bx	lr

080003cc <ros::Subscriber<control::HardwareCommand, void>::getMsgType()>:
 80003cc:	4800      	ldr	r0, [pc, #0]	; (80003d0 <ros::Subscriber<control::HardwareCommand, void>::getMsgType()+0x4>)
 80003ce:	4770      	bx	lr
 80003d0:	08006237 	.word	0x08006237

080003d4 <ros::Subscriber<control::HardwareCommand, void>::getMsgMD5()>:
 80003d4:	4800      	ldr	r0, [pc, #0]	; (80003d8 <ros::Subscriber<control::HardwareCommand, void>::getMsgMD5()+0x4>)
 80003d6:	4770      	bx	lr
 80003d8:	08006216 	.word	0x08006216

080003dc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::connected()>:
 80003dc:	f890 05e8 	ldrb.w	r0, [r0, #1512]	; 0x5e8
 80003e0:	4770      	bx	lr

080003e2 <mbed::PwmOut::write(float)>:
 80003e2:	b538      	push	{r3, r4, r5, lr}
 80003e4:	4604      	mov	r4, r0
 80003e6:	460d      	mov	r5, r1
 80003e8:	f001 f964 	bl	80016b4 <core_util_critical_section_enter>
 80003ec:	4629      	mov	r1, r5
 80003ee:	4620      	mov	r0, r4
 80003f0:	f002 fddc 	bl	8002fac <pwmout_write>
 80003f4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80003f8:	f001 b972 	b.w	80016e0 <core_util_critical_section_exit>

080003fc <ros::Publisher::publish(ros::Msg const*)>:
 80003fc:	68c3      	ldr	r3, [r0, #12]
 80003fe:	681a      	ldr	r2, [r3, #0]
 8000400:	b410      	push	{r4}
 8000402:	6814      	ldr	r4, [r2, #0]
 8000404:	460a      	mov	r2, r1
 8000406:	6881      	ldr	r1, [r0, #8]
 8000408:	4618      	mov	r0, r3
 800040a:	4623      	mov	r3, r4
 800040c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000410:	4718      	bx	r3

08000412 <DCmotor::DCmotor(PinName, PinName, PinName, PinName)>:
 8000412:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000416:	261c      	movs	r6, #28
 8000418:	4604      	mov	r4, r0
 800041a:	460d      	mov	r5, r1
 800041c:	4617      	mov	r7, r2
 800041e:	2100      	movs	r1, #0
 8000420:	4632      	mov	r2, r6
 8000422:	4698      	mov	r8, r3
 8000424:	f005 f959 	bl	80056da <memset>
 8000428:	4629      	mov	r1, r5
 800042a:	4620      	mov	r0, r4
 800042c:	19a5      	adds	r5, r4, r6
 800042e:	f001 f89f 	bl	8001570 <gpio_init_out>
 8000432:	4632      	mov	r2, r6
 8000434:	2100      	movs	r1, #0
 8000436:	4628      	mov	r0, r5
 8000438:	f005 f94f 	bl	80056da <memset>
 800043c:	4639      	mov	r1, r7
 800043e:	4628      	mov	r0, r5
 8000440:	f104 0738 	add.w	r7, r4, #56	; 0x38
 8000444:	f001 f894 	bl	8001570 <gpio_init_out>
 8000448:	f104 0550 	add.w	r5, r4, #80	; 0x50
 800044c:	f001 f932 	bl	80016b4 <core_util_critical_section_enter>
 8000450:	4641      	mov	r1, r8
 8000452:	4638      	mov	r0, r7
 8000454:	f002 fec4 	bl	80031e0 <pwmout_init>
 8000458:	f001 f942 	bl	80016e0 <core_util_critical_section_exit>
 800045c:	f001 f92a 	bl	80016b4 <core_util_critical_section_enter>
 8000460:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 8000464:	4628      	mov	r0, r5
 8000466:	f002 febb 	bl	80031e0 <pwmout_init>
 800046a:	f001 f939 	bl	80016e0 <core_util_critical_section_exit>
 800046e:	68a3      	ldr	r3, [r4, #8]
 8000470:	6822      	ldr	r2, [r4, #0]
 8000472:	601a      	str	r2, [r3, #0]
 8000474:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8000476:	69e2      	ldr	r2, [r4, #28]
 8000478:	601a      	str	r2, [r3, #0]
 800047a:	2600      	movs	r6, #0
 800047c:	4631      	mov	r1, r6
 800047e:	4638      	mov	r0, r7
 8000480:	f7ff ffaf 	bl	80003e2 <mbed::PwmOut::write(float)>
 8000484:	4628      	mov	r0, r5
 8000486:	4631      	mov	r1, r6
 8000488:	f7ff ffab 	bl	80003e2 <mbed::PwmOut::write(float)>
 800048c:	4620      	mov	r0, r4
 800048e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08000492 <DCmotor::rotate(float)>:
 8000492:	b510      	push	{r4, lr}
 8000494:	ed2d 8b02 	vpush	{d8}
 8000498:	ee08 1a10 	vmov	s16, r1
 800049c:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 80004a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80004a4:	4604      	mov	r4, r0
 80004a6:	db0c      	blt.n	80004c2 <DCmotor::rotate(float)+0x30>
 80004a8:	2100      	movs	r1, #0
 80004aa:	3050      	adds	r0, #80	; 0x50
 80004ac:	f7ff ff99 	bl	80003e2 <mbed::PwmOut::write(float)>
 80004b0:	ee18 1a10 	vmov	r1, s16
 80004b4:	f104 0038 	add.w	r0, r4, #56	; 0x38
 80004b8:	f7ff ff93 	bl	80003e2 <mbed::PwmOut::write(float)>
 80004bc:	ecbd 8b02 	vpop	{d8}
 80004c0:	bd10      	pop	{r4, pc}
 80004c2:	d5fb      	bpl.n	80004bc <DCmotor::rotate(float)+0x2a>
 80004c4:	2100      	movs	r1, #0
 80004c6:	3038      	adds	r0, #56	; 0x38
 80004c8:	f7ff ff8b 	bl	80003e2 <mbed::PwmOut::write(float)>
 80004cc:	eef0 7ac8 	vabs.f32	s15, s16
 80004d0:	ee17 1a90 	vmov	r1, s15
 80004d4:	f104 0050 	add.w	r0, r4, #80	; 0x50
 80004d8:	e7ee      	b.n	80004b8 <DCmotor::rotate(float)+0x26>
	...

080004dc <messageCb(control::HardwareCommand const&)>:
 80004dc:	b510      	push	{r4, lr}
 80004de:	4604      	mov	r4, r0
 80004e0:	6841      	ldr	r1, [r0, #4]
 80004e2:	480a      	ldr	r0, [pc, #40]	; (800050c <messageCb(control::HardwareCommand const&)+0x30>)
 80004e4:	f7ff ffd5 	bl	8000492 <DCmotor::rotate(float)>
 80004e8:	68a1      	ldr	r1, [r4, #8]
 80004ea:	4809      	ldr	r0, [pc, #36]	; (8000510 <messageCb(control::HardwareCommand const&)+0x34>)
 80004ec:	f7ff ffd1 	bl	8000492 <DCmotor::rotate(float)>
 80004f0:	68e1      	ldr	r1, [r4, #12]
 80004f2:	4808      	ldr	r0, [pc, #32]	; (8000514 <messageCb(control::HardwareCommand const&)+0x38>)
 80004f4:	f7ff ffcd 	bl	8000492 <DCmotor::rotate(float)>
 80004f8:	4b07      	ldr	r3, [pc, #28]	; (8000518 <messageCb(control::HardwareCommand const&)+0x3c>)
 80004fa:	6862      	ldr	r2, [r4, #4]
 80004fc:	605a      	str	r2, [r3, #4]
 80004fe:	68a2      	ldr	r2, [r4, #8]
 8000500:	609a      	str	r2, [r3, #8]
 8000502:	68e2      	ldr	r2, [r4, #12]
 8000504:	60da      	str	r2, [r3, #12]
 8000506:	6922      	ldr	r2, [r4, #16]
 8000508:	611a      	str	r2, [r3, #16]
 800050a:	bd10      	pop	{r4, pc}
 800050c:	20000388 	.word	0x20000388
 8000510:	20000318 	.word	0x20000318
 8000514:	200002a8 	.word	0x200002a8
 8000518:	20000294 	.word	0x20000294

0800051c <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>:
 800051c:	3801      	subs	r0, #1
 800051e:	2300      	movs	r3, #0
 8000520:	fa21 f203 	lsr.w	r2, r1, r3
 8000524:	3308      	adds	r3, #8
 8000526:	2b20      	cmp	r3, #32
 8000528:	f800 2f01 	strb.w	r2, [r0, #1]!
 800052c:	d1f8      	bne.n	8000520 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)+0x4>
 800052e:	4770      	bx	lr

08000530 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const>:
 8000530:	6843      	ldr	r3, [r0, #4]
 8000532:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000536:	700b      	strb	r3, [r1, #0]
 8000538:	6843      	ldr	r3, [r0, #4]
 800053a:	0a1b      	lsrs	r3, r3, #8
 800053c:	704b      	strb	r3, [r1, #1]
 800053e:	88c3      	ldrh	r3, [r0, #6]
 8000540:	708b      	strb	r3, [r1, #2]
 8000542:	79c3      	ldrb	r3, [r0, #7]
 8000544:	70cb      	strb	r3, [r1, #3]
 8000546:	460d      	mov	r5, r1
 8000548:	1d0a      	adds	r2, r1, #4
 800054a:	4604      	mov	r4, r0
 800054c:	2100      	movs	r1, #0
 800054e:	6860      	ldr	r0, [r4, #4]
 8000550:	4281      	cmp	r1, r0
 8000552:	eba2 0305 	sub.w	r3, r2, r5
 8000556:	f102 0204 	add.w	r2, r2, #4
 800055a:	d20f      	bcs.n	800057c <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x4c>
 800055c:	68e3      	ldr	r3, [r4, #12]
 800055e:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8000562:	f802 3c04 	strb.w	r3, [r2, #-4]
 8000566:	0a18      	lsrs	r0, r3, #8
 8000568:	f802 0c03 	strb.w	r0, [r2, #-3]
 800056c:	0c18      	lsrs	r0, r3, #16
 800056e:	0e1b      	lsrs	r3, r3, #24
 8000570:	f802 0c02 	strb.w	r0, [r2, #-2]
 8000574:	f802 3c01 	strb.w	r3, [r2, #-1]
 8000578:	3101      	adds	r1, #1
 800057a:	e7e8      	b.n	800054e <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x1e>
 800057c:	6922      	ldr	r2, [r4, #16]
 800057e:	54ea      	strb	r2, [r5, r3]
 8000580:	6921      	ldr	r1, [r4, #16]
 8000582:	18ea      	adds	r2, r5, r3
 8000584:	0a09      	lsrs	r1, r1, #8
 8000586:	7051      	strb	r1, [r2, #1]
 8000588:	8a61      	ldrh	r1, [r4, #18]
 800058a:	7091      	strb	r1, [r2, #2]
 800058c:	7ce1      	ldrb	r1, [r4, #19]
 800058e:	70d1      	strb	r1, [r2, #3]
 8000590:	3304      	adds	r3, #4
 8000592:	442b      	add	r3, r5
 8000594:	2100      	movs	r1, #0
 8000596:	6922      	ldr	r2, [r4, #16]
 8000598:	4291      	cmp	r1, r2
 800059a:	eba3 0605 	sub.w	r6, r3, r5
 800059e:	f103 0304 	add.w	r3, r3, #4
 80005a2:	d20f      	bcs.n	80005c4 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x94>
 80005a4:	69a2      	ldr	r2, [r4, #24]
 80005a6:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 80005aa:	f803 2c04 	strb.w	r2, [r3, #-4]
 80005ae:	0a10      	lsrs	r0, r2, #8
 80005b0:	f803 0c03 	strb.w	r0, [r3, #-3]
 80005b4:	0c10      	lsrs	r0, r2, #16
 80005b6:	0e12      	lsrs	r2, r2, #24
 80005b8:	f803 0c02 	strb.w	r0, [r3, #-2]
 80005bc:	f803 2c01 	strb.w	r2, [r3, #-1]
 80005c0:	3101      	adds	r1, #1
 80005c2:	e7e8      	b.n	8000596 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x66>
 80005c4:	69e3      	ldr	r3, [r4, #28]
 80005c6:	55ab      	strb	r3, [r5, r6]
 80005c8:	69e2      	ldr	r2, [r4, #28]
 80005ca:	19ab      	adds	r3, r5, r6
 80005cc:	0a12      	lsrs	r2, r2, #8
 80005ce:	705a      	strb	r2, [r3, #1]
 80005d0:	8be2      	ldrh	r2, [r4, #30]
 80005d2:	709a      	strb	r2, [r3, #2]
 80005d4:	7fe2      	ldrb	r2, [r4, #31]
 80005d6:	70da      	strb	r2, [r3, #3]
 80005d8:	3604      	adds	r6, #4
 80005da:	2700      	movs	r7, #0
 80005dc:	69e3      	ldr	r3, [r4, #28]
 80005de:	429f      	cmp	r7, r3
 80005e0:	d214      	bcs.n	800060c <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0xdc>
 80005e2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80005e4:	f853 0027 	ldr.w	r0, [r3, r7, lsl #2]
 80005e8:	f005 fb43 	bl	8005c72 <strlen>
 80005ec:	4680      	mov	r8, r0
 80005ee:	4601      	mov	r1, r0
 80005f0:	19a8      	adds	r0, r5, r6
 80005f2:	f7ff ff93 	bl	800051c <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 80005f6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80005f8:	3604      	adds	r6, #4
 80005fa:	f853 1027 	ldr.w	r1, [r3, r7, lsl #2]
 80005fe:	19a8      	adds	r0, r5, r6
 8000600:	4642      	mov	r2, r8
 8000602:	f005 f845 	bl	8005690 <memcpy>
 8000606:	4446      	add	r6, r8
 8000608:	3701      	adds	r7, #1
 800060a:	e7e7      	b.n	80005dc <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0xac>
 800060c:	4630      	mov	r0, r6
 800060e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08000612 <rosserial_msgs::Log::serialize(unsigned char*) const>:
 8000612:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000614:	460e      	mov	r6, r1
 8000616:	7903      	ldrb	r3, [r0, #4]
 8000618:	f806 3b01 	strb.w	r3, [r6], #1
 800061c:	4605      	mov	r5, r0
 800061e:	6880      	ldr	r0, [r0, #8]
 8000620:	460f      	mov	r7, r1
 8000622:	f005 fb26 	bl	8005c72 <strlen>
 8000626:	4604      	mov	r4, r0
 8000628:	4601      	mov	r1, r0
 800062a:	4630      	mov	r0, r6
 800062c:	f7ff ff76 	bl	800051c <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 8000630:	4622      	mov	r2, r4
 8000632:	68a9      	ldr	r1, [r5, #8]
 8000634:	1d78      	adds	r0, r7, #5
 8000636:	f005 f82b 	bl	8005690 <memcpy>
 800063a:	1d60      	adds	r0, r4, #5
 800063c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800063e <rosserial_msgs::TopicInfo::serialize(unsigned char*) const>:
 800063e:	8883      	ldrh	r3, [r0, #4]
 8000640:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000644:	700b      	strb	r3, [r1, #0]
 8000646:	8883      	ldrh	r3, [r0, #4]
 8000648:	0a1b      	lsrs	r3, r3, #8
 800064a:	704b      	strb	r3, [r1, #1]
 800064c:	4605      	mov	r5, r0
 800064e:	6880      	ldr	r0, [r0, #8]
 8000650:	460c      	mov	r4, r1
 8000652:	f005 fb0e 	bl	8005c72 <strlen>
 8000656:	4607      	mov	r7, r0
 8000658:	4601      	mov	r1, r0
 800065a:	1ca0      	adds	r0, r4, #2
 800065c:	f7ff ff5e 	bl	800051c <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 8000660:	463a      	mov	r2, r7
 8000662:	68a9      	ldr	r1, [r5, #8]
 8000664:	1da0      	adds	r0, r4, #6
 8000666:	f005 f813 	bl	8005690 <memcpy>
 800066a:	68e8      	ldr	r0, [r5, #12]
 800066c:	f005 fb01 	bl	8005c72 <strlen>
 8000670:	f107 0806 	add.w	r8, r7, #6
 8000674:	4606      	mov	r6, r0
 8000676:	4601      	mov	r1, r0
 8000678:	370a      	adds	r7, #10
 800067a:	eb04 0008 	add.w	r0, r4, r8
 800067e:	f7ff ff4d 	bl	800051c <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 8000682:	4632      	mov	r2, r6
 8000684:	68e9      	ldr	r1, [r5, #12]
 8000686:	19e0      	adds	r0, r4, r7
 8000688:	f005 f802 	bl	8005690 <memcpy>
 800068c:	6928      	ldr	r0, [r5, #16]
 800068e:	f005 faf0 	bl	8005c72 <strlen>
 8000692:	443e      	add	r6, r7
 8000694:	4601      	mov	r1, r0
 8000696:	4607      	mov	r7, r0
 8000698:	19a0      	adds	r0, r4, r6
 800069a:	3604      	adds	r6, #4
 800069c:	f7ff ff3e 	bl	800051c <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 80006a0:	463a      	mov	r2, r7
 80006a2:	19a0      	adds	r0, r4, r6
 80006a4:	6929      	ldr	r1, [r5, #16]
 80006a6:	443e      	add	r6, r7
 80006a8:	f004 fff2 	bl	8005690 <memcpy>
 80006ac:	696b      	ldr	r3, [r5, #20]
 80006ae:	55a3      	strb	r3, [r4, r6]
 80006b0:	4434      	add	r4, r6
 80006b2:	0a1a      	lsrs	r2, r3, #8
 80006b4:	7062      	strb	r2, [r4, #1]
 80006b6:	0c1a      	lsrs	r2, r3, #16
 80006b8:	0e1b      	lsrs	r3, r3, #24
 80006ba:	70a2      	strb	r2, [r4, #2]
 80006bc:	70e3      	strb	r3, [r4, #3]
 80006be:	1d30      	adds	r0, r6, #4
 80006c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080006c4 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>:
 80006c4:	b510      	push	{r4, lr}
 80006c6:	2300      	movs	r3, #0
 80006c8:	6003      	str	r3, [r0, #0]
 80006ca:	3901      	subs	r1, #1
 80006cc:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 80006d0:	fa02 f403 	lsl.w	r4, r2, r3
 80006d4:	6802      	ldr	r2, [r0, #0]
 80006d6:	3308      	adds	r3, #8
 80006d8:	4322      	orrs	r2, r4
 80006da:	2b20      	cmp	r3, #32
 80006dc:	6002      	str	r2, [r0, #0]
 80006de:	d1f5      	bne.n	80006cc <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)+0x8>
 80006e0:	bd10      	pop	{r4, pc}

080006e2 <rosserial_msgs::Log::deserialize(unsigned char*)>:
 80006e2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80006e4:	460c      	mov	r4, r1
 80006e6:	f811 3b01 	ldrb.w	r3, [r1], #1
 80006ea:	7103      	strb	r3, [r0, #4]
 80006ec:	4605      	mov	r5, r0
 80006ee:	a801      	add	r0, sp, #4
 80006f0:	f7ff ffe8 	bl	80006c4 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 80006f4:	9b01      	ldr	r3, [sp, #4]
 80006f6:	1d62      	adds	r2, r4, #5
 80006f8:	1d58      	adds	r0, r3, #5
 80006fa:	1b11      	subs	r1, r2, r4
 80006fc:	4288      	cmp	r0, r1
 80006fe:	d904      	bls.n	800070a <rosserial_msgs::Log::deserialize(unsigned char*)+0x28>
 8000700:	f812 1b01 	ldrb.w	r1, [r2], #1
 8000704:	f802 1c02 	strb.w	r1, [r2, #-2]
 8000708:	e7f7      	b.n	80006fa <rosserial_msgs::Log::deserialize(unsigned char*)+0x18>
 800070a:	4423      	add	r3, r4
 800070c:	2200      	movs	r2, #0
 800070e:	3404      	adds	r4, #4
 8000710:	711a      	strb	r2, [r3, #4]
 8000712:	60ac      	str	r4, [r5, #8]
 8000714:	b003      	add	sp, #12
 8000716:	bd30      	pop	{r4, r5, pc}

08000718 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)>:
 8000718:	b5f0      	push	{r4, r5, r6, r7, lr}
 800071a:	780b      	ldrb	r3, [r1, #0]
 800071c:	8083      	strh	r3, [r0, #4]
 800071e:	784a      	ldrb	r2, [r1, #1]
 8000720:	b085      	sub	sp, #20
 8000722:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000726:	8083      	strh	r3, [r0, #4]
 8000728:	460c      	mov	r4, r1
 800072a:	4606      	mov	r6, r0
 800072c:	3102      	adds	r1, #2
 800072e:	a801      	add	r0, sp, #4
 8000730:	f7ff ffc8 	bl	80006c4 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000734:	9f01      	ldr	r7, [sp, #4]
 8000736:	1da3      	adds	r3, r4, #6
 8000738:	1dbd      	adds	r5, r7, #6
 800073a:	1b1a      	subs	r2, r3, r4
 800073c:	4295      	cmp	r5, r2
 800073e:	d904      	bls.n	800074a <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x32>
 8000740:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000744:	f803 2c02 	strb.w	r2, [r3, #-2]
 8000748:	e7f7      	b.n	800073a <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x22>
 800074a:	19e3      	adds	r3, r4, r7
 800074c:	2200      	movs	r2, #0
 800074e:	715a      	strb	r2, [r3, #5]
 8000750:	1d63      	adds	r3, r4, #5
 8000752:	60b3      	str	r3, [r6, #8]
 8000754:	1961      	adds	r1, r4, r5
 8000756:	a802      	add	r0, sp, #8
 8000758:	f7ff ffb4 	bl	80006c4 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 800075c:	1d2b      	adds	r3, r5, #4
 800075e:	9d02      	ldr	r5, [sp, #8]
 8000760:	f107 020a 	add.w	r2, r7, #10
 8000764:	441d      	add	r5, r3
 8000766:	4422      	add	r2, r4
 8000768:	1b11      	subs	r1, r2, r4
 800076a:	428d      	cmp	r5, r1
 800076c:	d904      	bls.n	8000778 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x60>
 800076e:	f812 1b01 	ldrb.w	r1, [r2], #1
 8000772:	f802 1c02 	strb.w	r1, [r2, #-2]
 8000776:	e7f7      	b.n	8000768 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x50>
 8000778:	1961      	adds	r1, r4, r5
 800077a:	3b01      	subs	r3, #1
 800077c:	4423      	add	r3, r4
 800077e:	2200      	movs	r2, #0
 8000780:	f801 2c01 	strb.w	r2, [r1, #-1]
 8000784:	a803      	add	r0, sp, #12
 8000786:	60f3      	str	r3, [r6, #12]
 8000788:	f7ff ff9c 	bl	80006c4 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 800078c:	9803      	ldr	r0, [sp, #12]
 800078e:	3504      	adds	r5, #4
 8000790:	4428      	add	r0, r5
 8000792:	1963      	adds	r3, r4, r5
 8000794:	1b1a      	subs	r2, r3, r4
 8000796:	4290      	cmp	r0, r2
 8000798:	d904      	bls.n	80007a4 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x8c>
 800079a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800079e:	f803 2c02 	strb.w	r2, [r3, #-2]
 80007a2:	e7f7      	b.n	8000794 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x7c>
 80007a4:	1822      	adds	r2, r4, r0
 80007a6:	3d01      	subs	r5, #1
 80007a8:	2300      	movs	r3, #0
 80007aa:	4425      	add	r5, r4
 80007ac:	f802 3c01 	strb.w	r3, [r2, #-1]
 80007b0:	6135      	str	r5, [r6, #16]
 80007b2:	7893      	ldrb	r3, [r2, #2]
 80007b4:	7851      	ldrb	r1, [r2, #1]
 80007b6:	78d2      	ldrb	r2, [r2, #3]
 80007b8:	041b      	lsls	r3, r3, #16
 80007ba:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 80007be:	5c21      	ldrb	r1, [r4, r0]
 80007c0:	430b      	orrs	r3, r1
 80007c2:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80007c6:	3004      	adds	r0, #4
 80007c8:	6173      	str	r3, [r6, #20]
 80007ca:	b005      	add	sp, #20
 80007cc:	bdf0      	pop	{r4, r5, r6, r7, pc}

080007ce <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)>:
 80007ce:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80007d2:	6843      	ldr	r3, [r0, #4]
 80007d4:	680d      	ldr	r5, [r1, #0]
 80007d6:	429d      	cmp	r5, r3
 80007d8:	4604      	mov	r4, r0
 80007da:	460e      	mov	r6, r1
 80007dc:	d904      	bls.n	80007e8 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x1a>
 80007de:	00a9      	lsls	r1, r5, #2
 80007e0:	68c0      	ldr	r0, [r0, #12]
 80007e2:	f005 f9eb 	bl	8005bbc <realloc>
 80007e6:	60e0      	str	r0, [r4, #12]
 80007e8:	6065      	str	r5, [r4, #4]
 80007ea:	1d32      	adds	r2, r6, #4
 80007ec:	2100      	movs	r1, #0
 80007ee:	6860      	ldr	r0, [r4, #4]
 80007f0:	4281      	cmp	r1, r0
 80007f2:	eba2 0306 	sub.w	r3, r2, r6
 80007f6:	f102 0204 	add.w	r2, r2, #4
 80007fa:	d213      	bcs.n	8000824 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x56>
 80007fc:	f812 3c02 	ldrb.w	r3, [r2, #-2]
 8000800:	f812 0c03 	ldrb.w	r0, [r2, #-3]
 8000804:	041b      	lsls	r3, r3, #16
 8000806:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
 800080a:	f812 0c04 	ldrb.w	r0, [r2, #-4]
 800080e:	4303      	orrs	r3, r0
 8000810:	f812 0c01 	ldrb.w	r0, [r2, #-1]
 8000814:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 8000818:	68e0      	ldr	r0, [r4, #12]
 800081a:	60a3      	str	r3, [r4, #8]
 800081c:	f840 3021 	str.w	r3, [r0, r1, lsl #2]
 8000820:	3101      	adds	r1, #1
 8000822:	e7e4      	b.n	80007ee <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x20>
 8000824:	18f2      	adds	r2, r6, r3
 8000826:	5cf1      	ldrb	r1, [r6, r3]
 8000828:	7895      	ldrb	r5, [r2, #2]
 800082a:	7850      	ldrb	r0, [r2, #1]
 800082c:	78d2      	ldrb	r2, [r2, #3]
 800082e:	042d      	lsls	r5, r5, #16
 8000830:	ea45 2500 	orr.w	r5, r5, r0, lsl #8
 8000834:	430d      	orrs	r5, r1
 8000836:	1d1f      	adds	r7, r3, #4
 8000838:	6923      	ldr	r3, [r4, #16]
 800083a:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 800083e:	429d      	cmp	r5, r3
 8000840:	d904      	bls.n	800084c <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x7e>
 8000842:	00a9      	lsls	r1, r5, #2
 8000844:	69a0      	ldr	r0, [r4, #24]
 8000846:	f005 f9b9 	bl	8005bbc <realloc>
 800084a:	61a0      	str	r0, [r4, #24]
 800084c:	6125      	str	r5, [r4, #16]
 800084e:	19f3      	adds	r3, r6, r7
 8000850:	2100      	movs	r1, #0
 8000852:	6922      	ldr	r2, [r4, #16]
 8000854:	4291      	cmp	r1, r2
 8000856:	eba3 0506 	sub.w	r5, r3, r6
 800085a:	f103 0304 	add.w	r3, r3, #4
 800085e:	d213      	bcs.n	8000888 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xba>
 8000860:	f813 2c02 	ldrb.w	r2, [r3, #-2]
 8000864:	f813 0c03 	ldrb.w	r0, [r3, #-3]
 8000868:	0412      	lsls	r2, r2, #16
 800086a:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 800086e:	f813 0c04 	ldrb.w	r0, [r3, #-4]
 8000872:	4302      	orrs	r2, r0
 8000874:	f813 0c01 	ldrb.w	r0, [r3, #-1]
 8000878:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 800087c:	69a0      	ldr	r0, [r4, #24]
 800087e:	6162      	str	r2, [r4, #20]
 8000880:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
 8000884:	3101      	adds	r1, #1
 8000886:	e7e4      	b.n	8000852 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x84>
 8000888:	1973      	adds	r3, r6, r5
 800088a:	5d72      	ldrb	r2, [r6, r5]
 800088c:	789f      	ldrb	r7, [r3, #2]
 800088e:	7859      	ldrb	r1, [r3, #1]
 8000890:	78db      	ldrb	r3, [r3, #3]
 8000892:	043f      	lsls	r7, r7, #16
 8000894:	ea47 2701 	orr.w	r7, r7, r1, lsl #8
 8000898:	4317      	orrs	r7, r2
 800089a:	ea47 6703 	orr.w	r7, r7, r3, lsl #24
 800089e:	69e3      	ldr	r3, [r4, #28]
 80008a0:	429f      	cmp	r7, r3
 80008a2:	f105 0504 	add.w	r5, r5, #4
 80008a6:	d904      	bls.n	80008b2 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xe4>
 80008a8:	00b9      	lsls	r1, r7, #2
 80008aa:	6a60      	ldr	r0, [r4, #36]	; 0x24
 80008ac:	f005 f986 	bl	8005bbc <realloc>
 80008b0:	6260      	str	r0, [r4, #36]	; 0x24
 80008b2:	61e7      	str	r7, [r4, #28]
 80008b4:	2700      	movs	r7, #0
 80008b6:	46b8      	mov	r8, r7
 80008b8:	69e3      	ldr	r3, [r4, #28]
 80008ba:	429f      	cmp	r7, r3
 80008bc:	d21a      	bcs.n	80008f4 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x126>
 80008be:	1971      	adds	r1, r6, r5
 80008c0:	a801      	add	r0, sp, #4
 80008c2:	f7ff feff 	bl	80006c4 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 80008c6:	1d2b      	adds	r3, r5, #4
 80008c8:	9d01      	ldr	r5, [sp, #4]
 80008ca:	18f2      	adds	r2, r6, r3
 80008cc:	441d      	add	r5, r3
 80008ce:	1b91      	subs	r1, r2, r6
 80008d0:	42a9      	cmp	r1, r5
 80008d2:	d204      	bcs.n	80008de <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x110>
 80008d4:	f812 1b01 	ldrb.w	r1, [r2], #1
 80008d8:	f802 1c02 	strb.w	r1, [r2, #-2]
 80008dc:	e7f7      	b.n	80008ce <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x100>
 80008de:	1972      	adds	r2, r6, r5
 80008e0:	3b01      	subs	r3, #1
 80008e2:	f802 8c01 	strb.w	r8, [r2, #-1]
 80008e6:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80008e8:	4433      	add	r3, r6
 80008ea:	6223      	str	r3, [r4, #32]
 80008ec:	f842 3027 	str.w	r3, [r2, r7, lsl #2]
 80008f0:	3701      	adds	r7, #1
 80008f2:	e7e1      	b.n	80008b8 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xea>
 80008f4:	4628      	mov	r0, r5
 80008f6:	b002      	add	sp, #8
 80008f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080008fc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>:
 80008fc:	b530      	push	{r4, r5, lr}
 80008fe:	b085      	sub	sp, #20
 8000900:	4604      	mov	r4, r0
 8000902:	4b09      	ldr	r3, [pc, #36]	; (8000928 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()+0x2c>)
 8000904:	9301      	str	r3, [sp, #4]
 8000906:	2300      	movs	r3, #0
 8000908:	9302      	str	r3, [sp, #8]
 800090a:	9303      	str	r3, [sp, #12]
 800090c:	f854 3bec 	ldr.w	r3, [r4], #236
 8000910:	aa01      	add	r2, sp, #4
 8000912:	681b      	ldr	r3, [r3, #0]
 8000914:	210a      	movs	r1, #10
 8000916:	4605      	mov	r5, r0
 8000918:	4798      	blx	r3
 800091a:	4620      	mov	r0, r4
 800091c:	f003 fefe 	bl	800471c <mbed::Timer::read_ms()>
 8000920:	f8c5 00fc 	str.w	r0, [r5, #252]	; 0xfc
 8000924:	b005      	add	sp, #20
 8000926:	bd30      	pop	{r4, r5, pc}
 8000928:	08006024 	.word	0x08006024

0800092c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()>:
 800092c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000930:	b086      	sub	sp, #24
 8000932:	4b2b      	ldr	r3, [pc, #172]	; (80009e0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xb4>)
 8000934:	9300      	str	r3, [sp, #0]
 8000936:	2200      	movs	r2, #0
 8000938:	4b2a      	ldr	r3, [pc, #168]	; (80009e4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xb8>)
 800093a:	f8ad 2004 	strh.w	r2, [sp, #4]
 800093e:	4605      	mov	r5, r0
 8000940:	9302      	str	r3, [sp, #8]
 8000942:	9303      	str	r3, [sp, #12]
 8000944:	9304      	str	r3, [sp, #16]
 8000946:	9205      	str	r2, [sp, #20]
 8000948:	f200 540c 	addw	r4, r0, #1292	; 0x50c
 800094c:	f500 66ae 	add.w	r6, r0, #1392	; 0x570
 8000950:	f44f 7700 	mov.w	r7, #512	; 0x200
 8000954:	6823      	ldr	r3, [r4, #0]
 8000956:	b1bb      	cbz	r3, 8000988 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x5c>
 8000958:	6858      	ldr	r0, [r3, #4]
 800095a:	689a      	ldr	r2, [r3, #8]
 800095c:	f8ad 2004 	strh.w	r2, [sp, #4]
 8000960:	681a      	ldr	r2, [r3, #0]
 8000962:	6803      	ldr	r3, [r0, #0]
 8000964:	9202      	str	r2, [sp, #8]
 8000966:	689b      	ldr	r3, [r3, #8]
 8000968:	4798      	blx	r3
 800096a:	6823      	ldr	r3, [r4, #0]
 800096c:	9003      	str	r0, [sp, #12]
 800096e:	6858      	ldr	r0, [r3, #4]
 8000970:	6803      	ldr	r3, [r0, #0]
 8000972:	68db      	ldr	r3, [r3, #12]
 8000974:	4798      	blx	r3
 8000976:	6821      	ldr	r1, [r4, #0]
 8000978:	682b      	ldr	r3, [r5, #0]
 800097a:	9004      	str	r0, [sp, #16]
 800097c:	9705      	str	r7, [sp, #20]
 800097e:	681b      	ldr	r3, [r3, #0]
 8000980:	6909      	ldr	r1, [r1, #16]
 8000982:	466a      	mov	r2, sp
 8000984:	4628      	mov	r0, r5
 8000986:	4798      	blx	r3
 8000988:	3404      	adds	r4, #4
 800098a:	42b4      	cmp	r4, r6
 800098c:	d1e2      	bne.n	8000954 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x28>
 800098e:	f205 56d4 	addw	r6, r5, #1492	; 0x5d4
 8000992:	f44f 7700 	mov.w	r7, #512	; 0x200
 8000996:	6820      	ldr	r0, [r4, #0]
 8000998:	b1c8      	cbz	r0, 80009ce <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xa2>
 800099a:	6843      	ldr	r3, [r0, #4]
 800099c:	f8ad 3004 	strh.w	r3, [sp, #4]
 80009a0:	6883      	ldr	r3, [r0, #8]
 80009a2:	9302      	str	r3, [sp, #8]
 80009a4:	6803      	ldr	r3, [r0, #0]
 80009a6:	689b      	ldr	r3, [r3, #8]
 80009a8:	4798      	blx	r3
 80009aa:	9003      	str	r0, [sp, #12]
 80009ac:	6820      	ldr	r0, [r4, #0]
 80009ae:	6803      	ldr	r3, [r0, #0]
 80009b0:	68db      	ldr	r3, [r3, #12]
 80009b2:	4798      	blx	r3
 80009b4:	682b      	ldr	r3, [r5, #0]
 80009b6:	9004      	str	r0, [sp, #16]
 80009b8:	6820      	ldr	r0, [r4, #0]
 80009ba:	f8d3 8000 	ldr.w	r8, [r3]
 80009be:	6803      	ldr	r3, [r0, #0]
 80009c0:	9705      	str	r7, [sp, #20]
 80009c2:	685b      	ldr	r3, [r3, #4]
 80009c4:	4798      	blx	r3
 80009c6:	466a      	mov	r2, sp
 80009c8:	4601      	mov	r1, r0
 80009ca:	4628      	mov	r0, r5
 80009cc:	47c0      	blx	r8
 80009ce:	3404      	adds	r4, #4
 80009d0:	42a6      	cmp	r6, r4
 80009d2:	d1e0      	bne.n	8000996 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x6a>
 80009d4:	2301      	movs	r3, #1
 80009d6:	f885 35e8 	strb.w	r3, [r5, #1512]	; 0x5e8
 80009da:	b006      	add	sp, #24
 80009dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80009e0:	0800603c 	.word	0x0800603c
 80009e4:	080062ef 	.word	0x080062ef

080009e8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)>:
 80009e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80009ea:	b085      	sub	sp, #20
 80009ec:	f100 05ec 	add.w	r5, r0, #236	; 0xec
 80009f0:	4b1f      	ldr	r3, [pc, #124]	; (8000a70 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x88>)
 80009f2:	9301      	str	r3, [sp, #4]
 80009f4:	4604      	mov	r4, r0
 80009f6:	2300      	movs	r3, #0
 80009f8:	4628      	mov	r0, r5
 80009fa:	9302      	str	r3, [sp, #8]
 80009fc:	9303      	str	r3, [sp, #12]
 80009fe:	460e      	mov	r6, r1
 8000a00:	f003 fe8c 	bl	800471c <mbed::Timer::read_ms()>
 8000a04:	f8d4 20fc 	ldr.w	r2, [r4, #252]	; 0xfc
 8000a08:	4631      	mov	r1, r6
 8000a0a:	1a87      	subs	r7, r0, r2
 8000a0c:	a801      	add	r0, sp, #4
 8000a0e:	f7ff fc0b 	bl	8000228 <std_msgs::Time::deserialize(unsigned char*)>
 8000a12:	9b02      	ldr	r3, [sp, #8]
 8000a14:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
 8000a18:	fbb7 f2f6 	udiv	r2, r7, r6
 8000a1c:	4413      	add	r3, r2
 8000a1e:	9302      	str	r3, [sp, #8]
 8000a20:	fb06 7212 	mls	r2, r6, r2, r7
 8000a24:	9b03      	ldr	r3, [sp, #12]
 8000a26:	4f13      	ldr	r7, [pc, #76]	; (8000a74 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x8c>)
 8000a28:	4628      	mov	r0, r5
 8000a2a:	fb07 3202 	mla	r2, r7, r2, r3
 8000a2e:	9203      	str	r2, [sp, #12]
 8000a30:	f003 fe74 	bl	800471c <mbed::Timer::read_ms()>
 8000a34:	9a02      	ldr	r2, [sp, #8]
 8000a36:	fbb0 f3f6 	udiv	r3, r0, r6
 8000a3a:	3a01      	subs	r2, #1
 8000a3c:	1ad2      	subs	r2, r2, r3
 8000a3e:	9903      	ldr	r1, [sp, #12]
 8000a40:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8000a44:	4a0c      	ldr	r2, [pc, #48]	; (8000a78 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x90>)
 8000a46:	fb06 0313 	mls	r3, r6, r3, r0
 8000a4a:	440a      	add	r2, r1
 8000a4c:	fb07 2313 	mls	r3, r7, r3, r2
 8000a50:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 8000a54:	f504 7182 	add.w	r1, r4, #260	; 0x104
 8000a58:	f504 7080 	add.w	r0, r4, #256	; 0x100
 8000a5c:	f000 fb4c 	bl	80010f8 <ros::normalizeSecNSec(unsigned long&, unsigned long&)>
 8000a60:	4628      	mov	r0, r5
 8000a62:	f003 fe5b 	bl	800471c <mbed::Timer::read_ms()>
 8000a66:	f8c4 05f0 	str.w	r0, [r4, #1520]	; 0x5f0
 8000a6a:	b005      	add	sp, #20
 8000a6c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000a6e:	bf00      	nop
 8000a70:	08006024 	.word	0x08006024
 8000a74:	000f4240 	.word	0x000f4240
 8000a78:	3b9aca00 	.word	0x3b9aca00

08000a7c <_GLOBAL__sub_I_nh>:
 8000a7c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8000a80:	4c5a      	ldr	r4, [pc, #360]	; (8000bec <_GLOBAL__sub_I_nh+0x170>)
 8000a82:	4b5b      	ldr	r3, [pc, #364]	; (8000bf0 <_GLOBAL__sub_I_nh+0x174>)
 8000a84:	4f5b      	ldr	r7, [pc, #364]	; (8000bf4 <_GLOBAL__sub_I_nh+0x178>)
 8000a86:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8000c38 <_GLOBAL__sub_I_nh+0x1bc>
 8000a8a:	4620      	mov	r0, r4
 8000a8c:	2500      	movs	r5, #0
 8000a8e:	f840 3b04 	str.w	r3, [r0], #4
 8000a92:	2304      	movs	r3, #4
 8000a94:	2203      	movs	r2, #3
 8000a96:	2102      	movs	r1, #2
 8000a98:	f104 06ec 	add.w	r6, r4, #236	; 0xec
 8000a9c:	e88d 0028 	stmia.w	sp, {r3, r5}
 8000aa0:	f44f 7380 	mov.w	r3, #256	; 0x100
 8000aa4:	f000 fc1e 	bl	80012e4 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)>
 8000aa8:	4630      	mov	r0, r6
 8000aaa:	f003 fe4d 	bl	8004748 <mbed::Timer::Timer()>
 8000aae:	f44f 4361 	mov.w	r3, #57600	; 0xe100
 8000ab2:	f8c4 30e8 	str.w	r3, [r4, #232]	; 0xe8
 8000ab6:	4630      	mov	r0, r6
 8000ab8:	f44f 7600 	mov.w	r6, #512	; 0x200
 8000abc:	f003 fe02 	bl	80046c4 <mbed::Timer::start()>
 8000ac0:	4632      	mov	r2, r6
 8000ac2:	4629      	mov	r1, r5
 8000ac4:	f504 7086 	add.w	r0, r4, #268	; 0x10c
 8000ac8:	f8c4 50fc 	str.w	r5, [r4, #252]	; 0xfc
 8000acc:	f8c4 5100 	str.w	r5, [r4, #256]	; 0x100
 8000ad0:	f8c4 5104 	str.w	r5, [r4, #260]	; 0x104
 8000ad4:	f8c4 5108 	str.w	r5, [r4, #264]	; 0x108
 8000ad8:	f004 fdff 	bl	80056da <memset>
 8000adc:	4632      	mov	r2, r6
 8000ade:	4629      	mov	r1, r5
 8000ae0:	2664      	movs	r6, #100	; 0x64
 8000ae2:	f504 7043 	add.w	r0, r4, #780	; 0x30c
 8000ae6:	f004 fdf8 	bl	80056da <memset>
 8000aea:	4632      	mov	r2, r6
 8000aec:	4629      	mov	r1, r5
 8000aee:	f204 500c 	addw	r0, r4, #1292	; 0x50c
 8000af2:	f004 fdf2 	bl	80056da <memset>
 8000af6:	4632      	mov	r2, r6
 8000af8:	4629      	mov	r1, r5
 8000afa:	f504 60ae 	add.w	r0, r4, #1392	; 0x570
 8000afe:	f004 fdec 	bl	80056da <memset>
 8000b02:	4b3d      	ldr	r3, [pc, #244]	; (8000bf8 <_GLOBAL__sub_I_nh+0x17c>)
 8000b04:	f8c4 35fc 	str.w	r3, [r4, #1532]	; 0x5fc
 8000b08:	f504 63c2 	add.w	r3, r4, #1552	; 0x610
 8000b0c:	2600      	movs	r6, #0
 8000b0e:	f8c4 55d4 	str.w	r5, [r4, #1492]	; 0x5d4
 8000b12:	f8c4 55d8 	str.w	r5, [r4, #1496]	; 0x5d8
 8000b16:	f8c4 55dc 	str.w	r5, [r4, #1500]	; 0x5dc
 8000b1a:	f8c4 55e0 	str.w	r5, [r4, #1504]	; 0x5e0
 8000b1e:	f8c4 55e4 	str.w	r5, [r4, #1508]	; 0x5e4
 8000b22:	f884 55e8 	strb.w	r5, [r4, #1512]	; 0x5e8
 8000b26:	f8c4 55ec 	str.w	r5, [r4, #1516]	; 0x5ec
 8000b2a:	f8c4 55f0 	str.w	r5, [r4, #1520]	; 0x5f0
 8000b2e:	f8c4 55f4 	str.w	r5, [r4, #1524]	; 0x5f4
 8000b32:	f884 55f8 	strb.w	r5, [r4, #1528]	; 0x5f8
 8000b36:	f8c4 5600 	str.w	r5, [r4, #1536]	; 0x600
 8000b3a:	f8c4 5604 	str.w	r5, [r4, #1540]	; 0x604
 8000b3e:	f8c4 5608 	str.w	r5, [r4, #1544]	; 0x608
 8000b42:	f8c4 560c 	str.w	r5, [r4, #1548]	; 0x60c
 8000b46:	601e      	str	r6, [r3, #0]
 8000b48:	f8c4 5614 	str.w	r5, [r4, #1556]	; 0x614
 8000b4c:	f8c4 5618 	str.w	r5, [r4, #1560]	; 0x618
 8000b50:	f8c4 561c 	str.w	r5, [r4, #1564]	; 0x61c
 8000b54:	f8c4 5620 	str.w	r5, [r4, #1568]	; 0x620
 8000b58:	4a28      	ldr	r2, [pc, #160]	; (8000bfc <_GLOBAL__sub_I_nh+0x180>)
 8000b5a:	4929      	ldr	r1, [pc, #164]	; (8000c00 <_GLOBAL__sub_I_nh+0x184>)
 8000b5c:	4620      	mov	r0, r4
 8000b5e:	4c29      	ldr	r4, [pc, #164]	; (8000c04 <_GLOBAL__sub_I_nh+0x188>)
 8000b60:	f004 f85e 	bl	8004c20 <__aeabi_atexit>
 8000b64:	4b28      	ldr	r3, [pc, #160]	; (8000c08 <_GLOBAL__sub_I_nh+0x18c>)
 8000b66:	6023      	str	r3, [r4, #0]
 8000b68:	2314      	movs	r3, #20
 8000b6a:	f8c7 8000 	str.w	r8, [r7]
 8000b6e:	607e      	str	r6, [r7, #4]
 8000b70:	60be      	str	r6, [r7, #8]
 8000b72:	60fe      	str	r6, [r7, #12]
 8000b74:	613e      	str	r6, [r7, #16]
 8000b76:	6066      	str	r6, [r4, #4]
 8000b78:	60a6      	str	r6, [r4, #8]
 8000b7a:	60e6      	str	r6, [r4, #12]
 8000b7c:	6126      	str	r6, [r4, #16]
 8000b7e:	6166      	str	r6, [r4, #20]
 8000b80:	61a6      	str	r6, [r4, #24]
 8000b82:	61e6      	str	r6, [r4, #28]
 8000b84:	2215      	movs	r2, #21
 8000b86:	9300      	str	r3, [sp, #0]
 8000b88:	210a      	movs	r1, #10
 8000b8a:	2313      	movs	r3, #19
 8000b8c:	481f      	ldr	r0, [pc, #124]	; (8000c0c <_GLOBAL__sub_I_nh+0x190>)
 8000b8e:	f7ff fc40 	bl	8000412 <DCmotor::DCmotor(PinName, PinName, PinName, PinName)>
 8000b92:	2327      	movs	r3, #39	; 0x27
 8000b94:	9300      	str	r3, [sp, #0]
 8000b96:	2209      	movs	r2, #9
 8000b98:	231a      	movs	r3, #26
 8000b9a:	2108      	movs	r1, #8
 8000b9c:	481c      	ldr	r0, [pc, #112]	; (8000c10 <_GLOBAL__sub_I_nh+0x194>)
 8000b9e:	f7ff fc38 	bl	8000412 <DCmotor::DCmotor(PinName, PinName, PinName, PinName)>
 8000ba2:	2307      	movs	r3, #7
 8000ba4:	9300      	str	r3, [sp, #0]
 8000ba6:	2205      	movs	r2, #5
 8000ba8:	2316      	movs	r3, #22
 8000baa:	2106      	movs	r1, #6
 8000bac:	4819      	ldr	r0, [pc, #100]	; (8000c14 <_GLOBAL__sub_I_nh+0x198>)
 8000bae:	f7ff fc30 	bl	8000412 <DCmotor::DCmotor(PinName, PinName, PinName, PinName)>
 8000bb2:	4b19      	ldr	r3, [pc, #100]	; (8000c18 <_GLOBAL__sub_I_nh+0x19c>)
 8000bb4:	4a19      	ldr	r2, [pc, #100]	; (8000c1c <_GLOBAL__sub_I_nh+0x1a0>)
 8000bb6:	601a      	str	r2, [r3, #0]
 8000bb8:	4a19      	ldr	r2, [pc, #100]	; (8000c20 <_GLOBAL__sub_I_nh+0x1a4>)
 8000bba:	621a      	str	r2, [r3, #32]
 8000bbc:	2201      	movs	r2, #1
 8000bbe:	625a      	str	r2, [r3, #36]	; 0x24
 8000bc0:	4a18      	ldr	r2, [pc, #96]	; (8000c24 <_GLOBAL__sub_I_nh+0x1a8>)
 8000bc2:	611e      	str	r6, [r3, #16]
 8000bc4:	609a      	str	r2, [r3, #8]
 8000bc6:	f8c3 800c 	str.w	r8, [r3, #12]
 8000bca:	615e      	str	r6, [r3, #20]
 8000bcc:	619e      	str	r6, [r3, #24]
 8000bce:	61de      	str	r6, [r3, #28]
 8000bd0:	4a15      	ldr	r2, [pc, #84]	; (8000c28 <_GLOBAL__sub_I_nh+0x1ac>)
 8000bd2:	4b16      	ldr	r3, [pc, #88]	; (8000c2c <_GLOBAL__sub_I_nh+0x1b0>)
 8000bd4:	e883 0084 	stmia.w	r3, {r2, r7}
 8000bd8:	611d      	str	r5, [r3, #16]
 8000bda:	4a15      	ldr	r2, [pc, #84]	; (8000c30 <_GLOBAL__sub_I_nh+0x1b4>)
 8000bdc:	4b15      	ldr	r3, [pc, #84]	; (8000c34 <_GLOBAL__sub_I_nh+0x1b8>)
 8000bde:	e883 0014 	stmia.w	r3, {r2, r4}
 8000be2:	611d      	str	r5, [r3, #16]
 8000be4:	b002      	add	sp, #8
 8000be6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000bea:	bf00      	nop
 8000bec:	200003f8 	.word	0x200003f8
 8000bf0:	080060b4 	.word	0x080060b4
 8000bf4:	20000294 	.word	0x20000294
 8000bf8:	0800606c 	.word	0x0800606c
 8000bfc:	20000194 	.word	0x20000194
 8000c00:	080010e1 	.word	0x080010e1
 8000c04:	20000260 	.word	0x20000260
 8000c08:	0800609c 	.word	0x0800609c
 8000c0c:	20000388 	.word	0x20000388
 8000c10:	20000318 	.word	0x20000318
 8000c14:	200002a8 	.word	0x200002a8
 8000c18:	20000a1c 	.word	0x20000a1c
 8000c1c:	080060c8 	.word	0x080060c8
 8000c20:	080004dd 	.word	0x080004dd
 8000c24:	080060d8 	.word	0x080060d8
 8000c28:	080060f5 	.word	0x080060f5
 8000c2c:	2000024c 	.word	0x2000024c
 8000c30:	080060f1 	.word	0x080060f1
 8000c34:	20000280 	.word	0x20000280
 8000c38:	08006084 	.word	0x08006084

08000c3c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)>:
 8000c3c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000c3e:	2963      	cmp	r1, #99	; 0x63
 8000c40:	b085      	sub	sp, #20
 8000c42:	4604      	mov	r4, r0
 8000c44:	460e      	mov	r6, r1
 8000c46:	dd03      	ble.n	8000c50 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x14>
 8000c48:	f890 55e8 	ldrb.w	r5, [r0, #1512]	; 0x5e8
 8000c4c:	2d00      	cmp	r5, #0
 8000c4e:	d04d      	beq.n	8000cec <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb0>
 8000c50:	6813      	ldr	r3, [r2, #0]
 8000c52:	f204 3113 	addw	r1, r4, #787	; 0x313
 8000c56:	681b      	ldr	r3, [r3, #0]
 8000c58:	4610      	mov	r0, r2
 8000c5a:	4798      	blx	r3
 8000c5c:	23ff      	movs	r3, #255	; 0xff
 8000c5e:	f884 330c 	strb.w	r3, [r4, #780]	; 0x30c
 8000c62:	23fe      	movs	r3, #254	; 0xfe
 8000c64:	f3c0 2207 	ubfx	r2, r0, #8, #8
 8000c68:	f884 330d 	strb.w	r3, [r4, #781]	; 0x30d
 8000c6c:	b2c3      	uxtb	r3, r0
 8000c6e:	f884 330e 	strb.w	r3, [r4, #782]	; 0x30e
 8000c72:	4413      	add	r3, r2
 8000c74:	43db      	mvns	r3, r3
 8000c76:	f884 6311 	strb.w	r6, [r4, #785]	; 0x311
 8000c7a:	f346 2607 	sbfx	r6, r6, #8, #8
 8000c7e:	f884 230f 	strb.w	r2, [r4, #783]	; 0x30f
 8000c82:	f884 3310 	strb.w	r3, [r4, #784]	; 0x310
 8000c86:	f884 6312 	strb.w	r6, [r4, #786]	; 0x312
 8000c8a:	f204 3111 	addw	r1, r4, #785	; 0x311
 8000c8e:	2205      	movs	r2, #5
 8000c90:	2300      	movs	r3, #0
 8000c92:	1d86      	adds	r6, r0, #6
 8000c94:	42b2      	cmp	r2, r6
 8000c96:	dc04      	bgt.n	8000ca2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x66>
 8000c98:	f811 5b01 	ldrb.w	r5, [r1], #1
 8000c9c:	3201      	adds	r2, #1
 8000c9e:	442b      	add	r3, r5
 8000ca0:	e7f8      	b.n	8000c94 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x58>
 8000ca2:	f100 0508 	add.w	r5, r0, #8
 8000ca6:	4420      	add	r0, r4
 8000ca8:	43db      	mvns	r3, r3
 8000caa:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 8000cae:	f880 3313 	strb.w	r3, [r0, #787]	; 0x313
 8000cb2:	dc0c      	bgt.n	8000cce <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x92>
 8000cb4:	f504 7743 	add.w	r7, r4, #780	; 0x30c
 8000cb8:	463e      	mov	r6, r7
 8000cba:	3404      	adds	r4, #4
 8000cbc:	1bf3      	subs	r3, r6, r7
 8000cbe:	429d      	cmp	r5, r3
 8000cc0:	dd14      	ble.n	8000cec <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb0>
 8000cc2:	f816 1b01 	ldrb.w	r1, [r6], #1
 8000cc6:	4620      	mov	r0, r4
 8000cc8:	f000 fb7c 	bl	80013c4 <BufferedSerial::putc(int)>
 8000ccc:	e7f6      	b.n	8000cbc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x80>
 8000cce:	4b09      	ldr	r3, [pc, #36]	; (8000cf4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb8>)
 8000cd0:	9301      	str	r3, [sp, #4]
 8000cd2:	2303      	movs	r3, #3
 8000cd4:	f88d 3008 	strb.w	r3, [sp, #8]
 8000cd8:	4b07      	ldr	r3, [pc, #28]	; (8000cf8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xbc>)
 8000cda:	9303      	str	r3, [sp, #12]
 8000cdc:	6823      	ldr	r3, [r4, #0]
 8000cde:	aa01      	add	r2, sp, #4
 8000ce0:	681b      	ldr	r3, [r3, #0]
 8000ce2:	2107      	movs	r1, #7
 8000ce4:	4620      	mov	r0, r4
 8000ce6:	4798      	blx	r3
 8000ce8:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 8000cec:	4628      	mov	r0, r5
 8000cee:	b005      	add	sp, #20
 8000cf0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000cf2:	bf00      	nop
 8000cf4:	08006054 	.word	0x08006054
 8000cf8:	080061a8 	.word	0x080061a8

08000cfc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()>:
 8000cfc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, r11, lr}
 8000d00:	f100 09ec 	add.w	r9, r0, #236	; 0xec
 8000d04:	4604      	mov	r4, r0
 8000d06:	4648      	mov	r0, r9
 8000d08:	f003 fd08 	bl	800471c <mbed::Timer::read_ms()>
 8000d0c:	f8d4 35f0 	ldr.w	r3, [r4, #1520]	; 0x5f0
 8000d10:	f642 22f8 	movw	r2, #11000	; 0x2af8
 8000d14:	1ac3      	subs	r3, r0, r3
 8000d16:	4293      	cmp	r3, r2
 8000d18:	bf84      	itt	hi
 8000d1a:	2300      	movhi	r3, #0
 8000d1c:	f884 35e8 	strbhi.w	r3, [r4, #1512]	; 0x5e8
 8000d20:	f8d4 35d4 	ldr.w	r3, [r4, #1492]	; 0x5d4
 8000d24:	4605      	mov	r5, r0
 8000d26:	b133      	cbz	r3, 8000d36 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x3a>
 8000d28:	f8d4 35f4 	ldr.w	r3, [r4, #1524]	; 0x5f4
 8000d2c:	4283      	cmp	r3, r0
 8000d2e:	bf3c      	itt	cc
 8000d30:	2300      	movcc	r3, #0
 8000d32:	f8c4 35d4 	strcc.w	r3, [r4, #1492]	; 0x5d4
 8000d36:	2700      	movs	r7, #0
 8000d38:	46ba      	mov	r10, r7
 8000d3a:	f104 0b04 	add.w	r11, r4, #4
 8000d3e:	463e      	mov	r6, r7
 8000d40:	f504 7886 	add.w	r8, r4, #268	; 0x10c
 8000d44:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8000d48:	b9e3      	cbnz	r3, 8000d84 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x88>
 8000d4a:	4658      	mov	r0, r11
 8000d4c:	f000 f9e2 	bl	8001114 <BufferedSerial::readable()>
 8000d50:	bb18      	cbnz	r0, 8000d9a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x9e>
 8000d52:	f894 35e8 	ldrb.w	r3, [r4, #1512]	; 0x5e8
 8000d56:	b15b      	cbz	r3, 8000d70 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x74>
 8000d58:	f8d4 35ec 	ldr.w	r3, [r4, #1516]	; 0x5ec
 8000d5c:	f640 12c4 	movw	r2, #2500	; 0x9c4
 8000d60:	1aeb      	subs	r3, r5, r3
 8000d62:	4293      	cmp	r3, r2
 8000d64:	d904      	bls.n	8000d70 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x74>
 8000d66:	4620      	mov	r0, r4
 8000d68:	f7ff fdc8 	bl	80008fc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 8000d6c:	f8c4 55ec 	str.w	r5, [r4, #1516]	; 0x5ec
 8000d70:	2f00      	cmp	r7, #0
 8000d72:	f040 80d7 	bne.w	8000f24 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x228>
 8000d76:	f1ba 0f00 	cmp.w	r10, #0
 8000d7a:	bf14      	ite	ne
 8000d7c:	f06f 0002 	mvnne.w	r0, #2
 8000d80:	2000      	moveq	r0, #0
 8000d82:	e0a7      	b.n	8000ed4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1d8>
 8000d84:	4648      	mov	r0, r9
 8000d86:	f003 fcc9 	bl	800471c <mbed::Timer::read_ms()>
 8000d8a:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8000d8e:	1b40      	subs	r0, r0, r5
 8000d90:	4298      	cmp	r0, r3
 8000d92:	d9da      	bls.n	8000d4a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x4e>
 8000d94:	f06f 0001 	mvn.w	r0, #1
 8000d98:	e09c      	b.n	8000ed4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1d8>
 8000d9a:	4658      	mov	r0, r11
 8000d9c:	f000 f9c4 	bl	8001128 <BufferedSerial::getc()>
 8000da0:	2800      	cmp	r0, #0
 8000da2:	dbd6      	blt.n	8000d52 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x56>
 8000da4:	f8d4 35e4 	ldr.w	r3, [r4, #1508]	; 0x5e4
 8000da8:	f8d4 25d4 	ldr.w	r2, [r4, #1492]	; 0x5d4
 8000dac:	4403      	add	r3, r0
 8000dae:	2a07      	cmp	r2, #7
 8000db0:	f8c4 35e4 	str.w	r3, [r4, #1508]	; 0x5e4
 8000db4:	d110      	bne.n	8000dd8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xdc>
 8000db6:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 8000dba:	1c5a      	adds	r2, r3, #1
 8000dbc:	4423      	add	r3, r4
 8000dbe:	f8c4 25e0 	str.w	r2, [r4, #1504]	; 0x5e0
 8000dc2:	f883 010c 	strb.w	r0, [r3, #268]	; 0x10c
 8000dc6:	f8d4 35d8 	ldr.w	r3, [r4, #1496]	; 0x5d8
 8000dca:	3b01      	subs	r3, #1
 8000dcc:	f8c4 35d8 	str.w	r3, [r4, #1496]	; 0x5d8
 8000dd0:	2b00      	cmp	r3, #0
 8000dd2:	d1b7      	bne.n	8000d44 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 8000dd4:	2308      	movs	r3, #8
 8000dd6:	e01c      	b.n	8000e12 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x116>
 8000dd8:	b9b2      	cbnz	r2, 8000e08 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x10c>
 8000dda:	28ff      	cmp	r0, #255	; 0xff
 8000ddc:	d107      	bne.n	8000dee <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xf2>
 8000dde:	2301      	movs	r3, #1
 8000de0:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8000de4:	f105 0314 	add.w	r3, r5, #20
 8000de8:	f8c4 35f4 	str.w	r3, [r4, #1524]	; 0x5f4
 8000dec:	e7aa      	b.n	8000d44 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 8000dee:	4648      	mov	r0, r9
 8000df0:	9201      	str	r2, [sp, #4]
 8000df2:	f003 fc93 	bl	800471c <mbed::Timer::read_ms()>
 8000df6:	f241 3388 	movw	r3, #5000	; 0x1388
 8000dfa:	1b40      	subs	r0, r0, r5
 8000dfc:	4298      	cmp	r0, r3
 8000dfe:	9a01      	ldr	r2, [sp, #4]
 8000e00:	d9a0      	bls.n	8000d44 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 8000e02:	f884 25e8 	strb.w	r2, [r4, #1512]	; 0x5e8
 8000e06:	e7c5      	b.n	8000d94 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x98>
 8000e08:	2a01      	cmp	r2, #1
 8000e0a:	d10f      	bne.n	8000e2c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x130>
 8000e0c:	28fe      	cmp	r0, #254	; 0xfe
 8000e0e:	d103      	bne.n	8000e18 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x11c>
 8000e10:	2302      	movs	r3, #2
 8000e12:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8000e16:	e795      	b.n	8000d44 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 8000e18:	f894 35e8 	ldrb.w	r3, [r4, #1512]	; 0x5e8
 8000e1c:	f8c4 65d4 	str.w	r6, [r4, #1492]	; 0x5d4
 8000e20:	2b00      	cmp	r3, #0
 8000e22:	d18f      	bne.n	8000d44 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 8000e24:	4620      	mov	r0, r4
 8000e26:	f7ff fd69 	bl	80008fc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 8000e2a:	e78b      	b.n	8000d44 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 8000e2c:	2a02      	cmp	r2, #2
 8000e2e:	d109      	bne.n	8000e44 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x148>
 8000e30:	f8c4 05d8 	str.w	r0, [r4, #1496]	; 0x5d8
 8000e34:	f8c4 65e0 	str.w	r6, [r4, #1504]	; 0x5e0
 8000e38:	2303      	movs	r3, #3
 8000e3a:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8000e3e:	f8c4 05e4 	str.w	r0, [r4, #1508]	; 0x5e4
 8000e42:	e77f      	b.n	8000d44 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 8000e44:	2a03      	cmp	r2, #3
 8000e46:	d107      	bne.n	8000e58 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x15c>
 8000e48:	f8d4 35d8 	ldr.w	r3, [r4, #1496]	; 0x5d8
 8000e4c:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 8000e50:	f8c4 05d8 	str.w	r0, [r4, #1496]	; 0x5d8
 8000e54:	2304      	movs	r3, #4
 8000e56:	e7dc      	b.n	8000e12 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x116>
 8000e58:	2a04      	cmp	r2, #4
 8000e5a:	d10b      	bne.n	8000e74 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x178>
 8000e5c:	425a      	negs	r2, r3
 8000e5e:	b2d2      	uxtb	r2, r2
 8000e60:	b2db      	uxtb	r3, r3
 8000e62:	bf58      	it	pl
 8000e64:	4253      	negpl	r3, r2
 8000e66:	2bff      	cmp	r3, #255	; 0xff
 8000e68:	d101      	bne.n	8000e6e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x172>
 8000e6a:	2305      	movs	r3, #5
 8000e6c:	e7d1      	b.n	8000e12 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x116>
 8000e6e:	f8c4 65d4 	str.w	r6, [r4, #1492]	; 0x5d4
 8000e72:	e767      	b.n	8000d44 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 8000e74:	2a05      	cmp	r2, #5
 8000e76:	d103      	bne.n	8000e80 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x184>
 8000e78:	f8c4 05dc 	str.w	r0, [r4, #1500]	; 0x5dc
 8000e7c:	2306      	movs	r3, #6
 8000e7e:	e7dc      	b.n	8000e3a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x13e>
 8000e80:	2a06      	cmp	r2, #6
 8000e82:	d10b      	bne.n	8000e9c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1a0>
 8000e84:	f8d4 35dc 	ldr.w	r3, [r4, #1500]	; 0x5dc
 8000e88:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 8000e8c:	2307      	movs	r3, #7
 8000e8e:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8000e92:	f8c4 05dc 	str.w	r0, [r4, #1500]	; 0x5dc
 8000e96:	f8d4 35d8 	ldr.w	r3, [r4, #1496]	; 0x5d8
 8000e9a:	e799      	b.n	8000dd0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xd4>
 8000e9c:	2a08      	cmp	r2, #8
 8000e9e:	f47f af51 	bne.w	8000d44 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 8000ea2:	425a      	negs	r2, r3
 8000ea4:	b2d2      	uxtb	r2, r2
 8000ea6:	b2db      	uxtb	r3, r3
 8000ea8:	bf58      	it	pl
 8000eaa:	4253      	negpl	r3, r2
 8000eac:	2bff      	cmp	r3, #255	; 0xff
 8000eae:	f8c4 65d4 	str.w	r6, [r4, #1492]	; 0x5d4
 8000eb2:	f47f af47 	bne.w	8000d44 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 8000eb6:	f8d4 35dc 	ldr.w	r3, [r4, #1500]	; 0x5dc
 8000eba:	b973      	cbnz	r3, 8000eda <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1de>
 8000ebc:	4620      	mov	r0, r4
 8000ebe:	f7ff fd1d 	bl	80008fc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 8000ec2:	4620      	mov	r0, r4
 8000ec4:	f7ff fd32 	bl	800092c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()>
 8000ec8:	f8c4 55ec 	str.w	r5, [r4, #1516]	; 0x5ec
 8000ecc:	f8c4 55f0 	str.w	r5, [r4, #1520]	; 0x5f0
 8000ed0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000ed4:	b003      	add	sp, #12
 8000ed6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
 8000eda:	2b0a      	cmp	r3, #10
 8000edc:	d105      	bne.n	8000eea <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1ee>
 8000ede:	4641      	mov	r1, r8
 8000ee0:	4620      	mov	r0, r4
 8000ee2:	f7ff fd81 	bl	80009e8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)>
 8000ee6:	2701      	movs	r7, #1
 8000ee8:	e72c      	b.n	8000d44 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 8000eea:	2b06      	cmp	r3, #6
 8000eec:	d108      	bne.n	8000f00 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x204>
 8000eee:	4641      	mov	r1, r8
 8000ef0:	f204 50fc 	addw	r0, r4, #1532	; 0x5fc
 8000ef4:	f7ff fc6b 	bl	80007ce <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)>
 8000ef8:	2301      	movs	r3, #1
 8000efa:	f884 35f8 	strb.w	r3, [r4, #1528]	; 0x5f8
 8000efe:	e721      	b.n	8000d44 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 8000f00:	2b0b      	cmp	r3, #11
 8000f02:	d104      	bne.n	8000f0e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x212>
 8000f04:	f884 65e8 	strb.w	r6, [r4, #1512]	; 0x5e8
 8000f08:	f04f 0a01 	mov.w	r10, #1
 8000f0c:	e71a      	b.n	8000d44 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 8000f0e:	33f8      	adds	r3, #248	; 0xf8
 8000f10:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8000f14:	2800      	cmp	r0, #0
 8000f16:	f43f af15 	beq.w	8000d44 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 8000f1a:	6803      	ldr	r3, [r0, #0]
 8000f1c:	4641      	mov	r1, r8
 8000f1e:	681b      	ldr	r3, [r3, #0]
 8000f20:	4798      	blx	r3
 8000f22:	e70f      	b.n	8000d44 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 8000f24:	f06f 0003 	mvn.w	r0, #3
 8000f28:	e7d4      	b.n	8000ed4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1d8>
 8000f2a:	0000      	movs	r0, r0
 8000f2c:	0000      	movs	r0, r0
	...

08000f30 <main>:
 8000f30:	4c5d      	ldr	r4, [pc, #372]	; (80010a8 <main+0x178>)
 8000f32:	b580      	push	{r7, lr}
 8000f34:	f8d4 10e8 	ldr.w	r1, [r4, #232]	; 0xe8
 8000f38:	1d20      	adds	r0, r4, #4
 8000f3a:	f003 fc6b 	bl	8004814 <mbed::SerialBase::baud(int)>
 8000f3e:	2300      	movs	r3, #0
 8000f40:	f504 62a1 	add.w	r2, r4, #1288	; 0x508
 8000f44:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8000f48:	f8c4 35d8 	str.w	r3, [r4, #1496]	; 0x5d8
 8000f4c:	f8c4 35e0 	str.w	r3, [r4, #1504]	; 0x5e0
 8000f50:	f8c4 35dc 	str.w	r3, [r4, #1500]	; 0x5dc
 8000f54:	4611      	mov	r1, r2
 8000f56:	f851 0f04 	ldr.w	r0, [r1, #4]!
 8000f5a:	2800      	cmp	r0, #0
 8000f5c:	f040 808e 	bne.w	800107c <main+0x14c>
 8000f60:	4952      	ldr	r1, [pc, #328]	; (80010ac <main+0x17c>)
 8000f62:	eb04 0083 	add.w	r0, r4, r3, lsl #2
 8000f66:	337d      	adds	r3, #125	; 0x7d
 8000f68:	f8c0 150c 	str.w	r1, [r0, #1292]	; 0x50c
 8000f6c:	608b      	str	r3, [r1, #8]
 8000f6e:	60cc      	str	r4, [r1, #12]
 8000f70:	2300      	movs	r3, #0
 8000f72:	f852 1f04 	ldr.w	r1, [r2, #4]!
 8000f76:	2900      	cmp	r1, #0
 8000f78:	f040 8085 	bne.w	8001086 <main+0x156>
 8000f7c:	4a4c      	ldr	r2, [pc, #304]	; (80010b0 <main+0x180>)
 8000f7e:	eb04 0183 	add.w	r1, r4, r3, lsl #2
 8000f82:	337d      	adds	r3, #125	; 0x7d
 8000f84:	f8c1 250c 	str.w	r2, [r1, #1292]	; 0x50c
 8000f88:	6093      	str	r3, [r2, #8]
 8000f8a:	60d4      	str	r4, [r2, #12]
 8000f8c:	4a49      	ldr	r2, [pc, #292]	; (80010b4 <main+0x184>)
 8000f8e:	2300      	movs	r3, #0
 8000f90:	f852 1f04 	ldr.w	r1, [r2, #4]!
 8000f94:	2900      	cmp	r1, #0
 8000f96:	d17b      	bne.n	8001090 <main+0x160>
 8000f98:	f503 71ae 	add.w	r1, r3, #348	; 0x15c
 8000f9c:	4a46      	ldr	r2, [pc, #280]	; (80010b8 <main+0x188>)
 8000f9e:	f844 2021 	str.w	r2, [r4, r1, lsl #2]
 8000fa2:	3364      	adds	r3, #100	; 0x64
 8000fa4:	6053      	str	r3, [r2, #4]
 8000fa6:	4c45      	ldr	r4, [pc, #276]	; (80010bc <main+0x18c>)
 8000fa8:	4b45      	ldr	r3, [pc, #276]	; (80010c0 <main+0x190>)
 8000faa:	6063      	str	r3, [r4, #4]
 8000fac:	4b45      	ldr	r3, [pc, #276]	; (80010c4 <main+0x194>)
 8000fae:	60a3      	str	r3, [r4, #8]
 8000fb0:	4b45      	ldr	r3, [pc, #276]	; (80010c8 <main+0x198>)
 8000fb2:	60e3      	str	r3, [r4, #12]
 8000fb4:	4b45      	ldr	r3, [pc, #276]	; (80010cc <main+0x19c>)
 8000fb6:	6123      	str	r3, [r4, #16]
 8000fb8:	4b45      	ldr	r3, [pc, #276]	; (80010d0 <main+0x1a0>)
 8000fba:	6163      	str	r3, [r4, #20]
 8000fbc:	a738      	add	r7, pc, #224	; (adr r7, 80010a0 <main+0x170>)
 8000fbe:	e9d7 6700 	ldrd	r6, r7, [r7]
 8000fc2:	4b44      	ldr	r3, [pc, #272]	; (80010d4 <main+0x1a4>)
 8000fc4:	61a3      	str	r3, [r4, #24]
 8000fc6:	f8df 8114 	ldr.w	r8, [pc, #276]	; 80010dc <main+0x1ac>
 8000fca:	4b43      	ldr	r3, [pc, #268]	; (80010d8 <main+0x1a8>)
 8000fcc:	4d37      	ldr	r5, [pc, #220]	; (80010ac <main+0x17c>)
 8000fce:	61e3      	str	r3, [r4, #28]
 8000fd0:	4641      	mov	r1, r8
 8000fd2:	4628      	mov	r0, r5
 8000fd4:	f7ff fa12 	bl	80003fc <ros::Publisher::publish(ros::Msg const*)>
 8000fd8:	4938      	ldr	r1, [pc, #224]	; (80010bc <main+0x18c>)
 8000fda:	4835      	ldr	r0, [pc, #212]	; (80010b0 <main+0x180>)
 8000fdc:	f7ff fa0e 	bl	80003fc <ros::Publisher::publish(ros::Msg const*)>
 8000fe0:	4831      	ldr	r0, [pc, #196]	; (80010a8 <main+0x178>)
 8000fe2:	f7ff fe8b 	bl	8000cfc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()>
 8000fe6:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000fea:	f003 fd17 	bl	8004a1c <wait_ms>
 8000fee:	6860      	ldr	r0, [r4, #4]
 8000ff0:	f004 f88c 	bl	800510c <__aeabi_f2d>
 8000ff4:	4632      	mov	r2, r6
 8000ff6:	463b      	mov	r3, r7
 8000ff8:	f003 ff2a 	bl	8004e50 <__adddf3>
 8000ffc:	f004 f8da 	bl	80051b4 <__aeabi_d2f>
 8001000:	6060      	str	r0, [r4, #4]
 8001002:	68a0      	ldr	r0, [r4, #8]
 8001004:	f004 f882 	bl	800510c <__aeabi_f2d>
 8001008:	4632      	mov	r2, r6
 800100a:	463b      	mov	r3, r7
 800100c:	f003 ff20 	bl	8004e50 <__adddf3>
 8001010:	f004 f8d0 	bl	80051b4 <__aeabi_d2f>
 8001014:	60a0      	str	r0, [r4, #8]
 8001016:	68e0      	ldr	r0, [r4, #12]
 8001018:	f004 f878 	bl	800510c <__aeabi_f2d>
 800101c:	4632      	mov	r2, r6
 800101e:	463b      	mov	r3, r7
 8001020:	f003 ff16 	bl	8004e50 <__adddf3>
 8001024:	f004 f8c6 	bl	80051b4 <__aeabi_d2f>
 8001028:	60e0      	str	r0, [r4, #12]
 800102a:	6920      	ldr	r0, [r4, #16]
 800102c:	f004 f86e 	bl	800510c <__aeabi_f2d>
 8001030:	4632      	mov	r2, r6
 8001032:	463b      	mov	r3, r7
 8001034:	f003 ff0c 	bl	8004e50 <__adddf3>
 8001038:	f004 f8bc 	bl	80051b4 <__aeabi_d2f>
 800103c:	6120      	str	r0, [r4, #16]
 800103e:	6960      	ldr	r0, [r4, #20]
 8001040:	f004 f864 	bl	800510c <__aeabi_f2d>
 8001044:	4632      	mov	r2, r6
 8001046:	463b      	mov	r3, r7
 8001048:	f003 ff02 	bl	8004e50 <__adddf3>
 800104c:	f004 f8b2 	bl	80051b4 <__aeabi_d2f>
 8001050:	6160      	str	r0, [r4, #20]
 8001052:	69a0      	ldr	r0, [r4, #24]
 8001054:	f004 f85a 	bl	800510c <__aeabi_f2d>
 8001058:	4632      	mov	r2, r6
 800105a:	463b      	mov	r3, r7
 800105c:	f003 fef8 	bl	8004e50 <__adddf3>
 8001060:	f004 f8a8 	bl	80051b4 <__aeabi_d2f>
 8001064:	61a0      	str	r0, [r4, #24]
 8001066:	69e0      	ldr	r0, [r4, #28]
 8001068:	f004 f850 	bl	800510c <__aeabi_f2d>
 800106c:	4632      	mov	r2, r6
 800106e:	463b      	mov	r3, r7
 8001070:	f003 feee 	bl	8004e50 <__adddf3>
 8001074:	f004 f89e 	bl	80051b4 <__aeabi_d2f>
 8001078:	61e0      	str	r0, [r4, #28]
 800107a:	e7a9      	b.n	8000fd0 <main+0xa0>
 800107c:	3301      	adds	r3, #1
 800107e:	2b19      	cmp	r3, #25
 8001080:	f47f af69 	bne.w	8000f56 <main+0x26>
 8001084:	e774      	b.n	8000f70 <main+0x40>
 8001086:	3301      	adds	r3, #1
 8001088:	2b19      	cmp	r3, #25
 800108a:	f47f af72 	bne.w	8000f72 <main+0x42>
 800108e:	e77d      	b.n	8000f8c <main+0x5c>
 8001090:	3301      	adds	r3, #1
 8001092:	2b19      	cmp	r3, #25
 8001094:	f47f af7c 	bne.w	8000f90 <main+0x60>
 8001098:	e785      	b.n	8000fa6 <main+0x76>
 800109a:	bf00      	nop
 800109c:	f3af 8000 	nop.w
 80010a0:	9999999a 	.word	0x9999999a
 80010a4:	3fb99999 	.word	0x3fb99999
 80010a8:	200003f8 	.word	0x200003f8
 80010ac:	2000024c 	.word	0x2000024c
 80010b0:	20000280 	.word	0x20000280
 80010b4:	20000964 	.word	0x20000964
 80010b8:	20000a1c 	.word	0x20000a1c
 80010bc:	20000260 	.word	0x20000260
 80010c0:	42c80000 	.word	0x42c80000
 80010c4:	42dc0000 	.word	0x42dc0000
 80010c8:	42f00000 	.word	0x42f00000
 80010cc:	43020000 	.word	0x43020000
 80010d0:	430c0000 	.word	0x430c0000
 80010d4:	43160000 	.word	0x43160000
 80010d8:	43200000 	.word	0x43200000
 80010dc:	20000294 	.word	0x20000294

080010e0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::~NodeHandle_()>:
 80010e0:	b510      	push	{r4, lr}
 80010e2:	4b04      	ldr	r3, [pc, #16]	; (80010f4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::~NodeHandle_()+0x14>)
 80010e4:	4604      	mov	r4, r0
 80010e6:	f840 3b04 	str.w	r3, [r0], #4
 80010ea:	f000 f8af 	bl	800124c <BufferedSerial::~BufferedSerial()>
 80010ee:	4620      	mov	r0, r4
 80010f0:	bd10      	pop	{r4, pc}
 80010f2:	bf00      	nop
 80010f4:	080060b4 	.word	0x080060b4

080010f8 <ros::normalizeSecNSec(unsigned long&, unsigned long&)>:
 80010f8:	b530      	push	{r4, r5, lr}
 80010fa:	6802      	ldr	r2, [r0, #0]
 80010fc:	680d      	ldr	r5, [r1, #0]
 80010fe:	4c04      	ldr	r4, [pc, #16]	; (8001110 <ros::normalizeSecNSec(unsigned long&, unsigned long&)+0x18>)
 8001100:	fbb5 f3f4 	udiv	r3, r5, r4
 8001104:	441a      	add	r2, r3
 8001106:	fb04 5313 	mls	r3, r4, r3, r5
 800110a:	6002      	str	r2, [r0, #0]
 800110c:	600b      	str	r3, [r1, #0]
 800110e:	bd30      	pop	{r4, r5, pc}
 8001110:	3b9aca00 	.word	0x3b9aca00

08001114 <BufferedSerial::readable()>:
 8001114:	f8d0 20c0 	ldr.w	r2, [r0, #192]	; 0xc0
 8001118:	f8d0 00c4 	ldr.w	r0, [r0, #196]	; 0xc4
 800111c:	1a10      	subs	r0, r2, r0
 800111e:	bf18      	it	ne
 8001120:	2001      	movne	r0, #1
 8001122:	4770      	bx	lr

08001124 <BufferedSerial::writeable()>:
 8001124:	2001      	movs	r0, #1
 8001126:	4770      	bx	lr

08001128 <BufferedSerial::getc()>:
 8001128:	b510      	push	{r4, lr}
 800112a:	f8d0 20c4 	ldr.w	r2, [r0, #196]	; 0xc4
 800112e:	f8d0 10bc 	ldr.w	r1, [r0, #188]	; 0xbc
 8001132:	4603      	mov	r3, r0
 8001134:	1c50      	adds	r0, r2, #1
 8001136:	f8c3 00c4 	str.w	r0, [r3, #196]	; 0xc4
 800113a:	5c88      	ldrb	r0, [r1, r2]
 800113c:	f8d3 20c8 	ldr.w	r2, [r3, #200]	; 0xc8
 8001140:	f8d3 40c4 	ldr.w	r4, [r3, #196]	; 0xc4
 8001144:	3a01      	subs	r2, #1
 8001146:	fbb4 f1f2 	udiv	r1, r4, r2
 800114a:	fb02 4211 	mls	r2, r2, r1, r4
 800114e:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
 8001152:	bd10      	pop	{r4, pc}

08001154 <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*, void const*)>:
 8001154:	4603      	mov	r3, r0
 8001156:	b110      	cbz	r0, 800115e <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*, void const*)+0xa>
 8001158:	c907      	ldmia	r1, {r0, r1, r2}
 800115a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 800115e:	4770      	bx	lr

08001160 <void mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*)>:
 8001160:	4770      	bx	lr

08001162 <void mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void const*)>:
 8001162:	6842      	ldr	r2, [r0, #4]
 8001164:	6881      	ldr	r1, [r0, #8]
 8001166:	6803      	ldr	r3, [r0, #0]
 8001168:	f012 0f01 	tst.w	r2, #1
 800116c:	ea4f 0262 	mov.w	r2, r2, asr #1
 8001170:	bf1c      	itt	ne
 8001172:	5888      	ldrne	r0, [r1, r2]
 8001174:	58c3      	ldrne	r3, [r0, r3]
 8001176:	1888      	adds	r0, r1, r2
 8001178:	4718      	bx	r3

0800117a <mbed::Callback<void ()>::~Callback()>:
 800117a:	68c3      	ldr	r3, [r0, #12]
 800117c:	b510      	push	{r4, lr}
 800117e:	4604      	mov	r4, r0
 8001180:	b10b      	cbz	r3, 8001186 <mbed::Callback<void ()>::~Callback()+0xc>
 8001182:	689b      	ldr	r3, [r3, #8]
 8001184:	4798      	blx	r3
 8001186:	4620      	mov	r0, r4
 8001188:	bd10      	pop	{r4, pc}

0800118a <BufferedSerial::txIrq()>:
 800118a:	b530      	push	{r4, r5, lr}
 800118c:	4604      	mov	r4, r0
 800118e:	b085      	sub	sp, #20
 8001190:	f100 054c 	add.w	r5, r0, #76	; 0x4c
 8001194:	4628      	mov	r0, r5
 8001196:	f002 fb4b 	bl	8003830 <serial_writable>
 800119a:	b330      	cbz	r0, 80011ea <BufferedSerial::txIrq()+0x60>
 800119c:	f8d4 20d0 	ldr.w	r2, [r4, #208]	; 0xd0
 80011a0:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 80011a4:	429a      	cmp	r2, r3
 80011a6:	d016      	beq.n	80011d6 <BufferedSerial::txIrq()+0x4c>
 80011a8:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 80011ac:	f8d4 20cc 	ldr.w	r2, [r4, #204]	; 0xcc
 80011b0:	1c59      	adds	r1, r3, #1
 80011b2:	f8c4 10d4 	str.w	r1, [r4, #212]	; 0xd4
 80011b6:	5cd1      	ldrb	r1, [r2, r3]
 80011b8:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
 80011bc:	f8d4 00d4 	ldr.w	r0, [r4, #212]	; 0xd4
 80011c0:	3b01      	subs	r3, #1
 80011c2:	fbb0 f2f3 	udiv	r2, r0, r3
 80011c6:	fb03 0312 	mls	r3, r3, r2, r0
 80011ca:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
 80011ce:	4628      	mov	r0, r5
 80011d0:	f002 fb38 	bl	8003844 <serial_putc>
 80011d4:	e7de      	b.n	8001194 <BufferedSerial::txIrq()+0xa>
 80011d6:	2300      	movs	r3, #0
 80011d8:	4620      	mov	r0, r4
 80011da:	2201      	movs	r2, #1
 80011dc:	4669      	mov	r1, sp
 80011de:	9303      	str	r3, [sp, #12]
 80011e0:	f003 fb94 	bl	800490c <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 80011e4:	4668      	mov	r0, sp
 80011e6:	f7ff ffc8 	bl	800117a <mbed::Callback<void ()>::~Callback()>
 80011ea:	b005      	add	sp, #20
 80011ec:	bd30      	pop	{r4, r5, pc}

080011ee <mbed::Callback<void (int)>::~Callback()>:
 80011ee:	68c3      	ldr	r3, [r0, #12]
 80011f0:	b510      	push	{r4, lr}
 80011f2:	4604      	mov	r4, r0
 80011f4:	b10b      	cbz	r3, 80011fa <mbed::Callback<void (int)>::~Callback()+0xc>
 80011f6:	689b      	ldr	r3, [r3, #8]
 80011f8:	4798      	blx	r3
 80011fa:	4620      	mov	r0, r4
 80011fc:	bd10      	pop	{r4, pc}
	...

08001200 <mbed::SerialBase::~SerialBase()>:
 8001200:	b570      	push	{r4, r5, r6, lr}
 8001202:	4606      	mov	r6, r0
 8001204:	4b0b      	ldr	r3, [pc, #44]	; (8001234 <mbed::SerialBase::~SerialBase()+0x34>)
 8001206:	f846 3b98 	str.w	r3, [r6], #152
 800120a:	4604      	mov	r4, r0
 800120c:	b146      	cbz	r6, 8001220 <mbed::SerialBase::~SerialBase()+0x20>
 800120e:	f100 05b8 	add.w	r5, r0, #184	; 0xb8
 8001212:	42b5      	cmp	r5, r6
 8001214:	d004      	beq.n	8001220 <mbed::SerialBase::~SerialBase()+0x20>
 8001216:	3d10      	subs	r5, #16
 8001218:	4628      	mov	r0, r5
 800121a:	f7ff ffae 	bl	800117a <mbed::Callback<void ()>::~Callback()>
 800121e:	e7f8      	b.n	8001212 <mbed::SerialBase::~SerialBase()+0x12>
 8001220:	f104 0038 	add.w	r0, r4, #56	; 0x38
 8001224:	f7ff ffe3 	bl	80011ee <mbed::Callback<void (int)>::~Callback()>
 8001228:	f104 0028 	add.w	r0, r4, #40	; 0x28
 800122c:	f7ff ffdf 	bl	80011ee <mbed::Callback<void (int)>::~Callback()>
 8001230:	4620      	mov	r0, r4
 8001232:	bd70      	pop	{r4, r5, r6, pc}
 8001234:	08006730 	.word	0x08006730

08001238 <mbed::SerialBase::~SerialBase()>:
 8001238:	b510      	push	{r4, lr}
 800123a:	4604      	mov	r4, r0
 800123c:	f7ff ffe0 	bl	8001200 <mbed::SerialBase::~SerialBase()>
 8001240:	4620      	mov	r0, r4
 8001242:	f003 fd0b 	bl	8004c5c <operator delete(void*)>
 8001246:	4620      	mov	r0, r4
 8001248:	bd10      	pop	{r4, pc}
	...

0800124c <BufferedSerial::~BufferedSerial()>:
 800124c:	b530      	push	{r4, r5, lr}
 800124e:	4b13      	ldr	r3, [pc, #76]	; (800129c <BufferedSerial::~BufferedSerial()+0x50>)
 8001250:	6003      	str	r3, [r0, #0]
 8001252:	b085      	sub	sp, #20
 8001254:	2500      	movs	r5, #0
 8001256:	462a      	mov	r2, r5
 8001258:	4669      	mov	r1, sp
 800125a:	4604      	mov	r4, r0
 800125c:	9503      	str	r5, [sp, #12]
 800125e:	f003 fb55 	bl	800490c <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8001262:	4668      	mov	r0, sp
 8001264:	f7ff ff89 	bl	800117a <mbed::Callback<void ()>::~Callback()>
 8001268:	2201      	movs	r2, #1
 800126a:	4669      	mov	r1, sp
 800126c:	4620      	mov	r0, r4
 800126e:	9503      	str	r5, [sp, #12]
 8001270:	f003 fb4c 	bl	800490c <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8001274:	4668      	mov	r0, sp
 8001276:	f7ff ff80 	bl	800117a <mbed::Callback<void ()>::~Callback()>
 800127a:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
 800127e:	f000 f923 	bl	80014c8 <Buffer<char>::~Buffer()>
 8001282:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 8001286:	f000 f91f 	bl	80014c8 <Buffer<char>::~Buffer()>
 800128a:	4b05      	ldr	r3, [pc, #20]	; (80012a0 <BufferedSerial::~BufferedSerial()+0x54>)
 800128c:	6023      	str	r3, [r4, #0]
 800128e:	4620      	mov	r0, r4
 8001290:	f7ff ffb6 	bl	8001200 <mbed::SerialBase::~SerialBase()>
 8001294:	4620      	mov	r0, r4
 8001296:	b005      	add	sp, #20
 8001298:	bd30      	pop	{r4, r5, pc}
 800129a:	bf00      	nop
 800129c:	080062f8 	.word	0x080062f8
 80012a0:	08006718 	.word	0x08006718

080012a4 <BufferedSerial::~BufferedSerial()>:
 80012a4:	b510      	push	{r4, lr}
 80012a6:	4604      	mov	r4, r0
 80012a8:	f7ff ffd0 	bl	800124c <BufferedSerial::~BufferedSerial()>
 80012ac:	4620      	mov	r0, r4
 80012ae:	f003 fcd5 	bl	8004c5c <operator delete(void*)>
 80012b2:	4620      	mov	r0, r4
 80012b4:	bd10      	pop	{r4, pc}
	...

080012b8 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>:
 80012b8:	b510      	push	{r4, lr}
 80012ba:	b086      	sub	sp, #24
 80012bc:	e88d 000c 	stmia.w	sp, {r2, r3}
 80012c0:	9b01      	ldr	r3, [sp, #4]
 80012c2:	9202      	str	r2, [sp, #8]
 80012c4:	9303      	str	r3, [sp, #12]
 80012c6:	9104      	str	r1, [sp, #16]
 80012c8:	4b05      	ldr	r3, [pc, #20]	; (80012e0 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)+0x28>)
 80012ca:	f89d 2020 	ldrb.w	r2, [sp, #32]
 80012ce:	9305      	str	r3, [sp, #20]
 80012d0:	a902      	add	r1, sp, #8
 80012d2:	f003 fb1b 	bl	800490c <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 80012d6:	a802      	add	r0, sp, #8
 80012d8:	f7ff ff4f 	bl	800117a <mbed::Callback<void ()>::~Callback()>
 80012dc:	b006      	add	sp, #24
 80012de:	bd10      	pop	{r4, pc}
 80012e0:	08006280 	.word	0x08006280

080012e4 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)>:
 80012e4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80012e6:	4604      	mov	r4, r0
 80012e8:	461d      	mov	r5, r3
 80012ea:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 80012ee:	9e08      	ldr	r6, [sp, #32]
 80012f0:	f003 fa52 	bl	8004798 <mbed::RawSerial::RawSerial(PinName, PinName, int)>
 80012f4:	4620      	mov	r0, r4
 80012f6:	4b0f      	ldr	r3, [pc, #60]	; (8001334 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)+0x50>)
 80012f8:	f840 3bbc 	str.w	r3, [r0], #188
 80012fc:	4629      	mov	r1, r5
 80012fe:	f000 f8f2 	bl	80014e6 <Buffer<char>::Buffer(unsigned long)>
 8001302:	fb06 f105 	mul.w	r1, r6, r5
 8001306:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
 800130a:	f000 f8ec 	bl	80014e6 <Buffer<char>::Buffer(unsigned long)>
 800130e:	4b0a      	ldr	r3, [pc, #40]	; (8001338 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)+0x54>)
 8001310:	9302      	str	r3, [sp, #8]
 8001312:	2300      	movs	r3, #0
 8001314:	9303      	str	r3, [sp, #12]
 8001316:	9300      	str	r3, [sp, #0]
 8001318:	ab04      	add	r3, sp, #16
 800131a:	4620      	mov	r0, r4
 800131c:	e913 000c 	ldmdb	r3, {r2, r3}
 8001320:	4621      	mov	r1, r4
 8001322:	f7ff ffc9 	bl	80012b8 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>
 8001326:	4620      	mov	r0, r4
 8001328:	f8c4 50dc 	str.w	r5, [r4, #220]	; 0xdc
 800132c:	f8c4 60e0 	str.w	r6, [r4, #224]	; 0xe0
 8001330:	b004      	add	sp, #16
 8001332:	bd70      	pop	{r4, r5, r6, pc}
 8001334:	080062f8 	.word	0x080062f8
 8001338:	080013a3 	.word	0x080013a3

0800133c <BufferedSerial::prime()>:
 800133c:	b570      	push	{r4, r5, r6, lr}
 800133e:	4604      	mov	r4, r0
 8001340:	b086      	sub	sp, #24
 8001342:	304c      	adds	r0, #76	; 0x4c
 8001344:	f002 fa74 	bl	8003830 <serial_writable>
 8001348:	b1c0      	cbz	r0, 800137c <BufferedSerial::prime()+0x40>
 800134a:	ad02      	add	r5, sp, #8
 800134c:	2201      	movs	r2, #1
 800134e:	4629      	mov	r1, r5
 8001350:	2600      	movs	r6, #0
 8001352:	4620      	mov	r0, r4
 8001354:	9605      	str	r6, [sp, #20]
 8001356:	f003 fad9 	bl	800490c <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 800135a:	4628      	mov	r0, r5
 800135c:	f7ff ff0d 	bl	800117a <mbed::Callback<void ()>::~Callback()>
 8001360:	4620      	mov	r0, r4
 8001362:	f7ff ff12 	bl	800118a <BufferedSerial::txIrq()>
 8001366:	4b06      	ldr	r3, [pc, #24]	; (8001380 <BufferedSerial::prime()+0x44>)
 8001368:	9302      	str	r3, [sp, #8]
 800136a:	2301      	movs	r3, #1
 800136c:	9603      	str	r6, [sp, #12]
 800136e:	9300      	str	r3, [sp, #0]
 8001370:	e895 000c 	ldmia.w	r5, {r2, r3}
 8001374:	4621      	mov	r1, r4
 8001376:	4620      	mov	r0, r4
 8001378:	f7ff ff9e 	bl	80012b8 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>
 800137c:	b006      	add	sp, #24
 800137e:	bd70      	pop	{r4, r5, r6, pc}
 8001380:	0800118b 	.word	0x0800118b

08001384 <Buffer<char>::put(char)>:
 8001384:	6843      	ldr	r3, [r0, #4]
 8001386:	6802      	ldr	r2, [r0, #0]
 8001388:	b510      	push	{r4, lr}
 800138a:	1c5c      	adds	r4, r3, #1
 800138c:	6044      	str	r4, [r0, #4]
 800138e:	54d1      	strb	r1, [r2, r3]
 8001390:	68c3      	ldr	r3, [r0, #12]
 8001392:	6841      	ldr	r1, [r0, #4]
 8001394:	3b01      	subs	r3, #1
 8001396:	fbb1 f2f3 	udiv	r2, r1, r3
 800139a:	fb03 1312 	mls	r3, r3, r2, r1
 800139e:	6043      	str	r3, [r0, #4]
 80013a0:	bd10      	pop	{r4, pc}

080013a2 <BufferedSerial::rxIrq()>:
 80013a2:	b538      	push	{r3, r4, r5, lr}
 80013a4:	f100 054c 	add.w	r5, r0, #76	; 0x4c
 80013a8:	4604      	mov	r4, r0
 80013aa:	4628      	mov	r0, r5
 80013ac:	f002 fa24 	bl	80037f8 <serial_readable>
 80013b0:	b138      	cbz	r0, 80013c2 <BufferedSerial::rxIrq()+0x20>
 80013b2:	4628      	mov	r0, r5
 80013b4:	f002 fa2a 	bl	800380c <serial_getc>
 80013b8:	b2c1      	uxtb	r1, r0
 80013ba:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 80013be:	f7ff ffe1 	bl	8001384 <Buffer<char>::put(char)>
 80013c2:	bd38      	pop	{r3, r4, r5, pc}

080013c4 <BufferedSerial::putc(int)>:
 80013c4:	b538      	push	{r3, r4, r5, lr}
 80013c6:	4605      	mov	r5, r0
 80013c8:	460c      	mov	r4, r1
 80013ca:	30cc      	adds	r0, #204	; 0xcc
 80013cc:	b2c9      	uxtb	r1, r1
 80013ce:	f7ff ffd9 	bl	8001384 <Buffer<char>::put(char)>
 80013d2:	4628      	mov	r0, r5
 80013d4:	f7ff ffb2 	bl	800133c <BufferedSerial::prime()>
 80013d8:	4620      	mov	r0, r4
 80013da:	bd38      	pop	{r3, r4, r5, pc}

080013dc <BufferedSerial::puts(char const*)>:
 80013dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80013e0:	4607      	mov	r7, r0
 80013e2:	460c      	mov	r4, r1
 80013e4:	b1b1      	cbz	r1, 8001414 <BufferedSerial::puts(char const*)+0x38>
 80013e6:	460d      	mov	r5, r1
 80013e8:	f100 08cc 	add.w	r8, r0, #204	; 0xcc
 80013ec:	462e      	mov	r6, r5
 80013ee:	f816 1b01 	ldrb.w	r1, [r6], #1
 80013f2:	b121      	cbz	r1, 80013fe <BufferedSerial::puts(char const*)+0x22>
 80013f4:	4640      	mov	r0, r8
 80013f6:	f7ff ffc5 	bl	8001384 <Buffer<char>::put(char)>
 80013fa:	4635      	mov	r5, r6
 80013fc:	e7f6      	b.n	80013ec <BufferedSerial::puts(char const*)+0x10>
 80013fe:	210a      	movs	r1, #10
 8001400:	4640      	mov	r0, r8
 8001402:	f7ff ffbf 	bl	8001384 <Buffer<char>::put(char)>
 8001406:	1b2c      	subs	r4, r5, r4
 8001408:	4638      	mov	r0, r7
 800140a:	f7ff ff97 	bl	800133c <BufferedSerial::prime()>
 800140e:	1c60      	adds	r0, r4, #1
 8001410:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001414:	4608      	mov	r0, r1
 8001416:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800141a <BufferedSerial::write(void const*, unsigned int)>:
 800141a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800141e:	4607      	mov	r7, r0
 8001420:	460d      	mov	r5, r1
 8001422:	b191      	cbz	r1, 800144a <BufferedSerial::write(void const*, unsigned int)+0x30>
 8001424:	b1a2      	cbz	r2, 8001450 <BufferedSerial::write(void const*, unsigned int)+0x36>
 8001426:	188c      	adds	r4, r1, r2
 8001428:	460e      	mov	r6, r1
 800142a:	f100 08cc 	add.w	r8, r0, #204	; 0xcc
 800142e:	42b4      	cmp	r4, r6
 8001430:	d005      	beq.n	800143e <BufferedSerial::write(void const*, unsigned int)+0x24>
 8001432:	f816 1b01 	ldrb.w	r1, [r6], #1
 8001436:	4640      	mov	r0, r8
 8001438:	f7ff ffa4 	bl	8001384 <Buffer<char>::put(char)>
 800143c:	e7f7      	b.n	800142e <BufferedSerial::write(void const*, unsigned int)+0x14>
 800143e:	4638      	mov	r0, r7
 8001440:	f7ff ff7c 	bl	800133c <BufferedSerial::prime()>
 8001444:	1b60      	subs	r0, r4, r5
 8001446:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800144a:	4608      	mov	r0, r1
 800144c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001450:	4610      	mov	r0, r2
 8001452:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08001458 <BufferedSerial::printf(char const*, ...)>:
 8001458:	b40e      	push	{r1, r2, r3}
 800145a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800145e:	b085      	sub	sp, #20
 8001460:	f8d0 20dc 	ldr.w	r2, [r0, #220]	; 0xdc
 8001464:	af02      	add	r7, sp, #8
 8001466:	1dd3      	adds	r3, r2, #7
 8001468:	f023 0307 	bic.w	r3, r3, #7
 800146c:	f107 0424 	add.w	r4, r7, #36	; 0x24
 8001470:	ebad 0d03 	sub.w	sp, sp, r3
 8001474:	f854 8b04 	ldr.w	r8, [r4], #4
 8001478:	ae02      	add	r6, sp, #8
 800147a:	4605      	mov	r5, r0
 800147c:	2100      	movs	r1, #0
 800147e:	4630      	mov	r0, r6
 8001480:	f004 f92b 	bl	80056da <memset>
 8001484:	4622      	mov	r2, r4
 8001486:	4641      	mov	r1, r8
 8001488:	4630      	mov	r0, r6
 800148a:	607c      	str	r4, [r7, #4]
 800148c:	f004 fc12 	bl	8005cb4 <vsiprintf>
 8001490:	f8d5 30dc 	ldr.w	r3, [r5, #220]	; 0xdc
 8001494:	4283      	cmp	r3, r0
 8001496:	4602      	mov	r2, r0
 8001498:	d20c      	bcs.n	80014b4 <BufferedSerial::printf(char const*, ...)+0x5c>
 800149a:	9000      	str	r0, [sp, #0]
 800149c:	225d      	movs	r2, #93	; 0x5d
 800149e:	4808      	ldr	r0, [pc, #32]	; (80014c0 <BufferedSerial::printf(char const*, ...)+0x68>)
 80014a0:	4908      	ldr	r1, [pc, #32]	; (80014c4 <BufferedSerial::printf(char const*, ...)+0x6c>)
 80014a2:	f000 f931 	bl	8001708 <error>
 80014a6:	2000      	movs	r0, #0
 80014a8:	370c      	adds	r7, #12
 80014aa:	46bd      	mov	sp, r7
 80014ac:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80014b0:	b003      	add	sp, #12
 80014b2:	4770      	bx	lr
 80014b4:	4631      	mov	r1, r6
 80014b6:	4628      	mov	r0, r5
 80014b8:	f7ff ffaf 	bl	800141a <BufferedSerial::write(void const*, unsigned int)>
 80014bc:	e7f4      	b.n	80014a8 <BufferedSerial::printf(char const*, ...)+0x50>
 80014be:	bf00      	nop
 80014c0:	080062b6 	.word	0x080062b6
 80014c4:	0800628c 	.word	0x0800628c

080014c8 <Buffer<char>::~Buffer()>:
 80014c8:	b510      	push	{r4, lr}
 80014ca:	4604      	mov	r4, r0
 80014cc:	6800      	ldr	r0, [r0, #0]
 80014ce:	b108      	cbz	r0, 80014d4 <Buffer<char>::~Buffer()+0xc>
 80014d0:	f003 fbc0 	bl	8004c54 <operator delete[](void*)>
 80014d4:	4620      	mov	r0, r4
 80014d6:	bd10      	pop	{r4, pc}

080014d8 <Buffer<char>::clear()>:
 80014d8:	2100      	movs	r1, #0
 80014da:	6041      	str	r1, [r0, #4]
 80014dc:	68c2      	ldr	r2, [r0, #12]
 80014de:	6081      	str	r1, [r0, #8]
 80014e0:	6800      	ldr	r0, [r0, #0]
 80014e2:	f004 b8fa 	b.w	80056da <memset>

080014e6 <Buffer<char>::Buffer(unsigned long)>:
 80014e6:	b538      	push	{r3, r4, r5, lr}
 80014e8:	4604      	mov	r4, r0
 80014ea:	4608      	mov	r0, r1
 80014ec:	460d      	mov	r5, r1
 80014ee:	f003 fba5 	bl	8004c3c <operator new[](unsigned int)>
 80014f2:	60e5      	str	r5, [r4, #12]
 80014f4:	6020      	str	r0, [r4, #0]
 80014f6:	4620      	mov	r0, r4
 80014f8:	f7ff ffee 	bl	80014d8 <Buffer<char>::clear()>
 80014fc:	4620      	mov	r0, r4
 80014fe:	bd38      	pop	{r3, r4, r5, pc}

08001500 <_start>:
 8001500:	4807      	ldr	r0, [pc, #28]	; (8001520 <_start+0x20>)
 8001502:	4a08      	ldr	r2, [pc, #32]	; (8001524 <_start+0x24>)
 8001504:	b508      	push	{r3, lr}
 8001506:	1a12      	subs	r2, r2, r0
 8001508:	2100      	movs	r1, #0
 800150a:	f004 f8e6 	bl	80056da <memset>
 800150e:	f003 fb45 	bl	8004b9c <software_init_hook>
 8001512:	f004 f833 	bl	800557c <__libc_init_array>
 8001516:	f003 fb48 	bl	8004baa <__wrap_main>
 800151a:	f003 fb83 	bl	8004c24 <__wrap_exit>
 800151e:	bf00      	nop
 8001520:	20000230 	.word	0x20000230
 8001524:	200029a0 	.word	0x200029a0

08001528 <_gpio_init_out.part.2>:
 8001528:	b538      	push	{r3, r4, r5, lr}
 800152a:	4604      	mov	r4, r0
 800152c:	460d      	mov	r5, r1
 800152e:	6803      	ldr	r3, [r0, #0]
 8001530:	b15a      	cbz	r2, 800154a <_gpio_init_out.part.2+0x22>
 8001532:	6882      	ldr	r2, [r0, #8]
 8001534:	6013      	str	r3, [r2, #0]
 8001536:	4620      	mov	r0, r4
 8001538:	2101      	movs	r1, #1
 800153a:	f001 fcbd 	bl	8002eb8 <gpio_dir>
 800153e:	4629      	mov	r1, r5
 8001540:	4620      	mov	r0, r4
 8001542:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001546:	f001 bcb3 	b.w	8002eb0 <gpio_mode>
 800154a:	68c2      	ldr	r2, [r0, #12]
 800154c:	041b      	lsls	r3, r3, #16
 800154e:	e7f1      	b.n	8001534 <_gpio_init_out.part.2+0xc>

08001550 <gpio_init_out_ex>:
 8001550:	b570      	push	{r4, r5, r6, lr}
 8001552:	460e      	mov	r6, r1
 8001554:	4604      	mov	r4, r0
 8001556:	4615      	mov	r5, r2
 8001558:	f001 fc8a 	bl	8002e70 <gpio_init>
 800155c:	3601      	adds	r6, #1
 800155e:	d006      	beq.n	800156e <gpio_init_out_ex+0x1e>
 8001560:	462a      	mov	r2, r5
 8001562:	4620      	mov	r0, r4
 8001564:	2100      	movs	r1, #0
 8001566:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800156a:	f7ff bfdd 	b.w	8001528 <_gpio_init_out.part.2>
 800156e:	bd70      	pop	{r4, r5, r6, pc}

08001570 <gpio_init_out>:
 8001570:	2200      	movs	r2, #0
 8001572:	f7ff bfed 	b.w	8001550 <gpio_init_out_ex>
	...

08001578 <get_us_ticker_data>:
 8001578:	4800      	ldr	r0, [pc, #0]	; (800157c <get_us_ticker_data+0x4>)
 800157a:	4770      	bx	lr
 800157c:	08006324 	.word	0x08006324

08001580 <us_ticker_irq_handler>:
 8001580:	4801      	ldr	r0, [pc, #4]	; (8001588 <us_ticker_irq_handler+0x8>)
 8001582:	f000 b803 	b.w	800158c <ticker_irq_handler>
 8001586:	bf00      	nop
 8001588:	08006324 	.word	0x08006324

0800158c <ticker_irq_handler>:
 800158c:	6803      	ldr	r3, [r0, #0]
 800158e:	b570      	push	{r4, r5, r6, lr}
 8001590:	68db      	ldr	r3, [r3, #12]
 8001592:	4604      	mov	r4, r0
 8001594:	4798      	blx	r3
 8001596:	6863      	ldr	r3, [r4, #4]
 8001598:	685a      	ldr	r2, [r3, #4]
 800159a:	6823      	ldr	r3, [r4, #0]
 800159c:	b91a      	cbnz	r2, 80015a6 <ticker_irq_handler+0x1a>
 800159e:	689b      	ldr	r3, [r3, #8]
 80015a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80015a4:	4718      	bx	r3
 80015a6:	685b      	ldr	r3, [r3, #4]
 80015a8:	6815      	ldr	r5, [r2, #0]
 80015aa:	4798      	blx	r3
 80015ac:	6863      	ldr	r3, [r4, #4]
 80015ae:	1a28      	subs	r0, r5, r0
 80015b0:	2800      	cmp	r0, #0
 80015b2:	685a      	ldr	r2, [r3, #4]
 80015b4:	dc07      	bgt.n	80015c6 <ticker_irq_handler+0x3a>
 80015b6:	6891      	ldr	r1, [r2, #8]
 80015b8:	6059      	str	r1, [r3, #4]
 80015ba:	681b      	ldr	r3, [r3, #0]
 80015bc:	2b00      	cmp	r3, #0
 80015be:	d0ea      	beq.n	8001596 <ticker_irq_handler+0xa>
 80015c0:	6850      	ldr	r0, [r2, #4]
 80015c2:	4798      	blx	r3
 80015c4:	e7e7      	b.n	8001596 <ticker_irq_handler+0xa>
 80015c6:	6823      	ldr	r3, [r4, #0]
 80015c8:	6810      	ldr	r0, [r2, #0]
 80015ca:	691b      	ldr	r3, [r3, #16]
 80015cc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80015d0:	4718      	bx	r3

080015d2 <ticker_read>:
 80015d2:	6803      	ldr	r3, [r0, #0]
 80015d4:	685b      	ldr	r3, [r3, #4]
 80015d6:	4718      	bx	r3

080015d8 <pinmap_pinout>:
 80015d8:	b510      	push	{r4, lr}
 80015da:	4604      	mov	r4, r0
 80015dc:	3001      	adds	r0, #1
 80015de:	d10d      	bne.n	80015fc <pinmap_pinout+0x24>
 80015e0:	bd10      	pop	{r4, pc}
 80015e2:	429c      	cmp	r4, r3
 80015e4:	d109      	bne.n	80015fa <pinmap_pinout+0x22>
 80015e6:	4620      	mov	r0, r4
 80015e8:	6889      	ldr	r1, [r1, #8]
 80015ea:	f001 fec7 	bl	800337c <pin_function>
 80015ee:	4620      	mov	r0, r4
 80015f0:	2100      	movs	r1, #0
 80015f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80015f6:	f001 bf45 	b.w	8003484 <pin_mode>
 80015fa:	310c      	adds	r1, #12
 80015fc:	f9b1 3000 	ldrsh.w	r3, [r1]
 8001600:	1c5a      	adds	r2, r3, #1
 8001602:	d1ee      	bne.n	80015e2 <pinmap_pinout+0xa>
 8001604:	4802      	ldr	r0, [pc, #8]	; (8001610 <pinmap_pinout+0x38>)
 8001606:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800160a:	f000 b87d 	b.w	8001708 <error>
 800160e:	bf00      	nop
 8001610:	0800638f 	.word	0x0800638f

08001614 <pinmap_merge>:
 8001614:	4288      	cmp	r0, r1
 8001616:	b508      	push	{r3, lr}
 8001618:	d008      	beq.n	800162c <pinmap_merge+0x18>
 800161a:	1c43      	adds	r3, r0, #1
 800161c:	d006      	beq.n	800162c <pinmap_merge+0x18>
 800161e:	3101      	adds	r1, #1
 8001620:	d006      	beq.n	8001630 <pinmap_merge+0x1c>
 8001622:	4804      	ldr	r0, [pc, #16]	; (8001634 <pinmap_merge+0x20>)
 8001624:	f000 f870 	bl	8001708 <error>
 8001628:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800162c:	4608      	mov	r0, r1
 800162e:	bd08      	pop	{r3, pc}
 8001630:	4601      	mov	r1, r0
 8001632:	e7fb      	b.n	800162c <pinmap_merge+0x18>
 8001634:	0800635e 	.word	0x0800635e

08001638 <pinmap_find_peripheral>:
 8001638:	f9b1 3000 	ldrsh.w	r3, [r1]
 800163c:	1c5a      	adds	r2, r3, #1
 800163e:	d101      	bne.n	8001644 <pinmap_find_peripheral+0xc>
 8001640:	4618      	mov	r0, r3
 8001642:	4770      	bx	lr
 8001644:	4283      	cmp	r3, r0
 8001646:	d101      	bne.n	800164c <pinmap_find_peripheral+0x14>
 8001648:	6848      	ldr	r0, [r1, #4]
 800164a:	4770      	bx	lr
 800164c:	310c      	adds	r1, #12
 800164e:	e7f3      	b.n	8001638 <pinmap_find_peripheral>

08001650 <pinmap_peripheral>:
 8001650:	1c42      	adds	r2, r0, #1
 8001652:	b510      	push	{r4, lr}
 8001654:	4604      	mov	r4, r0
 8001656:	d007      	beq.n	8001668 <pinmap_peripheral+0x18>
 8001658:	f7ff ffee 	bl	8001638 <pinmap_find_peripheral>
 800165c:	1c43      	adds	r3, r0, #1
 800165e:	4604      	mov	r4, r0
 8001660:	d102      	bne.n	8001668 <pinmap_peripheral+0x18>
 8001662:	4802      	ldr	r0, [pc, #8]	; (800166c <pinmap_peripheral+0x1c>)
 8001664:	f000 f850 	bl	8001708 <error>
 8001668:	4620      	mov	r0, r4
 800166a:	bd10      	pop	{r4, pc}
 800166c:	0800636f 	.word	0x0800636f

08001670 <pinmap_find_function>:
 8001670:	f9b1 3000 	ldrsh.w	r3, [r1]
 8001674:	1c5a      	adds	r2, r3, #1
 8001676:	d101      	bne.n	800167c <pinmap_find_function+0xc>
 8001678:	4618      	mov	r0, r3
 800167a:	4770      	bx	lr
 800167c:	4283      	cmp	r3, r0
 800167e:	d101      	bne.n	8001684 <pinmap_find_function+0x14>
 8001680:	6888      	ldr	r0, [r1, #8]
 8001682:	4770      	bx	lr
 8001684:	310c      	adds	r1, #12
 8001686:	e7f3      	b.n	8001670 <pinmap_find_function>

08001688 <pinmap_function>:
 8001688:	1c42      	adds	r2, r0, #1
 800168a:	b510      	push	{r4, lr}
 800168c:	4604      	mov	r4, r0
 800168e:	d007      	beq.n	80016a0 <pinmap_function+0x18>
 8001690:	f7ff ffee 	bl	8001670 <pinmap_find_function>
 8001694:	1c43      	adds	r3, r0, #1
 8001696:	4604      	mov	r4, r0
 8001698:	d102      	bne.n	80016a0 <pinmap_function+0x18>
 800169a:	4802      	ldr	r0, [pc, #8]	; (80016a4 <pinmap_function+0x1c>)
 800169c:	f000 f834 	bl	8001708 <error>
 80016a0:	4620      	mov	r0, r4
 80016a2:	bd10      	pop	{r4, pc}
 80016a4:	08006340 	.word	0x08006340

080016a8 <core_util_are_interrupts_enabled>:
 80016a8:	f3ef 8010 	mrs	r0, PRIMASK
 80016ac:	43c0      	mvns	r0, r0
 80016ae:	f000 0001 	and.w	r0, r0, #1
 80016b2:	4770      	bx	lr

080016b4 <core_util_critical_section_enter>:
 80016b4:	b508      	push	{r3, lr}
 80016b6:	f7ff fff7 	bl	80016a8 <core_util_are_interrupts_enabled>
 80016ba:	b672      	cpsid	i
 80016bc:	4b06      	ldr	r3, [pc, #24]	; (80016d8 <core_util_critical_section_enter+0x24>)
 80016be:	681a      	ldr	r2, [r3, #0]
 80016c0:	b922      	cbnz	r2, 80016cc <core_util_critical_section_enter+0x18>
 80016c2:	f080 0001 	eor.w	r0, r0, #1
 80016c6:	4a05      	ldr	r2, [pc, #20]	; (80016dc <core_util_critical_section_enter+0x28>)
 80016c8:	b2c0      	uxtb	r0, r0
 80016ca:	7010      	strb	r0, [r2, #0]
 80016cc:	681a      	ldr	r2, [r3, #0]
 80016ce:	681a      	ldr	r2, [r3, #0]
 80016d0:	3201      	adds	r2, #1
 80016d2:	601a      	str	r2, [r3, #0]
 80016d4:	bd08      	pop	{r3, pc}
 80016d6:	bf00      	nop
 80016d8:	20000a50 	.word	0x20000a50
 80016dc:	20000a4c 	.word	0x20000a4c

080016e0 <core_util_critical_section_exit>:
 80016e0:	b508      	push	{r3, lr}
 80016e2:	4b07      	ldr	r3, [pc, #28]	; (8001700 <core_util_critical_section_exit+0x20>)
 80016e4:	681a      	ldr	r2, [r3, #0]
 80016e6:	b152      	cbz	r2, 80016fe <core_util_critical_section_exit+0x1e>
 80016e8:	f7ff ffde 	bl	80016a8 <core_util_are_interrupts_enabled>
 80016ec:	681a      	ldr	r2, [r3, #0]
 80016ee:	3a01      	subs	r2, #1
 80016f0:	601a      	str	r2, [r3, #0]
 80016f2:	681b      	ldr	r3, [r3, #0]
 80016f4:	b91b      	cbnz	r3, 80016fe <core_util_critical_section_exit+0x1e>
 80016f6:	4b03      	ldr	r3, [pc, #12]	; (8001704 <core_util_critical_section_exit+0x24>)
 80016f8:	781b      	ldrb	r3, [r3, #0]
 80016fa:	b903      	cbnz	r3, 80016fe <core_util_critical_section_exit+0x1e>
 80016fc:	b662      	cpsie	i
 80016fe:	bd08      	pop	{r3, pc}
 8001700:	20000a50 	.word	0x20000a50
 8001704:	20000a4c 	.word	0x20000a4c

08001708 <error>:
 8001708:	b40f      	push	{r0, r1, r2, r3}
 800170a:	2001      	movs	r0, #1
 800170c:	b508      	push	{r3, lr}
 800170e:	f003 fa89 	bl	8004c24 <__wrap_exit>

08001712 <mbed_die>:
 8001712:	b500      	push	{lr}
 8001714:	b089      	sub	sp, #36	; 0x24
 8001716:	f7ff ffcd 	bl	80016b4 <core_util_critical_section_enter>
 800171a:	2105      	movs	r1, #5
 800171c:	a801      	add	r0, sp, #4
 800171e:	f7ff ff27 	bl	8001570 <gpio_init_out>
 8001722:	9b03      	ldr	r3, [sp, #12]
 8001724:	9a01      	ldr	r2, [sp, #4]
 8001726:	601a      	str	r2, [r3, #0]
 8001728:	2096      	movs	r0, #150	; 0x96
 800172a:	f003 f977 	bl	8004a1c <wait_ms>
 800172e:	9b01      	ldr	r3, [sp, #4]
 8001730:	9a04      	ldr	r2, [sp, #16]
 8001732:	041b      	lsls	r3, r3, #16
 8001734:	6013      	str	r3, [r2, #0]
 8001736:	2096      	movs	r0, #150	; 0x96
 8001738:	f003 f970 	bl	8004a1c <wait_ms>
 800173c:	e7f1      	b.n	8001722 <mbed_die+0x10>

0800173e <default_idle_hook>:
 800173e:	f001 bbe4 	b.w	8002f0a <hal_sleep>
	...

08001744 <rtos_idle_loop>:
 8001744:	b508      	push	{r3, lr}
 8001746:	4c02      	ldr	r4, [pc, #8]	; (8001750 <rtos_idle_loop+0xc>)
 8001748:	6823      	ldr	r3, [r4, #0]
 800174a:	4798      	blx	r3
 800174c:	e7fc      	b.n	8001748 <rtos_idle_loop+0x4>
 800174e:	bf00      	nop
 8001750:	20000198 	.word	0x20000198

08001754 <pre_main>:
 8001754:	b508      	push	{r3, lr}
 8001756:	480b      	ldr	r0, [pc, #44]	; (8001784 <pre_main+0x30>)
 8001758:	f000 fe42 	bl	80023e0 <osMutexCreate>
 800175c:	4b0a      	ldr	r3, [pc, #40]	; (8001788 <pre_main+0x34>)
 800175e:	6018      	str	r0, [r3, #0]
 8001760:	480a      	ldr	r0, [pc, #40]	; (800178c <pre_main+0x38>)
 8001762:	f000 fe3d 	bl	80023e0 <osMutexCreate>
 8001766:	4b0a      	ldr	r3, [pc, #40]	; (8001790 <pre_main+0x3c>)
 8001768:	6018      	str	r0, [r3, #0]
 800176a:	480a      	ldr	r0, [pc, #40]	; (8001794 <pre_main+0x40>)
 800176c:	f000 fe38 	bl	80023e0 <osMutexCreate>
 8001770:	4b09      	ldr	r3, [pc, #36]	; (8001798 <pre_main+0x44>)
 8001772:	6018      	str	r0, [r3, #0]
 8001774:	f003 ff02 	bl	800557c <__libc_init_array>
 8001778:	2100      	movs	r1, #0
 800177a:	4608      	mov	r0, r1
 800177c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001780:	f003 ba13 	b.w	8004baa <__wrap_main>
 8001784:	080063ec 	.word	0x080063ec
 8001788:	20002184 	.word	0x20002184
 800178c:	080063e8 	.word	0x080063e8
 8001790:	20000a5c 	.word	0x20000a5c
 8001794:	080063e4 	.word	0x080063e4
 8001798:	20000a54 	.word	0x20000a54

0800179c <os_idle_demon>:
 800179c:	f7ff bfd2 	b.w	8001744 <rtos_idle_loop>

080017a0 <os_error>:
 80017a0:	b510      	push	{r4, lr}
 80017a2:	4604      	mov	r4, r0
 80017a4:	f000 fd8a 	bl	80022bc <svcThreadGetId>
 80017a8:	4621      	mov	r1, r4
 80017aa:	4602      	mov	r2, r0
 80017ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80017b0:	4801      	ldr	r0, [pc, #4]	; (80017b8 <os_error+0x18>)
 80017b2:	f7ff bfa9 	b.w	8001708 <error>
 80017b6:	bf00      	nop
 80017b8:	080063ac 	.word	0x080063ac

080017bc <sysThreadTerminate>:
 80017bc:	f003 ba50 	b.w	8004c60 <thread_terminate_hook>

080017c0 <set_stack_heap>:
 80017c0:	4a0b      	ldr	r2, [pc, #44]	; (80017f0 <set_stack_heap+0x30>)
 80017c2:	4b0c      	ldr	r3, [pc, #48]	; (80017f4 <set_stack_heap+0x34>)
 80017c4:	480c      	ldr	r0, [pc, #48]	; (80017f8 <set_stack_heap+0x38>)
 80017c6:	b430      	push	{r4, r5}
 80017c8:	601a      	str	r2, [r3, #0]
 80017ca:	f1c2 5300 	rsb	r3, r2, #536870912	; 0x20000000
 80017ce:	f503 33c0 	add.w	r3, r3, #98304	; 0x18000
 80017d2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80017d6:	4619      	mov	r1, r3
 80017d8:	bf28      	it	cs
 80017da:	f44f 6180 	movcs.w	r1, #1024	; 0x400
 80017de:	4d07      	ldr	r5, [pc, #28]	; (80017fc <set_stack_heap+0x3c>)
 80017e0:	4c07      	ldr	r4, [pc, #28]	; (8001800 <set_stack_heap+0x40>)
 80017e2:	6001      	str	r1, [r0, #0]
 80017e4:	1a5b      	subs	r3, r3, r1
 80017e6:	441a      	add	r2, r3
 80017e8:	602a      	str	r2, [r5, #0]
 80017ea:	6023      	str	r3, [r4, #0]
 80017ec:	bc30      	pop	{r4, r5}
 80017ee:	4770      	bx	lr
 80017f0:	200029a0 	.word	0x200029a0
 80017f4:	20001ea0 	.word	0x20001ea0
 80017f8:	20000a60 	.word	0x20000a60
 80017fc:	20000a64 	.word	0x20000a64
 8001800:	20001e9c 	.word	0x20001e9c

08001804 <software_init_hook_rtos>:
 8001804:	f000 fec0 	bl	8002588 <osKernelInitialize>
 8001808:	f7ff ffda 	bl	80017c0 <set_stack_heap>
 800180c:	4803      	ldr	r0, [pc, #12]	; (800181c <software_init_hook_rtos+0x18>)
 800180e:	2100      	movs	r1, #0
 8001810:	f000 fe6e 	bl	80024f0 <osThreadCreate>
 8001814:	f000 fcd4 	bl	80021c0 <osKernelStart>
 8001818:	e7fe      	b.n	8001818 <software_init_hook_rtos+0x14>
 800181a:	0000      	.short	0x0000
 800181c:	2000019c 	.word	0x2000019c

08001820 <__rtos_malloc_lock>:
 8001820:	4b02      	ldr	r3, [pc, #8]	; (800182c <__rtos_malloc_lock+0xc>)
 8001822:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001826:	6818      	ldr	r0, [r3, #0]
 8001828:	f000 bdf8 	b.w	800241c <osMutexWait>
 800182c:	20000a5c 	.word	0x20000a5c

08001830 <__rtos_malloc_unlock>:
 8001830:	4b01      	ldr	r3, [pc, #4]	; (8001838 <__rtos_malloc_unlock+0x8>)
 8001832:	6818      	ldr	r0, [r3, #0]
 8001834:	f000 be1a 	b.w	800246c <osMutexRelease>
 8001838:	20000a5c 	.word	0x20000a5c

0800183c <rt_put_prio>:
 800183c:	b530      	push	{r4, r5, lr}
 800183e:	7802      	ldrb	r2, [r0, #0]
 8001840:	788c      	ldrb	r4, [r1, #2]
 8001842:	6843      	ldr	r3, [r0, #4]
 8001844:	3a01      	subs	r2, #1
 8001846:	b2d2      	uxtb	r2, r2
 8001848:	b113      	cbz	r3, 8001850 <rt_put_prio+0x14>
 800184a:	789d      	ldrb	r5, [r3, #2]
 800184c:	42a5      	cmp	r5, r4
 800184e:	d207      	bcs.n	8001860 <rt_put_prio+0x24>
 8001850:	2a02      	cmp	r2, #2
 8001852:	604b      	str	r3, [r1, #4]
 8001854:	6041      	str	r1, [r0, #4]
 8001856:	d806      	bhi.n	8001866 <rt_put_prio+0x2a>
 8001858:	b103      	cbz	r3, 800185c <rt_put_prio+0x20>
 800185a:	6099      	str	r1, [r3, #8]
 800185c:	6088      	str	r0, [r1, #8]
 800185e:	bd30      	pop	{r4, r5, pc}
 8001860:	4618      	mov	r0, r3
 8001862:	685b      	ldr	r3, [r3, #4]
 8001864:	e7f0      	b.n	8001848 <rt_put_prio+0xc>
 8001866:	2300      	movs	r3, #0
 8001868:	608b      	str	r3, [r1, #8]
 800186a:	bd30      	pop	{r4, r5, pc}

0800186c <rt_get_first>:
 800186c:	7802      	ldrb	r2, [r0, #0]
 800186e:	6843      	ldr	r3, [r0, #4]
 8001870:	3a01      	subs	r2, #1
 8001872:	6859      	ldr	r1, [r3, #4]
 8001874:	6041      	str	r1, [r0, #4]
 8001876:	2a02      	cmp	r2, #2
 8001878:	f04f 0200 	mov.w	r2, #0
 800187c:	d805      	bhi.n	800188a <rt_get_first+0x1e>
 800187e:	b109      	cbz	r1, 8001884 <rt_get_first+0x18>
 8001880:	6088      	str	r0, [r1, #8]
 8001882:	605a      	str	r2, [r3, #4]
 8001884:	609a      	str	r2, [r3, #8]
 8001886:	4618      	mov	r0, r3
 8001888:	4770      	bx	lr
 800188a:	605a      	str	r2, [r3, #4]
 800188c:	e7fb      	b.n	8001886 <rt_get_first+0x1a>
	...

08001890 <rt_put_rdy_first>:
 8001890:	4b03      	ldr	r3, [pc, #12]	; (80018a0 <rt_put_rdy_first+0x10>)
 8001892:	685a      	ldr	r2, [r3, #4]
 8001894:	6042      	str	r2, [r0, #4]
 8001896:	2200      	movs	r2, #0
 8001898:	6082      	str	r2, [r0, #8]
 800189a:	6058      	str	r0, [r3, #4]
 800189c:	4770      	bx	lr
 800189e:	bf00      	nop
 80018a0:	20002878 	.word	0x20002878

080018a4 <rt_put_dly>:
 80018a4:	4b10      	ldr	r3, [pc, #64]	; (80018e8 <rt_put_dly+0x44>)
 80018a6:	68da      	ldr	r2, [r3, #12]
 80018a8:	b510      	push	{r4, lr}
 80018aa:	b18a      	cbz	r2, 80018d0 <rt_put_dly+0x2c>
 80018ac:	8a9a      	ldrh	r2, [r3, #20]
 80018ae:	68dc      	ldr	r4, [r3, #12]
 80018b0:	428a      	cmp	r2, r1
 80018b2:	d30c      	bcc.n	80018ce <rt_put_dly+0x2a>
 80018b4:	60c4      	str	r4, [r0, #12]
 80018b6:	60d8      	str	r0, [r3, #12]
 80018b8:	68c4      	ldr	r4, [r0, #12]
 80018ba:	6103      	str	r3, [r0, #16]
 80018bc:	b104      	cbz	r4, 80018c0 <rt_put_dly+0x1c>
 80018be:	6120      	str	r0, [r4, #16]
 80018c0:	1a52      	subs	r2, r2, r1
 80018c2:	b292      	uxth	r2, r2
 80018c4:	8282      	strh	r2, [r0, #20]
 80018c6:	8a99      	ldrh	r1, [r3, #20]
 80018c8:	1a8a      	subs	r2, r1, r2
 80018ca:	829a      	strh	r2, [r3, #20]
 80018cc:	bd10      	pop	{r4, pc}
 80018ce:	b93c      	cbnz	r4, 80018e0 <rt_put_dly+0x3c>
 80018d0:	2400      	movs	r4, #0
 80018d2:	1a8a      	subs	r2, r1, r2
 80018d4:	60c4      	str	r4, [r0, #12]
 80018d6:	60d8      	str	r0, [r3, #12]
 80018d8:	6103      	str	r3, [r0, #16]
 80018da:	829a      	strh	r2, [r3, #20]
 80018dc:	8284      	strh	r4, [r0, #20]
 80018de:	bd10      	pop	{r4, pc}
 80018e0:	8aa3      	ldrh	r3, [r4, #20]
 80018e2:	441a      	add	r2, r3
 80018e4:	4623      	mov	r3, r4
 80018e6:	e7e2      	b.n	80018ae <rt_put_dly+0xa>
 80018e8:	20002890 	.word	0x20002890

080018ec <rt_dec_dly>:
 80018ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80018f0:	4d17      	ldr	r5, [pc, #92]	; (8001950 <rt_dec_dly+0x64>)
 80018f2:	68eb      	ldr	r3, [r5, #12]
 80018f4:	b153      	cbz	r3, 800190c <rt_dec_dly+0x20>
 80018f6:	8aab      	ldrh	r3, [r5, #20]
 80018f8:	4f16      	ldr	r7, [pc, #88]	; (8001954 <rt_dec_dly+0x68>)
 80018fa:	f8df 805c 	ldr.w	r8, [pc, #92]	; 8001958 <rt_dec_dly+0x6c>
 80018fe:	3b01      	subs	r3, #1
 8001900:	82ab      	strh	r3, [r5, #20]
 8001902:	2600      	movs	r6, #0
 8001904:	8aaa      	ldrh	r2, [r5, #20]
 8001906:	b90a      	cbnz	r2, 800190c <rt_dec_dly+0x20>
 8001908:	68ec      	ldr	r4, [r5, #12]
 800190a:	b90c      	cbnz	r4, 8001910 <rt_dec_dly+0x24>
 800190c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001910:	68a3      	ldr	r3, [r4, #8]
 8001912:	b133      	cbz	r3, 8001922 <rt_dec_dly+0x36>
 8001914:	6861      	ldr	r1, [r4, #4]
 8001916:	6059      	str	r1, [r3, #4]
 8001918:	6861      	ldr	r1, [r4, #4]
 800191a:	b109      	cbz	r1, 8001920 <rt_dec_dly+0x34>
 800191c:	608b      	str	r3, [r1, #8]
 800191e:	6062      	str	r2, [r4, #4]
 8001920:	60a6      	str	r6, [r4, #8]
 8001922:	4621      	mov	r1, r4
 8001924:	4638      	mov	r0, r7
 8001926:	f7ff ff89 	bl	800183c <rt_put_prio>
 800192a:	8aa3      	ldrh	r3, [r4, #20]
 800192c:	82ab      	strh	r3, [r5, #20]
 800192e:	7863      	ldrb	r3, [r4, #1]
 8001930:	2b04      	cmp	r3, #4
 8001932:	bf01      	itttt	eq
 8001934:	f8d8 3000 	ldreq.w	r3, [r8]
 8001938:	8ae2      	ldrheq	r2, [r4, #22]
 800193a:	189b      	addeq	r3, r3, r2
 800193c:	82a3      	strheq	r3, [r4, #20]
 800193e:	2301      	movs	r3, #1
 8001940:	7063      	strb	r3, [r4, #1]
 8001942:	68e3      	ldr	r3, [r4, #12]
 8001944:	60eb      	str	r3, [r5, #12]
 8001946:	b10b      	cbz	r3, 800194c <rt_dec_dly+0x60>
 8001948:	611d      	str	r5, [r3, #16]
 800194a:	60e6      	str	r6, [r4, #12]
 800194c:	6126      	str	r6, [r4, #16]
 800194e:	e7d9      	b.n	8001904 <rt_dec_dly+0x18>
 8001950:	20002890 	.word	0x20002890
 8001954:	20002878 	.word	0x20002878
 8001958:	2000290c 	.word	0x2000290c

0800195c <rt_rmv_list>:
 800195c:	6883      	ldr	r3, [r0, #8]
 800195e:	b12b      	cbz	r3, 800196c <rt_rmv_list+0x10>
 8001960:	6842      	ldr	r2, [r0, #4]
 8001962:	605a      	str	r2, [r3, #4]
 8001964:	6842      	ldr	r2, [r0, #4]
 8001966:	b15a      	cbz	r2, 8001980 <rt_rmv_list+0x24>
 8001968:	6093      	str	r3, [r2, #8]
 800196a:	4770      	bx	lr
 800196c:	4b05      	ldr	r3, [pc, #20]	; (8001984 <rt_rmv_list+0x28>)
 800196e:	685a      	ldr	r2, [r3, #4]
 8001970:	4290      	cmp	r0, r2
 8001972:	d102      	bne.n	800197a <rt_rmv_list+0x1e>
 8001974:	6842      	ldr	r2, [r0, #4]
 8001976:	605a      	str	r2, [r3, #4]
 8001978:	4770      	bx	lr
 800197a:	4613      	mov	r3, r2
 800197c:	2a00      	cmp	r2, #0
 800197e:	d1f6      	bne.n	800196e <rt_rmv_list+0x12>
 8001980:	4770      	bx	lr
 8001982:	bf00      	nop
 8001984:	20002878 	.word	0x20002878

08001988 <rt_resort_prio>:
 8001988:	b510      	push	{r4, lr}
 800198a:	6884      	ldr	r4, [r0, #8]
 800198c:	4601      	mov	r1, r0
 800198e:	b92c      	cbnz	r4, 800199c <rt_resort_prio+0x14>
 8001990:	7843      	ldrb	r3, [r0, #1]
 8001992:	2b01      	cmp	r3, #1
 8001994:	d10d      	bne.n	80019b2 <rt_resort_prio+0x2a>
 8001996:	4c07      	ldr	r4, [pc, #28]	; (80019b4 <rt_resort_prio+0x2c>)
 8001998:	e003      	b.n	80019a2 <rt_resort_prio+0x1a>
 800199a:	68a4      	ldr	r4, [r4, #8]
 800199c:	7823      	ldrb	r3, [r4, #0]
 800199e:	2b00      	cmp	r3, #0
 80019a0:	d0fb      	beq.n	800199a <rt_resort_prio+0x12>
 80019a2:	4608      	mov	r0, r1
 80019a4:	f7ff ffda 	bl	800195c <rt_rmv_list>
 80019a8:	4620      	mov	r0, r4
 80019aa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80019ae:	f7ff bf45 	b.w	800183c <rt_put_prio>
 80019b2:	bd10      	pop	{r4, pc}
 80019b4:	20002878 	.word	0x20002878

080019b8 <rt_rmv_dly>:
 80019b8:	6903      	ldr	r3, [r0, #16]
 80019ba:	b510      	push	{r4, lr}
 80019bc:	b163      	cbz	r3, 80019d8 <rt_rmv_dly+0x20>
 80019be:	68c2      	ldr	r2, [r0, #12]
 80019c0:	60da      	str	r2, [r3, #12]
 80019c2:	68c2      	ldr	r2, [r0, #12]
 80019c4:	b14a      	cbz	r2, 80019da <rt_rmv_dly+0x22>
 80019c6:	8a99      	ldrh	r1, [r3, #20]
 80019c8:	8a84      	ldrh	r4, [r0, #20]
 80019ca:	4421      	add	r1, r4
 80019cc:	8299      	strh	r1, [r3, #20]
 80019ce:	6113      	str	r3, [r2, #16]
 80019d0:	2300      	movs	r3, #0
 80019d2:	60c3      	str	r3, [r0, #12]
 80019d4:	2300      	movs	r3, #0
 80019d6:	6103      	str	r3, [r0, #16]
 80019d8:	bd10      	pop	{r4, pc}
 80019da:	829a      	strh	r2, [r3, #20]
 80019dc:	e7fa      	b.n	80019d4 <rt_rmv_dly+0x1c>
	...

080019e0 <rt_psq_enq>:
 80019e0:	b470      	push	{r4, r5, r6}
 80019e2:	4b11      	ldr	r3, [pc, #68]	; (8001a28 <rt_psq_enq+0x48>)
 80019e4:	78dd      	ldrb	r5, [r3, #3]
 80019e6:	f3ef 8610 	mrs	r6, PRIMASK
 80019ea:	f3ef 8210 	mrs	r2, PRIMASK
 80019ee:	b672      	cpsid	i
 80019f0:	789a      	ldrb	r2, [r3, #2]
 80019f2:	4295      	cmp	r5, r2
 80019f4:	d911      	bls.n	8001a1a <rt_psq_enq+0x3a>
 80019f6:	3201      	adds	r2, #1
 80019f8:	709a      	strb	r2, [r3, #2]
 80019fa:	781a      	ldrb	r2, [r3, #0]
 80019fc:	1c54      	adds	r4, r2, #1
 80019fe:	42a5      	cmp	r5, r4
 8001a00:	bf08      	it	eq
 8001a02:	2400      	moveq	r4, #0
 8001a04:	701c      	strb	r4, [r3, #0]
 8001a06:	b906      	cbnz	r6, 8001a0a <rt_psq_enq+0x2a>
 8001a08:	b662      	cpsie	i
 8001a0a:	4295      	cmp	r5, r2
 8001a0c:	d907      	bls.n	8001a1e <rt_psq_enq+0x3e>
 8001a0e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8001a12:	bc70      	pop	{r4, r5, r6}
 8001a14:	6058      	str	r0, [r3, #4]
 8001a16:	6099      	str	r1, [r3, #8]
 8001a18:	4770      	bx	lr
 8001a1a:	2e00      	cmp	r6, #0
 8001a1c:	d0f4      	beq.n	8001a08 <rt_psq_enq+0x28>
 8001a1e:	2002      	movs	r0, #2
 8001a20:	bc70      	pop	{r4, r5, r6}
 8001a22:	f7ff bebd 	b.w	80017a0 <os_error>
 8001a26:	bf00      	nop
 8001a28:	200020fc 	.word	0x200020fc

08001a2c <rt_mut_init>:
 8001a2c:	2303      	movs	r3, #3
 8001a2e:	7003      	strb	r3, [r0, #0]
 8001a30:	2300      	movs	r3, #0
 8001a32:	8043      	strh	r3, [r0, #2]
 8001a34:	6043      	str	r3, [r0, #4]
 8001a36:	6083      	str	r3, [r0, #8]
 8001a38:	60c3      	str	r3, [r0, #12]
 8001a3a:	4770      	bx	lr

08001a3c <rt_mut_release>:
 8001a3c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001a40:	8843      	ldrh	r3, [r0, #2]
 8001a42:	4605      	mov	r5, r0
 8001a44:	2b00      	cmp	r3, #0
 8001a46:	d063      	beq.n	8001b10 <rt_mut_release+0xd4>
 8001a48:	4f32      	ldr	r7, [pc, #200]	; (8001b14 <rt_mut_release+0xd8>)
 8001a4a:	6881      	ldr	r1, [r0, #8]
 8001a4c:	683a      	ldr	r2, [r7, #0]
 8001a4e:	4291      	cmp	r1, r2
 8001a50:	d15e      	bne.n	8001b10 <rt_mut_release+0xd4>
 8001a52:	3b01      	subs	r3, #1
 8001a54:	b29b      	uxth	r3, r3
 8001a56:	8043      	strh	r3, [r0, #2]
 8001a58:	b11b      	cbz	r3, 8001a62 <rt_mut_release+0x26>
 8001a5a:	2400      	movs	r4, #0
 8001a5c:	4620      	mov	r0, r4
 8001a5e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8001a62:	6a0b      	ldr	r3, [r1, #32]
 8001a64:	4298      	cmp	r0, r3
 8001a66:	d129      	bne.n	8001abc <rt_mut_release+0x80>
 8001a68:	68c3      	ldr	r3, [r0, #12]
 8001a6a:	620b      	str	r3, [r1, #32]
 8001a6c:	f891 3024 	ldrb.w	r3, [r1, #36]	; 0x24
 8001a70:	6a0c      	ldr	r4, [r1, #32]
 8001a72:	bb5c      	cbnz	r4, 8001acc <rt_mut_release+0x90>
 8001a74:	708b      	strb	r3, [r1, #2]
 8001a76:	686a      	ldr	r2, [r5, #4]
 8001a78:	f8df 809c 	ldr.w	r8, [pc, #156]	; 8001b18 <rt_mut_release+0xdc>
 8001a7c:	2a00      	cmp	r2, #0
 8001a7e:	d03b      	beq.n	8001af8 <rt_mut_release+0xbc>
 8001a80:	4628      	mov	r0, r5
 8001a82:	f7ff fef3 	bl	800186c <rt_get_first>
 8001a86:	4621      	mov	r1, r4
 8001a88:	4606      	mov	r6, r0
 8001a8a:	f000 f8c1 	bl	8001c10 <rt_ret_val>
 8001a8e:	4630      	mov	r0, r6
 8001a90:	f7ff ff92 	bl	80019b8 <rt_rmv_dly>
 8001a94:	6a33      	ldr	r3, [r6, #32]
 8001a96:	60eb      	str	r3, [r5, #12]
 8001a98:	f04f 0901 	mov.w	r9, #1
 8001a9c:	6839      	ldr	r1, [r7, #0]
 8001a9e:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8001aa2:	f8a5 9002 	strh.w	r9, [r5, #2]
 8001aa6:	60ae      	str	r6, [r5, #8]
 8001aa8:	6235      	str	r5, [r6, #32]
 8001aaa:	788a      	ldrb	r2, [r1, #2]
 8001aac:	789b      	ldrb	r3, [r3, #2]
 8001aae:	429a      	cmp	r2, r3
 8001ab0:	d314      	bcc.n	8001adc <rt_mut_release+0xa0>
 8001ab2:	4630      	mov	r0, r6
 8001ab4:	f000 fe5c 	bl	8002770 <rt_dispatch>
 8001ab8:	e7d0      	b.n	8001a5c <rt_mut_release+0x20>
 8001aba:	4613      	mov	r3, r2
 8001abc:	2b00      	cmp	r3, #0
 8001abe:	d0d5      	beq.n	8001a6c <rt_mut_release+0x30>
 8001ac0:	68da      	ldr	r2, [r3, #12]
 8001ac2:	4295      	cmp	r5, r2
 8001ac4:	d1f9      	bne.n	8001aba <rt_mut_release+0x7e>
 8001ac6:	68ea      	ldr	r2, [r5, #12]
 8001ac8:	60da      	str	r2, [r3, #12]
 8001aca:	e7cf      	b.n	8001a6c <rt_mut_release+0x30>
 8001acc:	6862      	ldr	r2, [r4, #4]
 8001ace:	b11a      	cbz	r2, 8001ad8 <rt_mut_release+0x9c>
 8001ad0:	7892      	ldrb	r2, [r2, #2]
 8001ad2:	4293      	cmp	r3, r2
 8001ad4:	bf38      	it	cc
 8001ad6:	4613      	movcc	r3, r2
 8001ad8:	68e4      	ldr	r4, [r4, #12]
 8001ada:	e7ca      	b.n	8001a72 <rt_mut_release+0x36>
 8001adc:	4640      	mov	r0, r8
 8001ade:	f7ff fead 	bl	800183c <rt_put_prio>
 8001ae2:	4631      	mov	r1, r6
 8001ae4:	4640      	mov	r0, r8
 8001ae6:	f7ff fea9 	bl	800183c <rt_put_prio>
 8001aea:	683b      	ldr	r3, [r7, #0]
 8001aec:	f883 9001 	strb.w	r9, [r3, #1]
 8001af0:	f886 9001 	strb.w	r9, [r6, #1]
 8001af4:	4620      	mov	r0, r4
 8001af6:	e7dd      	b.n	8001ab4 <rt_mut_release+0x78>
 8001af8:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8001afc:	7892      	ldrb	r2, [r2, #2]
 8001afe:	429a      	cmp	r2, r3
 8001b00:	d9ab      	bls.n	8001a5a <rt_mut_release+0x1e>
 8001b02:	4640      	mov	r0, r8
 8001b04:	f7ff fe9a 	bl	800183c <rt_put_prio>
 8001b08:	683b      	ldr	r3, [r7, #0]
 8001b0a:	2201      	movs	r2, #1
 8001b0c:	705a      	strb	r2, [r3, #1]
 8001b0e:	e7f1      	b.n	8001af4 <rt_mut_release+0xb8>
 8001b10:	24ff      	movs	r4, #255	; 0xff
 8001b12:	e7a3      	b.n	8001a5c <rt_mut_release+0x20>
 8001b14:	200028c4 	.word	0x200028c4
 8001b18:	20002878 	.word	0x20002878

08001b1c <rt_mut_wait>:
 8001b1c:	8843      	ldrh	r3, [r0, #2]
 8001b1e:	b570      	push	{r4, r5, r6, lr}
 8001b20:	4604      	mov	r4, r0
 8001b22:	460e      	mov	r6, r1
 8001b24:	4d13      	ldr	r5, [pc, #76]	; (8001b74 <rt_mut_wait+0x58>)
 8001b26:	b943      	cbnz	r3, 8001b3a <rt_mut_wait+0x1e>
 8001b28:	682a      	ldr	r2, [r5, #0]
 8001b2a:	6082      	str	r2, [r0, #8]
 8001b2c:	6a11      	ldr	r1, [r2, #32]
 8001b2e:	60c1      	str	r1, [r0, #12]
 8001b30:	6210      	str	r0, [r2, #32]
 8001b32:	3301      	adds	r3, #1
 8001b34:	8063      	strh	r3, [r4, #2]
 8001b36:	2000      	movs	r0, #0
 8001b38:	bd70      	pop	{r4, r5, r6, pc}
 8001b3a:	6880      	ldr	r0, [r0, #8]
 8001b3c:	682a      	ldr	r2, [r5, #0]
 8001b3e:	4290      	cmp	r0, r2
 8001b40:	d0f7      	beq.n	8001b32 <rt_mut_wait+0x16>
 8001b42:	b181      	cbz	r1, 8001b66 <rt_mut_wait+0x4a>
 8001b44:	7893      	ldrb	r3, [r2, #2]
 8001b46:	7882      	ldrb	r2, [r0, #2]
 8001b48:	429a      	cmp	r2, r3
 8001b4a:	d202      	bcs.n	8001b52 <rt_mut_wait+0x36>
 8001b4c:	7083      	strb	r3, [r0, #2]
 8001b4e:	f7ff ff1b 	bl	8001988 <rt_resort_prio>
 8001b52:	6862      	ldr	r2, [r4, #4]
 8001b54:	b14a      	cbz	r2, 8001b6a <rt_mut_wait+0x4e>
 8001b56:	6829      	ldr	r1, [r5, #0]
 8001b58:	4620      	mov	r0, r4
 8001b5a:	f7ff fe6f 	bl	800183c <rt_put_prio>
 8001b5e:	2109      	movs	r1, #9
 8001b60:	4630      	mov	r0, r6
 8001b62:	f000 fe29 	bl	80027b8 <rt_block>
 8001b66:	2001      	movs	r0, #1
 8001b68:	bd70      	pop	{r4, r5, r6, pc}
 8001b6a:	682b      	ldr	r3, [r5, #0]
 8001b6c:	6063      	str	r3, [r4, #4]
 8001b6e:	605a      	str	r2, [r3, #4]
 8001b70:	609c      	str	r4, [r3, #8]
 8001b72:	e7f4      	b.n	8001b5e <rt_mut_wait+0x42>
 8001b74:	200028c4 	.word	0x200028c4

08001b78 <rt_init_stack>:
 8001b78:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8001b7a:	089b      	lsrs	r3, r3, #2
 8001b7c:	bf04      	itt	eq
 8001b7e:	4b22      	ldreq	r3, [pc, #136]	; (8001c08 <rt_init_stack+0x90>)
 8001b80:	881b      	ldrheq	r3, [r3, #0]
 8001b82:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001b84:	6b05      	ldr	r5, [r0, #48]	; 0x30
 8001b86:	bf08      	it	eq
 8001b88:	089b      	lsreq	r3, r3, #2
 8001b8a:	eb05 0283 	add.w	r2, r5, r3, lsl #2
 8001b8e:	0754      	lsls	r4, r2, #29
 8001b90:	bf48      	it	mi
 8001b92:	3a04      	submi	r2, #4
 8001b94:	f04f 7680 	mov.w	r6, #16777216	; 0x1000000
 8001b98:	e902 0042 	stmdb	r2, {r1, r6}
 8001b9c:	f1a2 0440 	sub.w	r4, r2, #64	; 0x40
 8001ba0:	f1a2 0644 	sub.w	r6, r2, #68	; 0x44
 8001ba4:	f1a2 070c 	sub.w	r7, r2, #12
 8001ba8:	f04f 0e00 	mov.w	lr, #0
 8001bac:	f846 ef04 	str.w	lr, [r6, #4]!
 8001bb0:	42be      	cmp	r6, r7
 8001bb2:	d1fb      	bne.n	8001bac <rt_init_stack+0x34>
 8001bb4:	69c6      	ldr	r6, [r0, #28]
 8001bb6:	f842 6c20 	str.w	r6, [r2, #-32]
 8001bba:	6341      	str	r1, [r0, #52]	; 0x34
 8001bbc:	4912      	ldr	r1, [pc, #72]	; (8001c08 <rt_init_stack+0x90>)
 8001bbe:	62c4      	str	r4, [r0, #44]	; 0x2c
 8001bc0:	6809      	ldr	r1, [r1, #0]
 8001bc2:	00c9      	lsls	r1, r1, #3
 8001bc4:	d517      	bpl.n	8001bf6 <rt_init_stack+0x7e>
 8001bc6:	2b11      	cmp	r3, #17
 8001bc8:	d915      	bls.n	8001bf6 <rt_init_stack+0x7e>
 8001bca:	3b10      	subs	r3, #16
 8001bcc:	f06f 0107 	mvn.w	r1, #7
 8001bd0:	085b      	lsrs	r3, r3, #1
 8001bd2:	434b      	muls	r3, r1
 8001bd4:	f1a3 0138 	sub.w	r1, r3, #56	; 0x38
 8001bd8:	440a      	add	r2, r1
 8001bda:	f04f 30cc 	mov.w	r0, #3435973836	; 0xcccccccc
 8001bde:	4621      	mov	r1, r4
 8001be0:	4291      	cmp	r1, r2
 8001be2:	d10b      	bne.n	8001bfc <rt_init_stack+0x84>
 8001be4:	3308      	adds	r3, #8
 8001be6:	441c      	add	r4, r3
 8001be8:	1f23      	subs	r3, r4, #4
 8001bea:	429d      	cmp	r5, r3
 8001bec:	bf3c      	itt	cc
 8001bee:	f04f 33cc 	movcc.w	r3, #3435973836	; 0xcccccccc
 8001bf2:	f844 3c04 	strcc.w	r3, [r4, #-4]
 8001bf6:	4b05      	ldr	r3, [pc, #20]	; (8001c0c <rt_init_stack+0x94>)
 8001bf8:	602b      	str	r3, [r5, #0]
 8001bfa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001bfc:	f841 0c04 	str.w	r0, [r1, #-4]
 8001c00:	f841 0d08 	str.w	r0, [r1, #-8]!
 8001c04:	e7ec      	b.n	8001be0 <rt_init_stack+0x68>
 8001c06:	bf00      	nop
 8001c08:	080063f4 	.word	0x080063f4
 8001c0c:	e25a2ea5 	.word	0xe25a2ea5

08001c10 <rt_ret_val>:
 8001c10:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001c14:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8001c16:	b112      	cbz	r2, 8001c1e <rt_ret_val+0xe>
 8001c18:	3360      	adds	r3, #96	; 0x60
 8001c1a:	6019      	str	r1, [r3, #0]
 8001c1c:	4770      	bx	lr
 8001c1e:	3320      	adds	r3, #32
 8001c20:	e7fb      	b.n	8001c1a <rt_ret_val+0xa>

08001c22 <rt_ret_val2>:
 8001c22:	b510      	push	{r4, lr}
 8001c24:	f890 4025 	ldrb.w	r4, [r0, #37]	; 0x25
 8001c28:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8001c2a:	b11c      	cbz	r4, 8001c34 <rt_ret_val2+0x12>
 8001c2c:	3360      	adds	r3, #96	; 0x60
 8001c2e:	e883 0006 	stmia.w	r3, {r1, r2}
 8001c32:	bd10      	pop	{r4, pc}
 8001c34:	3320      	adds	r3, #32
 8001c36:	e7fa      	b.n	8001c2e <rt_ret_val2+0xc>

08001c38 <rt_psh_req>:
 8001c38:	4b05      	ldr	r3, [pc, #20]	; (8001c50 <rt_psh_req+0x18>)
 8001c3a:	781b      	ldrb	r3, [r3, #0]
 8001c3c:	b923      	cbnz	r3, 8001c48 <rt_psh_req+0x10>
 8001c3e:	4b05      	ldr	r3, [pc, #20]	; (8001c54 <rt_psh_req+0x1c>)
 8001c40:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8001c44:	601a      	str	r2, [r3, #0]
 8001c46:	4770      	bx	lr
 8001c48:	4b03      	ldr	r3, [pc, #12]	; (8001c58 <rt_psh_req+0x20>)
 8001c4a:	2201      	movs	r2, #1
 8001c4c:	701a      	strb	r2, [r3, #0]
 8001c4e:	4770      	bx	lr
 8001c50:	20001ab8 	.word	0x20001ab8
 8001c54:	e000ed04 	.word	0xe000ed04
 8001c58:	20001ab9 	.word	0x20001ab9

08001c5c <rt_pop_req>:
 8001c5c:	b538      	push	{r3, r4, r5, lr}
 8001c5e:	4b1a      	ldr	r3, [pc, #104]	; (8001cc8 <rt_pop_req+0x6c>)
 8001c60:	4c1a      	ldr	r4, [pc, #104]	; (8001ccc <rt_pop_req+0x70>)
 8001c62:	6818      	ldr	r0, [r3, #0]
 8001c64:	2301      	movs	r3, #1
 8001c66:	7043      	strb	r3, [r0, #1]
 8001c68:	f7ff fe12 	bl	8001890 <rt_put_rdy_first>
 8001c6c:	7865      	ldrb	r5, [r4, #1]
 8001c6e:	78a3      	ldrb	r3, [r4, #2]
 8001c70:	b93b      	cbnz	r3, 8001c82 <rt_pop_req+0x26>
 8001c72:	4817      	ldr	r0, [pc, #92]	; (8001cd0 <rt_pop_req+0x74>)
 8001c74:	7065      	strb	r5, [r4, #1]
 8001c76:	f7ff fdf9 	bl	800186c <rt_get_first>
 8001c7a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001c7e:	f000 bd5d 	b.w	800273c <rt_switch_req>
 8001c82:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 8001c86:	6858      	ldr	r0, [r3, #4]
 8001c88:	7802      	ldrb	r2, [r0, #0]
 8001c8a:	b99a      	cbnz	r2, 8001cb4 <rt_pop_req+0x58>
 8001c8c:	8919      	ldrh	r1, [r3, #8]
 8001c8e:	f000 f9bb 	bl	8002008 <rt_evt_psh>
 8001c92:	78e3      	ldrb	r3, [r4, #3]
 8001c94:	3501      	adds	r5, #1
 8001c96:	429d      	cmp	r5, r3
 8001c98:	bf08      	it	eq
 8001c9a:	2500      	moveq	r5, #0
 8001c9c:	f3ef 8310 	mrs	r3, PRIMASK
 8001ca0:	f3ef 8210 	mrs	r2, PRIMASK
 8001ca4:	b672      	cpsid	i
 8001ca6:	78a2      	ldrb	r2, [r4, #2]
 8001ca8:	3a01      	subs	r2, #1
 8001caa:	70a2      	strb	r2, [r4, #2]
 8001cac:	2b00      	cmp	r3, #0
 8001cae:	d1de      	bne.n	8001c6e <rt_pop_req+0x12>
 8001cb0:	b662      	cpsie	i
 8001cb2:	e7dc      	b.n	8001c6e <rt_pop_req+0x12>
 8001cb4:	2a01      	cmp	r2, #1
 8001cb6:	d103      	bne.n	8001cc0 <rt_pop_req+0x64>
 8001cb8:	6899      	ldr	r1, [r3, #8]
 8001cba:	f000 f933 	bl	8001f24 <rt_mbx_psh>
 8001cbe:	e7e8      	b.n	8001c92 <rt_pop_req+0x36>
 8001cc0:	f000 ff9e 	bl	8002c00 <rt_sem_psh>
 8001cc4:	e7e5      	b.n	8001c92 <rt_pop_req+0x36>
 8001cc6:	bf00      	nop
 8001cc8:	200028c4 	.word	0x200028c4
 8001ccc:	200020fc 	.word	0x200020fc
 8001cd0:	20002878 	.word	0x20002878

08001cd4 <os_tick_init>:
 8001cd4:	4b08      	ldr	r3, [pc, #32]	; (8001cf8 <os_tick_init+0x24>)
 8001cd6:	681a      	ldr	r2, [r3, #0]
 8001cd8:	4b08      	ldr	r3, [pc, #32]	; (8001cfc <os_tick_init+0x28>)
 8001cda:	601a      	str	r2, [r3, #0]
 8001cdc:	2200      	movs	r2, #0
 8001cde:	605a      	str	r2, [r3, #4]
 8001ce0:	2207      	movs	r2, #7
 8001ce2:	f843 2c04 	str.w	r2, [r3, #-4]
 8001ce6:	4a06      	ldr	r2, [pc, #24]	; (8001d00 <os_tick_init+0x2c>)
 8001ce8:	6813      	ldr	r3, [r2, #0]
 8001cea:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8001cee:	6013      	str	r3, [r2, #0]
 8001cf0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001cf4:	4770      	bx	lr
 8001cf6:	bf00      	nop
 8001cf8:	0800640c 	.word	0x0800640c
 8001cfc:	e000e014 	.word	0xe000e014
 8001d00:	e000ed20 	.word	0xe000ed20

08001d04 <os_tick_irqack>:
 8001d04:	4770      	bx	lr
	...

08001d08 <rt_systick>:
 8001d08:	b508      	push	{r3, lr}
 8001d0a:	4b0b      	ldr	r3, [pc, #44]	; (8001d38 <rt_systick+0x30>)
 8001d0c:	6818      	ldr	r0, [r3, #0]
 8001d0e:	2301      	movs	r3, #1
 8001d10:	7043      	strb	r3, [r0, #1]
 8001d12:	f7ff fdbd 	bl	8001890 <rt_put_rdy_first>
 8001d16:	f000 f9ad 	bl	8002074 <rt_chk_robin>
 8001d1a:	4a08      	ldr	r2, [pc, #32]	; (8001d3c <rt_systick+0x34>)
 8001d1c:	6813      	ldr	r3, [r2, #0]
 8001d1e:	3301      	adds	r3, #1
 8001d20:	6013      	str	r3, [r2, #0]
 8001d22:	f7ff fde3 	bl	80018ec <rt_dec_dly>
 8001d26:	f000 fc91 	bl	800264c <sysTimerTick>
 8001d2a:	4805      	ldr	r0, [pc, #20]	; (8001d40 <rt_systick+0x38>)
 8001d2c:	f7ff fd9e 	bl	800186c <rt_get_first>
 8001d30:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001d34:	f000 bd02 	b.w	800273c <rt_switch_req>
 8001d38:	200028c4 	.word	0x200028c4
 8001d3c:	2000290c 	.word	0x2000290c
 8001d40:	20002878 	.word	0x20002878

08001d44 <rt_stk_check>:
 8001d44:	4b06      	ldr	r3, [pc, #24]	; (8001d60 <rt_stk_check+0x1c>)
 8001d46:	681a      	ldr	r2, [r3, #0]
 8001d48:	6b13      	ldr	r3, [r2, #48]	; 0x30
 8001d4a:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8001d4c:	4293      	cmp	r3, r2
 8001d4e:	d803      	bhi.n	8001d58 <rt_stk_check+0x14>
 8001d50:	681a      	ldr	r2, [r3, #0]
 8001d52:	4b04      	ldr	r3, [pc, #16]	; (8001d64 <rt_stk_check+0x20>)
 8001d54:	429a      	cmp	r2, r3
 8001d56:	d002      	beq.n	8001d5e <rt_stk_check+0x1a>
 8001d58:	2001      	movs	r0, #1
 8001d5a:	f7ff bd21 	b.w	80017a0 <os_error>
 8001d5e:	4770      	bx	lr
 8001d60:	200028c4 	.word	0x200028c4
 8001d64:	e25a2ea5 	.word	0xe25a2ea5

08001d68 <_init_box>:
 8001d68:	2a00      	cmp	r2, #0
 8001d6a:	bfbb      	ittet	lt
 8001d6c:	f022 4200 	biclt.w	r2, r2, #2147483648	; 0x80000000
 8001d70:	3207      	addlt	r2, #7
 8001d72:	3203      	addge	r2, #3
 8001d74:	f022 0207 	biclt.w	r2, r2, #7
 8001d78:	bfa8      	it	ge
 8001d7a:	f022 0203 	bicge.w	r2, r2, #3
 8001d7e:	b510      	push	{r4, lr}
 8001d80:	bfb4      	ite	lt
 8001d82:	2310      	movlt	r3, #16
 8001d84:	230c      	movge	r3, #12
 8001d86:	b192      	cbz	r2, 8001dae <_init_box+0x46>
 8001d88:	18d4      	adds	r4, r2, r3
 8001d8a:	428c      	cmp	r4, r1
 8001d8c:	d80f      	bhi.n	8001dae <_init_box+0x46>
 8001d8e:	4401      	add	r1, r0
 8001d90:	4403      	add	r3, r0
 8001d92:	4254      	negs	r4, r2
 8001d94:	6041      	str	r1, [r0, #4]
 8001d96:	6003      	str	r3, [r0, #0]
 8001d98:	6082      	str	r2, [r0, #8]
 8001d9a:	4421      	add	r1, r4
 8001d9c:	1898      	adds	r0, r3, r2
 8001d9e:	4281      	cmp	r1, r0
 8001da0:	d302      	bcc.n	8001da8 <_init_box+0x40>
 8001da2:	5100      	str	r0, [r0, r4]
 8001da4:	4603      	mov	r3, r0
 8001da6:	e7f9      	b.n	8001d9c <_init_box+0x34>
 8001da8:	2000      	movs	r0, #0
 8001daa:	6018      	str	r0, [r3, #0]
 8001dac:	bd10      	pop	{r4, pc}
 8001dae:	2001      	movs	r0, #1
 8001db0:	bd10      	pop	{r4, pc}

08001db2 <rt_alloc_box>:
 8001db2:	f3ef 8310 	mrs	r3, PRIMASK
 8001db6:	b672      	cpsid	i
 8001db8:	6802      	ldr	r2, [r0, #0]
 8001dba:	f003 0301 	and.w	r3, r3, #1
 8001dbe:	b10a      	cbz	r2, 8001dc4 <rt_alloc_box+0x12>
 8001dc0:	6811      	ldr	r1, [r2, #0]
 8001dc2:	6001      	str	r1, [r0, #0]
 8001dc4:	b903      	cbnz	r3, 8001dc8 <rt_alloc_box+0x16>
 8001dc6:	b662      	cpsie	i
 8001dc8:	4610      	mov	r0, r2
 8001dca:	4770      	bx	lr

08001dcc <rt_free_box>:
 8001dcc:	4281      	cmp	r1, r0
 8001dce:	d30d      	bcc.n	8001dec <rt_free_box+0x20>
 8001dd0:	6843      	ldr	r3, [r0, #4]
 8001dd2:	4299      	cmp	r1, r3
 8001dd4:	d20a      	bcs.n	8001dec <rt_free_box+0x20>
 8001dd6:	f3ef 8310 	mrs	r3, PRIMASK
 8001dda:	b672      	cpsid	i
 8001ddc:	6802      	ldr	r2, [r0, #0]
 8001dde:	600a      	str	r2, [r1, #0]
 8001de0:	6001      	str	r1, [r0, #0]
 8001de2:	f013 0001 	ands.w	r0, r3, #1
 8001de6:	d103      	bne.n	8001df0 <rt_free_box+0x24>
 8001de8:	b662      	cpsie	i
 8001dea:	4770      	bx	lr
 8001dec:	2001      	movs	r0, #1
 8001dee:	4770      	bx	lr
 8001df0:	2000      	movs	r0, #0
 8001df2:	4770      	bx	lr

08001df4 <rt_mbx_init>:
 8001df4:	2301      	movs	r3, #1
 8001df6:	3910      	subs	r1, #16
 8001df8:	7003      	strb	r3, [r0, #0]
 8001dfa:	0889      	lsrs	r1, r1, #2
 8001dfc:	2300      	movs	r3, #0
 8001dfe:	7043      	strb	r3, [r0, #1]
 8001e00:	7083      	strb	r3, [r0, #2]
 8001e02:	6043      	str	r3, [r0, #4]
 8001e04:	8103      	strh	r3, [r0, #8]
 8001e06:	8143      	strh	r3, [r0, #10]
 8001e08:	8183      	strh	r3, [r0, #12]
 8001e0a:	81c1      	strh	r1, [r0, #14]
 8001e0c:	4770      	bx	lr
	...

08001e10 <rt_mbx_wait>:
 8001e10:	b570      	push	{r4, r5, r6, lr}
 8001e12:	8985      	ldrh	r5, [r0, #12]
 8001e14:	4604      	mov	r4, r0
 8001e16:	4616      	mov	r6, r2
 8001e18:	2d00      	cmp	r5, #0
 8001e1a:	d038      	beq.n	8001e8e <rt_mbx_wait+0x7e>
 8001e1c:	8943      	ldrh	r3, [r0, #10]
 8001e1e:	1d1a      	adds	r2, r3, #4
 8001e20:	3301      	adds	r3, #1
 8001e22:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 8001e26:	600a      	str	r2, [r1, #0]
 8001e28:	89c2      	ldrh	r2, [r0, #14]
 8001e2a:	b29b      	uxth	r3, r3
 8001e2c:	429a      	cmp	r2, r3
 8001e2e:	8143      	strh	r3, [r0, #10]
 8001e30:	bf04      	itt	eq
 8001e32:	2300      	moveq	r3, #0
 8001e34:	8143      	strheq	r3, [r0, #10]
 8001e36:	6843      	ldr	r3, [r0, #4]
 8001e38:	b1f3      	cbz	r3, 8001e78 <rt_mbx_wait+0x68>
 8001e3a:	7843      	ldrb	r3, [r0, #1]
 8001e3c:	2b02      	cmp	r3, #2
 8001e3e:	d11b      	bne.n	8001e78 <rt_mbx_wait+0x68>
 8001e40:	f7ff fd14 	bl	800186c <rt_get_first>
 8001e44:	2100      	movs	r1, #0
 8001e46:	4605      	mov	r5, r0
 8001e48:	f7ff fee2 	bl	8001c10 <rt_ret_val>
 8001e4c:	8923      	ldrh	r3, [r4, #8]
 8001e4e:	69e9      	ldr	r1, [r5, #28]
 8001e50:	1d1a      	adds	r2, r3, #4
 8001e52:	3301      	adds	r3, #1
 8001e54:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
 8001e58:	89e2      	ldrh	r2, [r4, #14]
 8001e5a:	b29b      	uxth	r3, r3
 8001e5c:	429a      	cmp	r2, r3
 8001e5e:	8123      	strh	r3, [r4, #8]
 8001e60:	bf08      	it	eq
 8001e62:	2300      	moveq	r3, #0
 8001e64:	4628      	mov	r0, r5
 8001e66:	bf08      	it	eq
 8001e68:	8123      	strheq	r3, [r4, #8]
 8001e6a:	f7ff fda5 	bl	80019b8 <rt_rmv_dly>
 8001e6e:	4628      	mov	r0, r5
 8001e70:	f000 fc7e 	bl	8002770 <rt_dispatch>
 8001e74:	2000      	movs	r0, #0
 8001e76:	bd70      	pop	{r4, r5, r6, pc}
 8001e78:	f3ef 8010 	mrs	r0, PRIMASK
 8001e7c:	f3ef 8310 	mrs	r3, PRIMASK
 8001e80:	b672      	cpsid	i
 8001e82:	3d01      	subs	r5, #1
 8001e84:	81a5      	strh	r5, [r4, #12]
 8001e86:	2800      	cmp	r0, #0
 8001e88:	d1f4      	bne.n	8001e74 <rt_mbx_wait+0x64>
 8001e8a:	b662      	cpsie	i
 8001e8c:	bd70      	pop	{r4, r5, r6, pc}
 8001e8e:	b14a      	cbz	r2, 8001ea4 <rt_mbx_wait+0x94>
 8001e90:	6842      	ldr	r2, [r0, #4]
 8001e92:	4b09      	ldr	r3, [pc, #36]	; (8001eb8 <rt_mbx_wait+0xa8>)
 8001e94:	b142      	cbz	r2, 8001ea8 <rt_mbx_wait+0x98>
 8001e96:	6819      	ldr	r1, [r3, #0]
 8001e98:	f7ff fcd0 	bl	800183c <rt_put_prio>
 8001e9c:	2108      	movs	r1, #8
 8001e9e:	4630      	mov	r0, r6
 8001ea0:	f000 fc8a 	bl	80027b8 <rt_block>
 8001ea4:	2001      	movs	r0, #1
 8001ea6:	bd70      	pop	{r4, r5, r6, pc}
 8001ea8:	681b      	ldr	r3, [r3, #0]
 8001eaa:	6043      	str	r3, [r0, #4]
 8001eac:	605a      	str	r2, [r3, #4]
 8001eae:	6098      	str	r0, [r3, #8]
 8001eb0:	2301      	movs	r3, #1
 8001eb2:	7043      	strb	r3, [r0, #1]
 8001eb4:	e7f2      	b.n	8001e9c <rt_mbx_wait+0x8c>
 8001eb6:	bf00      	nop
 8001eb8:	200028c4 	.word	0x200028c4

08001ebc <rt_mbx_check>:
 8001ebc:	89c2      	ldrh	r2, [r0, #14]
 8001ebe:	8980      	ldrh	r0, [r0, #12]
 8001ec0:	1a10      	subs	r0, r2, r0
 8001ec2:	4770      	bx	lr

08001ec4 <isr_mbx_send>:
 8001ec4:	b508      	push	{r3, lr}
 8001ec6:	f7ff fd8b 	bl	80019e0 <rt_psq_enq>
 8001eca:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001ece:	f7ff beb3 	b.w	8001c38 <rt_psh_req>

08001ed2 <isr_mbx_receive>:
 8001ed2:	8983      	ldrh	r3, [r0, #12]
 8001ed4:	b510      	push	{r4, lr}
 8001ed6:	4604      	mov	r4, r0
 8001ed8:	b30b      	cbz	r3, 8001f1e <isr_mbx_receive+0x4c>
 8001eda:	8943      	ldrh	r3, [r0, #10]
 8001edc:	3304      	adds	r3, #4
 8001ede:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8001ee2:	600b      	str	r3, [r1, #0]
 8001ee4:	7843      	ldrb	r3, [r0, #1]
 8001ee6:	2b02      	cmp	r3, #2
 8001ee8:	d104      	bne.n	8001ef4 <isr_mbx_receive+0x22>
 8001eea:	2100      	movs	r1, #0
 8001eec:	f7ff fd78 	bl	80019e0 <rt_psq_enq>
 8001ef0:	f7ff fea2 	bl	8001c38 <rt_psh_req>
 8001ef4:	f3ef 8310 	mrs	r3, PRIMASK
 8001ef8:	f3ef 8210 	mrs	r2, PRIMASK
 8001efc:	b672      	cpsid	i
 8001efe:	89a2      	ldrh	r2, [r4, #12]
 8001f00:	3a01      	subs	r2, #1
 8001f02:	81a2      	strh	r2, [r4, #12]
 8001f04:	b903      	cbnz	r3, 8001f08 <isr_mbx_receive+0x36>
 8001f06:	b662      	cpsie	i
 8001f08:	8963      	ldrh	r3, [r4, #10]
 8001f0a:	89e2      	ldrh	r2, [r4, #14]
 8001f0c:	3301      	adds	r3, #1
 8001f0e:	b29b      	uxth	r3, r3
 8001f10:	429a      	cmp	r2, r3
 8001f12:	8163      	strh	r3, [r4, #10]
 8001f14:	d101      	bne.n	8001f1a <isr_mbx_receive+0x48>
 8001f16:	2300      	movs	r3, #0
 8001f18:	8163      	strh	r3, [r4, #10]
 8001f1a:	2004      	movs	r0, #4
 8001f1c:	bd10      	pop	{r4, pc}
 8001f1e:	4618      	mov	r0, r3
 8001f20:	bd10      	pop	{r4, pc}
	...

08001f24 <rt_mbx_psh>:
 8001f24:	6843      	ldr	r3, [r0, #4]
 8001f26:	b570      	push	{r4, r5, r6, lr}
 8001f28:	4604      	mov	r4, r0
 8001f2a:	460e      	mov	r6, r1
 8001f2c:	2b00      	cmp	r3, #0
 8001f2e:	d04b      	beq.n	8001fc8 <rt_mbx_psh+0xa4>
 8001f30:	7845      	ldrb	r5, [r0, #1]
 8001f32:	2d02      	cmp	r5, #2
 8001f34:	d020      	beq.n	8001f78 <rt_mbx_psh+0x54>
 8001f36:	2d03      	cmp	r5, #3
 8001f38:	d00a      	beq.n	8001f50 <rt_mbx_psh+0x2c>
 8001f3a:	2d01      	cmp	r5, #1
 8001f3c:	d161      	bne.n	8002002 <rt_mbx_psh+0xde>
 8001f3e:	f7ff fc95 	bl	800186c <rt_get_first>
 8001f42:	4604      	mov	r4, r0
 8001f44:	4632      	mov	r2, r6
 8001f46:	2110      	movs	r1, #16
 8001f48:	f7ff fe6b 	bl	8001c22 <rt_ret_val2>
 8001f4c:	7065      	strb	r5, [r4, #1]
 8001f4e:	e00e      	b.n	8001f6e <rt_mbx_psh+0x4a>
 8001f50:	4608      	mov	r0, r1
 8001f52:	f7ff ff2e 	bl	8001db2 <rt_alloc_box>
 8001f56:	4605      	mov	r5, r0
 8001f58:	2800      	cmp	r0, #0
 8001f5a:	d052      	beq.n	8002002 <rt_mbx_psh+0xde>
 8001f5c:	4620      	mov	r0, r4
 8001f5e:	f7ff fc85 	bl	800186c <rt_get_first>
 8001f62:	4629      	mov	r1, r5
 8001f64:	4604      	mov	r4, r0
 8001f66:	f7ff fe53 	bl	8001c10 <rt_ret_val>
 8001f6a:	2301      	movs	r3, #1
 8001f6c:	7063      	strb	r3, [r4, #1]
 8001f6e:	4620      	mov	r0, r4
 8001f70:	f7ff fd22 	bl	80019b8 <rt_rmv_dly>
 8001f74:	4621      	mov	r1, r4
 8001f76:	e022      	b.n	8001fbe <rt_mbx_psh+0x9a>
 8001f78:	f7ff fc78 	bl	800186c <rt_get_first>
 8001f7c:	2100      	movs	r1, #0
 8001f7e:	4605      	mov	r5, r0
 8001f80:	f7ff fe46 	bl	8001c10 <rt_ret_val>
 8001f84:	8923      	ldrh	r3, [r4, #8]
 8001f86:	69e9      	ldr	r1, [r5, #28]
 8001f88:	1d1a      	adds	r2, r3, #4
 8001f8a:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
 8001f8e:	f3ef 8210 	mrs	r2, PRIMASK
 8001f92:	f3ef 8110 	mrs	r1, PRIMASK
 8001f96:	b672      	cpsid	i
 8001f98:	89a1      	ldrh	r1, [r4, #12]
 8001f9a:	3101      	adds	r1, #1
 8001f9c:	81a1      	strh	r1, [r4, #12]
 8001f9e:	b902      	cbnz	r2, 8001fa2 <rt_mbx_psh+0x7e>
 8001fa0:	b662      	cpsie	i
 8001fa2:	89e2      	ldrh	r2, [r4, #14]
 8001fa4:	3301      	adds	r3, #1
 8001fa6:	b29b      	uxth	r3, r3
 8001fa8:	429a      	cmp	r2, r3
 8001faa:	8123      	strh	r3, [r4, #8]
 8001fac:	bf04      	itt	eq
 8001fae:	2300      	moveq	r3, #0
 8001fb0:	8123      	strheq	r3, [r4, #8]
 8001fb2:	2301      	movs	r3, #1
 8001fb4:	706b      	strb	r3, [r5, #1]
 8001fb6:	4628      	mov	r0, r5
 8001fb8:	f7ff fcfe 	bl	80019b8 <rt_rmv_dly>
 8001fbc:	4629      	mov	r1, r5
 8001fbe:	4811      	ldr	r0, [pc, #68]	; (8002004 <rt_mbx_psh+0xe0>)
 8001fc0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001fc4:	f7ff bc3a 	b.w	800183c <rt_put_prio>
 8001fc8:	8980      	ldrh	r0, [r0, #12]
 8001fca:	89e1      	ldrh	r1, [r4, #14]
 8001fcc:	4288      	cmp	r0, r1
 8001fce:	d213      	bcs.n	8001ff8 <rt_mbx_psh+0xd4>
 8001fd0:	8923      	ldrh	r3, [r4, #8]
 8001fd2:	1d1a      	adds	r2, r3, #4
 8001fd4:	f844 6022 	str.w	r6, [r4, r2, lsl #2]
 8001fd8:	f3ef 8210 	mrs	r2, PRIMASK
 8001fdc:	f3ef 8510 	mrs	r5, PRIMASK
 8001fe0:	b672      	cpsid	i
 8001fe2:	3001      	adds	r0, #1
 8001fe4:	81a0      	strh	r0, [r4, #12]
 8001fe6:	b902      	cbnz	r2, 8001fea <rt_mbx_psh+0xc6>
 8001fe8:	b662      	cpsie	i
 8001fea:	3301      	adds	r3, #1
 8001fec:	b29b      	uxth	r3, r3
 8001fee:	4299      	cmp	r1, r3
 8001ff0:	bf08      	it	eq
 8001ff2:	2300      	moveq	r3, #0
 8001ff4:	8123      	strh	r3, [r4, #8]
 8001ff6:	bd70      	pop	{r4, r5, r6, pc}
 8001ff8:	2003      	movs	r0, #3
 8001ffa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001ffe:	f7ff bbcf 	b.w	80017a0 <os_error>
 8002002:	bd70      	pop	{r4, r5, r6, pc}
 8002004:	20002878 	.word	0x20002878

08002008 <rt_evt_psh>:
 8002008:	b510      	push	{r4, lr}
 800200a:	8b03      	ldrh	r3, [r0, #24]
 800200c:	7842      	ldrb	r2, [r0, #1]
 800200e:	4319      	orrs	r1, r3
 8002010:	2a06      	cmp	r2, #6
 8002012:	4604      	mov	r4, r0
 8002014:	8301      	strh	r1, [r0, #24]
 8002016:	8b43      	ldrh	r3, [r0, #26]
 8002018:	d115      	bne.n	8002046 <rt_evt_psh+0x3e>
 800201a:	ea33 0201 	bics.w	r2, r3, r1
 800201e:	d119      	bne.n	8002054 <rt_evt_psh+0x4c>
 8002020:	ea21 0103 	bic.w	r1, r1, r3
 8002024:	8321      	strh	r1, [r4, #24]
 8002026:	4620      	mov	r0, r4
 8002028:	f7ff fcc6 	bl	80019b8 <rt_rmv_dly>
 800202c:	2301      	movs	r3, #1
 800202e:	4620      	mov	r0, r4
 8002030:	7063      	strb	r3, [r4, #1]
 8002032:	8b62      	ldrh	r2, [r4, #26]
 8002034:	2108      	movs	r1, #8
 8002036:	f7ff fdf4 	bl	8001c22 <rt_ret_val2>
 800203a:	4621      	mov	r1, r4
 800203c:	4806      	ldr	r0, [pc, #24]	; (8002058 <rt_evt_psh+0x50>)
 800203e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002042:	f7ff bbfb 	b.w	800183c <rt_put_prio>
 8002046:	2a05      	cmp	r2, #5
 8002048:	d104      	bne.n	8002054 <rt_evt_psh+0x4c>
 800204a:	ea11 0203 	ands.w	r2, r1, r3
 800204e:	d001      	beq.n	8002054 <rt_evt_psh+0x4c>
 8002050:	8342      	strh	r2, [r0, #26]
 8002052:	e7e5      	b.n	8002020 <rt_evt_psh+0x18>
 8002054:	bd10      	pop	{r4, pc}
 8002056:	bf00      	nop
 8002058:	20002878 	.word	0x20002878

0800205c <rt_init_robin>:
 800205c:	4b03      	ldr	r3, [pc, #12]	; (800206c <rt_init_robin+0x10>)
 800205e:	2200      	movs	r2, #0
 8002060:	601a      	str	r2, [r3, #0]
 8002062:	4a03      	ldr	r2, [pc, #12]	; (8002070 <rt_init_robin+0x14>)
 8002064:	6812      	ldr	r2, [r2, #0]
 8002066:	80da      	strh	r2, [r3, #6]
 8002068:	4770      	bx	lr
 800206a:	bf00      	nop
 800206c:	200028b0 	.word	0x200028b0
 8002070:	080063f0 	.word	0x080063f0

08002074 <rt_chk_robin>:
 8002074:	b508      	push	{r3, lr}
 8002076:	4b0e      	ldr	r3, [pc, #56]	; (80020b0 <rt_chk_robin+0x3c>)
 8002078:	685a      	ldr	r2, [r3, #4]
 800207a:	4b0e      	ldr	r3, [pc, #56]	; (80020b4 <rt_chk_robin+0x40>)
 800207c:	6819      	ldr	r1, [r3, #0]
 800207e:	4291      	cmp	r1, r2
 8002080:	490d      	ldr	r1, [pc, #52]	; (80020b8 <rt_chk_robin+0x44>)
 8002082:	d005      	beq.n	8002090 <rt_chk_robin+0x1c>
 8002084:	601a      	str	r2, [r3, #0]
 8002086:	88da      	ldrh	r2, [r3, #6]
 8002088:	6808      	ldr	r0, [r1, #0]
 800208a:	3a01      	subs	r2, #1
 800208c:	4402      	add	r2, r0
 800208e:	809a      	strh	r2, [r3, #4]
 8002090:	8898      	ldrh	r0, [r3, #4]
 8002092:	880a      	ldrh	r2, [r1, #0]
 8002094:	4290      	cmp	r0, r2
 8002096:	d10a      	bne.n	80020ae <rt_chk_robin+0x3a>
 8002098:	2200      	movs	r2, #0
 800209a:	4805      	ldr	r0, [pc, #20]	; (80020b0 <rt_chk_robin+0x3c>)
 800209c:	601a      	str	r2, [r3, #0]
 800209e:	f7ff fbe5 	bl	800186c <rt_get_first>
 80020a2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80020a6:	4601      	mov	r1, r0
 80020a8:	4801      	ldr	r0, [pc, #4]	; (80020b0 <rt_chk_robin+0x3c>)
 80020aa:	f7ff bbc7 	b.w	800183c <rt_put_prio>
 80020ae:	bd08      	pop	{r3, pc}
 80020b0:	20002878 	.word	0x20002878
 80020b4:	200028b0 	.word	0x200028b0
 80020b8:	2000290c 	.word	0x2000290c

080020bc <rt_timer_insert>:
 80020bc:	4a0b      	ldr	r2, [pc, #44]	; (80020ec <rt_timer_insert+0x30>)
 80020be:	6813      	ldr	r3, [r2, #0]
 80020c0:	b530      	push	{r4, r5, lr}
 80020c2:	2400      	movs	r4, #0
 80020c4:	b943      	cbnz	r3, 80020d8 <rt_timer_insert+0x1c>
 80020c6:	6003      	str	r3, [r0, #0]
 80020c8:	6081      	str	r1, [r0, #8]
 80020ca:	b113      	cbz	r3, 80020d2 <rt_timer_insert+0x16>
 80020cc:	689d      	ldr	r5, [r3, #8]
 80020ce:	1a69      	subs	r1, r5, r1
 80020d0:	6099      	str	r1, [r3, #8]
 80020d2:	b144      	cbz	r4, 80020e6 <rt_timer_insert+0x2a>
 80020d4:	6020      	str	r0, [r4, #0]
 80020d6:	bd30      	pop	{r4, r5, pc}
 80020d8:	689d      	ldr	r5, [r3, #8]
 80020da:	42a9      	cmp	r1, r5
 80020dc:	d3f3      	bcc.n	80020c6 <rt_timer_insert+0xa>
 80020de:	461c      	mov	r4, r3
 80020e0:	1b49      	subs	r1, r1, r5
 80020e2:	681b      	ldr	r3, [r3, #0]
 80020e4:	e7ee      	b.n	80020c4 <rt_timer_insert+0x8>
 80020e6:	6010      	str	r0, [r2, #0]
 80020e8:	bd30      	pop	{r4, r5, pc}
 80020ea:	bf00      	nop
 80020ec:	200028c0 	.word	0x200028c0

080020f0 <rt_ms2tick>:
 80020f0:	b1c0      	cbz	r0, 8002124 <rt_ms2tick+0x34>
 80020f2:	1c43      	adds	r3, r0, #1
 80020f4:	d011      	beq.n	800211a <rt_ms2tick+0x2a>
 80020f6:	4b0c      	ldr	r3, [pc, #48]	; (8002128 <rt_ms2tick+0x38>)
 80020f8:	4298      	cmp	r0, r3
 80020fa:	d811      	bhi.n	8002120 <rt_ms2tick+0x30>
 80020fc:	4b0b      	ldr	r3, [pc, #44]	; (800212c <rt_ms2tick+0x3c>)
 80020fe:	681b      	ldr	r3, [r3, #0]
 8002100:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8002104:	1e5a      	subs	r2, r3, #1
 8002106:	fb01 2000 	mla	r0, r1, r0, r2
 800210a:	fbb0 f3f3 	udiv	r3, r0, r3
 800210e:	f64f 70fe 	movw	r0, #65534	; 0xfffe
 8002112:	4283      	cmp	r3, r0
 8002114:	d806      	bhi.n	8002124 <rt_ms2tick+0x34>
 8002116:	b298      	uxth	r0, r3
 8002118:	4770      	bx	lr
 800211a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800211e:	4770      	bx	lr
 8002120:	f64f 70fe 	movw	r0, #65534	; 0xfffe
 8002124:	4770      	bx	lr
 8002126:	bf00      	nop
 8002128:	003d0900 	.word	0x003d0900
 800212c:	080063a8 	.word	0x080063a8

08002130 <rt_tid2ptcb>:
 8002130:	b138      	cbz	r0, 8002142 <rt_tid2ptcb+0x12>
 8002132:	0783      	lsls	r3, r0, #30
 8002134:	d104      	bne.n	8002140 <rt_tid2ptcb+0x10>
 8002136:	7803      	ldrb	r3, [r0, #0]
 8002138:	2b00      	cmp	r3, #0
 800213a:	bf18      	it	ne
 800213c:	2000      	movne	r0, #0
 800213e:	4770      	bx	lr
 8002140:	2000      	movs	r0, #0
 8002142:	4770      	bx	lr

08002144 <svcKernelStart>:
 8002144:	b5b0      	push	{r4, r5, r7, lr}
 8002146:	4d0e      	ldr	r5, [pc, #56]	; (8002180 <svcKernelStart+0x3c>)
 8002148:	7828      	ldrb	r0, [r5, #0]
 800214a:	af00      	add	r7, sp, #0
 800214c:	b9a8      	cbnz	r0, 800217a <svcKernelStart+0x36>
 800214e:	4c0d      	ldr	r4, [pc, #52]	; (8002184 <svcKernelStart+0x40>)
 8002150:	6823      	ldr	r3, [r4, #0]
 8002152:	f893 1024 	ldrb.w	r1, [r3, #36]	; 0x24
 8002156:	f000 fb51 	bl	80027fc <rt_tsk_prio>
 800215a:	6823      	ldr	r3, [r4, #0]
 800215c:	78da      	ldrb	r2, [r3, #3]
 800215e:	2aff      	cmp	r2, #255	; 0xff
 8002160:	d103      	bne.n	800216a <svcKernelStart+0x26>
 8002162:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002164:	3220      	adds	r2, #32
 8002166:	f382 8809 	msr	PSP, r2
 800216a:	6862      	ldr	r2, [r4, #4]
 800216c:	b90a      	cbnz	r2, 8002172 <svcKernelStart+0x2e>
 800216e:	e884 000c 	stmia.w	r4, {r2, r3}
 8002172:	f000 fcfb 	bl	8002b6c <rt_sys_start>
 8002176:	2301      	movs	r3, #1
 8002178:	702b      	strb	r3, [r5, #0]
 800217a:	2000      	movs	r0, #0
 800217c:	bdb0      	pop	{r4, r5, r7, pc}
 800217e:	bf00      	nop
 8002180:	200028bd 	.word	0x200028bd
 8002184:	200028c4 	.word	0x200028c4

08002188 <svcKernelRunning>:
 8002188:	4b01      	ldr	r3, [pc, #4]	; (8002190 <svcKernelRunning+0x8>)
 800218a:	7818      	ldrb	r0, [r3, #0]
 800218c:	4770      	bx	lr
 800218e:	bf00      	nop
 8002190:	200028bd 	.word	0x200028bd

08002194 <osKernelRunning>:
 8002194:	b510      	push	{r4, lr}
 8002196:	f3ef 8410 	mrs	r4, PRIMASK
 800219a:	b934      	cbnz	r4, 80021aa <osKernelRunning+0x16>
 800219c:	f3ef 8405 	mrs	r4, IPSR
 80021a0:	b91c      	cbnz	r4, 80021aa <osKernelRunning+0x16>
 80021a2:	f3ef 8414 	mrs	r4, CONTROL
 80021a6:	07e4      	lsls	r4, r4, #31
 80021a8:	d402      	bmi.n	80021b0 <osKernelRunning+0x1c>
 80021aa:	4b03      	ldr	r3, [pc, #12]	; (80021b8 <osKernelRunning+0x24>)
 80021ac:	7818      	ldrb	r0, [r3, #0]
 80021ae:	bd10      	pop	{r4, pc}
 80021b0:	f8df c008 	ldr.w	r12, [pc, #8]	; 80021bc <osKernelRunning+0x28>
 80021b4:	df00      	svc	0
 80021b6:	bd10      	pop	{r4, pc}
 80021b8:	200028bd 	.word	0x200028bd
 80021bc:	08002189 	.word	0x08002189

080021c0 <osKernelStart>:
 80021c0:	b590      	push	{r4, r7, lr}
 80021c2:	b089      	sub	sp, #36	; 0x24
 80021c4:	af00      	add	r7, sp, #0
 80021c6:	f3ef 8310 	mrs	r3, PRIMASK
 80021ca:	2b00      	cmp	r3, #0
 80021cc:	d137      	bne.n	800223e <osKernelStart+0x7e>
 80021ce:	f3ef 8305 	mrs	r3, IPSR
 80021d2:	2b00      	cmp	r3, #0
 80021d4:	d133      	bne.n	800223e <osKernelStart+0x7e>
 80021d6:	f7ff ffdd 	bl	8002194 <osKernelRunning>
 80021da:	b928      	cbnz	r0, 80021e8 <osKernelStart+0x28>
 80021dc:	4c19      	ldr	r4, [pc, #100]	; (8002244 <osKernelStart+0x84>)
 80021de:	6824      	ldr	r4, [r4, #0]
 80021e0:	b114      	cbz	r4, 80021e8 <osKernelStart+0x28>
 80021e2:	6864      	ldr	r4, [r4, #4]
 80021e4:	b104      	cbz	r4, 80021e8 <osKernelStart+0x28>
 80021e6:	47a0      	blx	r4
 80021e8:	f3ef 8414 	mrs	r4, CONTROL
 80021ec:	f004 0403 	and.w	r4, r4, #3
 80021f0:	2c02      	cmp	r4, #2
 80021f2:	d018      	beq.n	8002226 <osKernelStart+0x66>
 80021f4:	2c03      	cmp	r4, #3
 80021f6:	d01c      	beq.n	8002232 <osKernelStart+0x72>
 80021f8:	2c01      	cmp	r4, #1
 80021fa:	d01e      	beq.n	800223a <osKernelStart+0x7a>
 80021fc:	f107 0420 	add.w	r4, r7, #32
 8002200:	f384 8809 	msr	PSP, r4
 8002204:	4c10      	ldr	r4, [pc, #64]	; (8002248 <osKernelStart+0x88>)
 8002206:	7824      	ldrb	r4, [r4, #0]
 8002208:	07e4      	lsls	r4, r4, #31
 800220a:	d510      	bpl.n	800222e <osKernelStart+0x6e>
 800220c:	2402      	movs	r4, #2
 800220e:	f384 8814 	msr	CONTROL, r4
 8002212:	f3bf 8f4f 	dsb	sy
 8002216:	f3bf 8f6f 	isb	sy
 800221a:	f8df c030 	ldr.w	r12, [pc, #48]	; 800224c <osKernelStart+0x8c>
 800221e:	df00      	svc	0
 8002220:	3724      	adds	r7, #36	; 0x24
 8002222:	46bd      	mov	sp, r7
 8002224:	bd90      	pop	{r4, r7, pc}
 8002226:	4c08      	ldr	r4, [pc, #32]	; (8002248 <osKernelStart+0x88>)
 8002228:	7824      	ldrb	r4, [r4, #0]
 800222a:	07e4      	lsls	r4, r4, #31
 800222c:	d4f5      	bmi.n	800221a <osKernelStart+0x5a>
 800222e:	2403      	movs	r4, #3
 8002230:	e7ed      	b.n	800220e <osKernelStart+0x4e>
 8002232:	4c05      	ldr	r4, [pc, #20]	; (8002248 <osKernelStart+0x88>)
 8002234:	7824      	ldrb	r4, [r4, #0]
 8002236:	07e4      	lsls	r4, r4, #31
 8002238:	d5ef      	bpl.n	800221a <osKernelStart+0x5a>
 800223a:	20ff      	movs	r0, #255	; 0xff
 800223c:	e7f0      	b.n	8002220 <osKernelStart+0x60>
 800223e:	2082      	movs	r0, #130	; 0x82
 8002240:	e7ee      	b.n	8002220 <osKernelStart+0x60>
 8002242:	bf00      	nop
 8002244:	200028ac 	.word	0x200028ac
 8002248:	080063d6 	.word	0x080063d6
 800224c:	08002145 	.word	0x08002145

08002250 <svcThreadCreate>:
 8002250:	b570      	push	{r4, r5, r6, lr}
 8002252:	460b      	mov	r3, r1
 8002254:	4616      	mov	r6, r2
 8002256:	4602      	mov	r2, r0
 8002258:	b910      	cbnz	r0, 8002260 <svcThreadCreate+0x10>
 800225a:	2400      	movs	r4, #0
 800225c:	4620      	mov	r0, r4
 800225e:	bd70      	pop	{r4, r5, r6, pc}
 8002260:	6800      	ldr	r0, [r0, #0]
 8002262:	2800      	cmp	r0, #0
 8002264:	d0f9      	beq.n	800225a <svcThreadCreate+0xa>
 8002266:	f9b2 4004 	ldrsh.w	r4, [r2, #4]
 800226a:	1ce5      	adds	r5, r4, #3
 800226c:	b2ad      	uxth	r5, r5
 800226e:	2d06      	cmp	r5, #6
 8002270:	d8f3      	bhi.n	800225a <svcThreadCreate+0xa>
 8002272:	68d1      	ldr	r1, [r2, #12]
 8002274:	b1c1      	cbz	r1, 80022a8 <svcThreadCreate+0x58>
 8002276:	6912      	ldr	r2, [r2, #16]
 8002278:	3404      	adds	r4, #4
 800227a:	ea44 2101 	orr.w	r1, r4, r1, lsl #8
 800227e:	f000 fafb 	bl	8002878 <rt_tsk_create>
 8002282:	2800      	cmp	r0, #0
 8002284:	d0e9      	beq.n	800225a <svcThreadCreate+0xa>
 8002286:	4b0a      	ldr	r3, [pc, #40]	; (80022b0 <svcThreadCreate+0x60>)
 8002288:	4a0a      	ldr	r2, [pc, #40]	; (80022b4 <svcThreadCreate+0x64>)
 800228a:	3801      	subs	r0, #1
 800228c:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 8002290:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8002292:	635a      	str	r2, [r3, #52]	; 0x34
 8002294:	4b08      	ldr	r3, [pc, #32]	; (80022b8 <svcThreadCreate+0x68>)
 8002296:	681b      	ldr	r3, [r3, #0]
 8002298:	b143      	cbz	r3, 80022ac <svcThreadCreate+0x5c>
 800229a:	689b      	ldr	r3, [r3, #8]
 800229c:	b133      	cbz	r3, 80022ac <svcThreadCreate+0x5c>
 800229e:	4631      	mov	r1, r6
 80022a0:	78e0      	ldrb	r0, [r4, #3]
 80022a2:	4798      	blx	r3
 80022a4:	63e0      	str	r0, [r4, #60]	; 0x3c
 80022a6:	e7d9      	b.n	800225c <svcThreadCreate+0xc>
 80022a8:	460a      	mov	r2, r1
 80022aa:	e7e5      	b.n	8002278 <svcThreadCreate+0x28>
 80022ac:	63e6      	str	r6, [r4, #60]	; 0x3c
 80022ae:	e7d5      	b.n	800225c <svcThreadCreate+0xc>
 80022b0:	200020c0 	.word	0x200020c0
 80022b4:	0800243d 	.word	0x0800243d
 80022b8:	200028ac 	.word	0x200028ac

080022bc <svcThreadGetId>:
 80022bc:	b508      	push	{r3, lr}
 80022be:	f000 fa95 	bl	80027ec <rt_tsk_self>
 80022c2:	b118      	cbz	r0, 80022cc <svcThreadGetId+0x10>
 80022c4:	3801      	subs	r0, #1
 80022c6:	4b02      	ldr	r3, [pc, #8]	; (80022d0 <svcThreadGetId+0x14>)
 80022c8:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 80022cc:	bd08      	pop	{r3, pc}
 80022ce:	bf00      	nop
 80022d0:	200020c0 	.word	0x200020c0

080022d4 <svcThreadTerminate>:
 80022d4:	b510      	push	{r4, lr}
 80022d6:	f7ff ff2b 	bl	8002130 <rt_tid2ptcb>
 80022da:	4604      	mov	r4, r0
 80022dc:	b170      	cbz	r0, 80022fc <svcThreadTerminate+0x28>
 80022de:	4b08      	ldr	r3, [pc, #32]	; (8002300 <svcThreadTerminate+0x2c>)
 80022e0:	681b      	ldr	r3, [r3, #0]
 80022e2:	b11b      	cbz	r3, 80022ec <svcThreadTerminate+0x18>
 80022e4:	68db      	ldr	r3, [r3, #12]
 80022e6:	b10b      	cbz	r3, 80022ec <svcThreadTerminate+0x18>
 80022e8:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80022ea:	4798      	blx	r3
 80022ec:	78e0      	ldrb	r0, [r4, #3]
 80022ee:	f000 fb19 	bl	8002924 <rt_tsk_delete>
 80022f2:	28ff      	cmp	r0, #255	; 0xff
 80022f4:	bf0c      	ite	eq
 80022f6:	2081      	moveq	r0, #129	; 0x81
 80022f8:	2000      	movne	r0, #0
 80022fa:	bd10      	pop	{r4, pc}
 80022fc:	2080      	movs	r0, #128	; 0x80
 80022fe:	bd10      	pop	{r4, pc}
 8002300:	200028ac 	.word	0x200028ac

08002304 <svcDelay>:
 8002304:	b508      	push	{r3, lr}
 8002306:	b128      	cbz	r0, 8002314 <svcDelay+0x10>
 8002308:	f7ff fef2 	bl	80020f0 <rt_ms2tick>
 800230c:	f000 fc74 	bl	8002bf8 <rt_dly_wait>
 8002310:	2040      	movs	r0, #64	; 0x40
 8002312:	bd08      	pop	{r3, pc}
 8002314:	bd08      	pop	{r3, pc}
	...

08002318 <osDelay>:
 8002318:	b510      	push	{r4, lr}
 800231a:	f3ef 8410 	mrs	r4, PRIMASK
 800231e:	b934      	cbnz	r4, 800232e <osDelay+0x16>
 8002320:	f3ef 8405 	mrs	r4, IPSR
 8002324:	b91c      	cbnz	r4, 800232e <osDelay+0x16>
 8002326:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002334 <osDelay+0x1c>
 800232a:	df00      	svc	0
 800232c:	bd10      	pop	{r4, pc}
 800232e:	2082      	movs	r0, #130	; 0x82
 8002330:	bd10      	pop	{r4, pc}
 8002332:	0000      	.short	0x0000
 8002334:	08002305 	.word	0x08002305

08002338 <svcTimerCall>:
 8002338:	0783      	lsls	r3, r0, #30
 800233a:	d105      	bne.n	8002348 <svcTimerCall+0x10>
 800233c:	b138      	cbz	r0, 800234e <svcTimerCall+0x16>
 800233e:	6943      	ldr	r3, [r0, #20]
 8002340:	6901      	ldr	r1, [r0, #16]
 8002342:	681b      	ldr	r3, [r3, #0]
 8002344:	4618      	mov	r0, r3
 8002346:	4770      	bx	lr
 8002348:	2300      	movs	r3, #0
 800234a:	4619      	mov	r1, r3
 800234c:	e7fa      	b.n	8002344 <svcTimerCall+0xc>
 800234e:	4603      	mov	r3, r0
 8002350:	e7fb      	b.n	800234a <svcTimerCall+0x12>
	...

08002354 <osTimerCall>:
 8002354:	b510      	push	{r4, lr}
 8002356:	4604      	mov	r4, r0
 8002358:	4608      	mov	r0, r1
 800235a:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002368 <osTimerCall+0x14>
 800235e:	df00      	svc	0
 8002360:	e884 0003 	stmia.w	r4, {r0, r1}
 8002364:	4620      	mov	r0, r4
 8002366:	bd10      	pop	{r4, pc}
 8002368:	08002339 	.word	0x08002339

0800236c <svcMutexCreate>:
 800236c:	b510      	push	{r4, lr}
 800236e:	b148      	cbz	r0, 8002384 <svcMutexCreate+0x18>
 8002370:	6804      	ldr	r4, [r0, #0]
 8002372:	b124      	cbz	r4, 800237e <svcMutexCreate+0x12>
 8002374:	7823      	ldrb	r3, [r4, #0]
 8002376:	b923      	cbnz	r3, 8002382 <svcMutexCreate+0x16>
 8002378:	4620      	mov	r0, r4
 800237a:	f7ff fb57 	bl	8001a2c <rt_mut_init>
 800237e:	4620      	mov	r0, r4
 8002380:	bd10      	pop	{r4, pc}
 8002382:	2000      	movs	r0, #0
 8002384:	bd10      	pop	{r4, pc}

08002386 <svcMutexWait>:
 8002386:	b570      	push	{r4, r5, r6, lr}
 8002388:	f010 0403 	ands.w	r4, r0, #3
 800238c:	4605      	mov	r5, r0
 800238e:	460e      	mov	r6, r1
 8002390:	d111      	bne.n	80023b6 <svcMutexWait+0x30>
 8002392:	b180      	cbz	r0, 80023b6 <svcMutexWait+0x30>
 8002394:	7803      	ldrb	r3, [r0, #0]
 8002396:	2b03      	cmp	r3, #3
 8002398:	d10d      	bne.n	80023b6 <svcMutexWait+0x30>
 800239a:	4608      	mov	r0, r1
 800239c:	f7ff fea8 	bl	80020f0 <rt_ms2tick>
 80023a0:	4601      	mov	r1, r0
 80023a2:	4628      	mov	r0, r5
 80023a4:	f7ff fbba 	bl	8001b1c <rt_mut_wait>
 80023a8:	2801      	cmp	r0, #1
 80023aa:	d106      	bne.n	80023ba <svcMutexWait+0x34>
 80023ac:	2e00      	cmp	r6, #0
 80023ae:	bf14      	ite	ne
 80023b0:	20c1      	movne	r0, #193	; 0xc1
 80023b2:	2081      	moveq	r0, #129	; 0x81
 80023b4:	bd70      	pop	{r4, r5, r6, pc}
 80023b6:	2080      	movs	r0, #128	; 0x80
 80023b8:	bd70      	pop	{r4, r5, r6, pc}
 80023ba:	4620      	mov	r0, r4
 80023bc:	bd70      	pop	{r4, r5, r6, pc}

080023be <svcMutexRelease>:
 80023be:	0782      	lsls	r2, r0, #30
 80023c0:	b508      	push	{r3, lr}
 80023c2:	d10a      	bne.n	80023da <svcMutexRelease+0x1c>
 80023c4:	b148      	cbz	r0, 80023da <svcMutexRelease+0x1c>
 80023c6:	7803      	ldrb	r3, [r0, #0]
 80023c8:	2b03      	cmp	r3, #3
 80023ca:	d106      	bne.n	80023da <svcMutexRelease+0x1c>
 80023cc:	f7ff fb36 	bl	8001a3c <rt_mut_release>
 80023d0:	28ff      	cmp	r0, #255	; 0xff
 80023d2:	bf0c      	ite	eq
 80023d4:	2081      	moveq	r0, #129	; 0x81
 80023d6:	2000      	movne	r0, #0
 80023d8:	bd08      	pop	{r3, pc}
 80023da:	2080      	movs	r0, #128	; 0x80
 80023dc:	bd08      	pop	{r3, pc}
	...

080023e0 <osMutexCreate>:
 80023e0:	b570      	push	{r4, r5, r6, lr}
 80023e2:	4605      	mov	r5, r0
 80023e4:	f3ef 8410 	mrs	r4, PRIMASK
 80023e8:	b994      	cbnz	r4, 8002410 <osMutexCreate+0x30>
 80023ea:	f3ef 8605 	mrs	r6, IPSR
 80023ee:	b97e      	cbnz	r6, 8002410 <osMutexCreate+0x30>
 80023f0:	f3ef 8414 	mrs	r4, CONTROL
 80023f4:	07e4      	lsls	r4, r4, #31
 80023f6:	d406      	bmi.n	8002406 <osMutexCreate+0x26>
 80023f8:	4c06      	ldr	r4, [pc, #24]	; (8002414 <osMutexCreate+0x34>)
 80023fa:	7824      	ldrb	r4, [r4, #0]
 80023fc:	b91c      	cbnz	r4, 8002406 <osMutexCreate+0x26>
 80023fe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002402:	f7ff bfb3 	b.w	800236c <svcMutexCreate>
 8002406:	4628      	mov	r0, r5
 8002408:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002418 <osMutexCreate+0x38>
 800240c:	df00      	svc	0
 800240e:	bd70      	pop	{r4, r5, r6, pc}
 8002410:	2000      	movs	r0, #0
 8002412:	bd70      	pop	{r4, r5, r6, pc}
 8002414:	200028bd 	.word	0x200028bd
 8002418:	0800236d 	.word	0x0800236d

0800241c <osMutexWait>:
 800241c:	b510      	push	{r4, lr}
 800241e:	f3ef 8410 	mrs	r4, PRIMASK
 8002422:	b934      	cbnz	r4, 8002432 <osMutexWait+0x16>
 8002424:	f3ef 8405 	mrs	r4, IPSR
 8002428:	b91c      	cbnz	r4, 8002432 <osMutexWait+0x16>
 800242a:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002438 <osMutexWait+0x1c>
 800242e:	df00      	svc	0
 8002430:	bd10      	pop	{r4, pc}
 8002432:	2082      	movs	r0, #130	; 0x82
 8002434:	bd10      	pop	{r4, pc}
 8002436:	0000      	.short	0x0000
 8002438:	08002387 	.word	0x08002387

0800243c <osThreadExit>:
 800243c:	4808      	ldr	r0, [pc, #32]	; (8002460 <osThreadExit+0x24>)
 800243e:	b508      	push	{r3, lr}
 8002440:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002444:	6800      	ldr	r0, [r0, #0]
 8002446:	f7ff ffe9 	bl	800241c <osMutexWait>
 800244a:	f8df c018 	ldr.w	r12, [pc, #24]	; 8002464 <osThreadExit+0x28>
 800244e:	df00      	svc	0
 8002450:	4604      	mov	r4, r0
 8002452:	f7ff f9b3 	bl	80017bc <sysThreadTerminate>
 8002456:	4620      	mov	r0, r4
 8002458:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002468 <osThreadExit+0x2c>
 800245c:	df00      	svc	0
 800245e:	e7fe      	b.n	800245e <osThreadExit+0x22>
 8002460:	200028b8 	.word	0x200028b8
 8002464:	080022bd 	.word	0x080022bd
 8002468:	080022d5 	.word	0x080022d5

0800246c <osMutexRelease>:
 800246c:	b510      	push	{r4, lr}
 800246e:	f3ef 8410 	mrs	r4, PRIMASK
 8002472:	b934      	cbnz	r4, 8002482 <osMutexRelease+0x16>
 8002474:	f3ef 8405 	mrs	r4, IPSR
 8002478:	b91c      	cbnz	r4, 8002482 <osMutexRelease+0x16>
 800247a:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002488 <osMutexRelease+0x1c>
 800247e:	df00      	svc	0
 8002480:	bd10      	pop	{r4, pc}
 8002482:	2082      	movs	r0, #130	; 0x82
 8002484:	bd10      	pop	{r4, pc}
 8002486:	0000      	.short	0x0000
 8002488:	080023bf 	.word	0x080023bf

0800248c <osThreadContextCreate>:
 800248c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002490:	4680      	mov	r8, r0
 8002492:	460f      	mov	r7, r1
 8002494:	4616      	mov	r6, r2
 8002496:	f3ef 8410 	mrs	r4, PRIMASK
 800249a:	bb04      	cbnz	r4, 80024de <osThreadContextCreate+0x52>
 800249c:	f3ef 8305 	mrs	r3, IPSR
 80024a0:	b9d3      	cbnz	r3, 80024d8 <osThreadContextCreate+0x4c>
 80024a2:	f3ef 8314 	mrs	r3, CONTROL
 80024a6:	07db      	lsls	r3, r3, #31
 80024a8:	d406      	bmi.n	80024b8 <osThreadContextCreate+0x2c>
 80024aa:	4b0e      	ldr	r3, [pc, #56]	; (80024e4 <osThreadContextCreate+0x58>)
 80024ac:	781b      	ldrb	r3, [r3, #0]
 80024ae:	b91b      	cbnz	r3, 80024b8 <osThreadContextCreate+0x2c>
 80024b0:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80024b4:	f7ff becc 	b.w	8002250 <svcThreadCreate>
 80024b8:	4d0b      	ldr	r5, [pc, #44]	; (80024e8 <osThreadContextCreate+0x5c>)
 80024ba:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80024be:	6828      	ldr	r0, [r5, #0]
 80024c0:	f7ff ffac 	bl	800241c <osMutexWait>
 80024c4:	4640      	mov	r0, r8
 80024c6:	4639      	mov	r1, r7
 80024c8:	4632      	mov	r2, r6
 80024ca:	f8df c020 	ldr.w	r12, [pc, #32]	; 80024ec <osThreadContextCreate+0x60>
 80024ce:	df00      	svc	0
 80024d0:	4604      	mov	r4, r0
 80024d2:	6828      	ldr	r0, [r5, #0]
 80024d4:	f7ff ffca 	bl	800246c <osMutexRelease>
 80024d8:	4620      	mov	r0, r4
 80024da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80024de:	2400      	movs	r4, #0
 80024e0:	e7fa      	b.n	80024d8 <osThreadContextCreate+0x4c>
 80024e2:	bf00      	nop
 80024e4:	200028bd 	.word	0x200028bd
 80024e8:	200028b8 	.word	0x200028b8
 80024ec:	08002251 	.word	0x08002251

080024f0 <osThreadCreate>:
 80024f0:	2200      	movs	r2, #0
 80024f2:	f7ff bfcb 	b.w	800248c <osThreadContextCreate>

080024f6 <svcMessageCreate>:
 80024f6:	b510      	push	{r4, lr}
 80024f8:	4604      	mov	r4, r0
 80024fa:	b160      	cbz	r0, 8002516 <svcMessageCreate+0x20>
 80024fc:	6801      	ldr	r1, [r0, #0]
 80024fe:	b151      	cbz	r1, 8002516 <svcMessageCreate+0x20>
 8002500:	6840      	ldr	r0, [r0, #4]
 8002502:	b148      	cbz	r0, 8002518 <svcMessageCreate+0x22>
 8002504:	7803      	ldrb	r3, [r0, #0]
 8002506:	b933      	cbnz	r3, 8002516 <svcMessageCreate+0x20>
 8002508:	3104      	adds	r1, #4
 800250a:	0089      	lsls	r1, r1, #2
 800250c:	b289      	uxth	r1, r1
 800250e:	f7ff fc71 	bl	8001df4 <rt_mbx_init>
 8002512:	6860      	ldr	r0, [r4, #4]
 8002514:	bd10      	pop	{r4, pc}
 8002516:	2000      	movs	r0, #0
 8002518:	bd10      	pop	{r4, pc}
	...

0800251c <svcKernelInitialize>:
 800251c:	b538      	push	{r3, r4, r5, lr}
 800251e:	4c11      	ldr	r4, [pc, #68]	; (8002564 <svcKernelInitialize+0x48>)
 8002520:	7823      	ldrb	r3, [r4, #0]
 8002522:	b90b      	cbnz	r3, 8002528 <svcKernelInitialize+0xc>
 8002524:	f000 faa8 	bl	8002a78 <rt_sys_init>
 8002528:	4b0f      	ldr	r3, [pc, #60]	; (8002568 <svcKernelInitialize+0x4c>)
 800252a:	7825      	ldrb	r5, [r4, #0]
 800252c:	681b      	ldr	r3, [r3, #0]
 800252e:	22ff      	movs	r2, #255	; 0xff
 8002530:	709a      	strb	r2, [r3, #2]
 8002532:	b98d      	cbnz	r5, 8002558 <svcKernelInitialize+0x3c>
 8002534:	4629      	mov	r1, r5
 8002536:	480d      	ldr	r0, [pc, #52]	; (800256c <svcKernelInitialize+0x50>)
 8002538:	f7ff ffdd 	bl	80024f6 <svcMessageCreate>
 800253c:	4b0c      	ldr	r3, [pc, #48]	; (8002570 <svcKernelInitialize+0x54>)
 800253e:	462a      	mov	r2, r5
 8002540:	6018      	str	r0, [r3, #0]
 8002542:	4629      	mov	r1, r5
 8002544:	480b      	ldr	r0, [pc, #44]	; (8002574 <svcKernelInitialize+0x58>)
 8002546:	f7ff fe83 	bl	8002250 <svcThreadCreate>
 800254a:	4b0b      	ldr	r3, [pc, #44]	; (8002578 <svcKernelInitialize+0x5c>)
 800254c:	6018      	str	r0, [r3, #0]
 800254e:	480b      	ldr	r0, [pc, #44]	; (800257c <svcKernelInitialize+0x60>)
 8002550:	f7ff ff46 	bl	80023e0 <osMutexCreate>
 8002554:	4b0a      	ldr	r3, [pc, #40]	; (8002580 <svcKernelInitialize+0x64>)
 8002556:	6018      	str	r0, [r3, #0]
 8002558:	2301      	movs	r3, #1
 800255a:	7023      	strb	r3, [r4, #0]
 800255c:	4b09      	ldr	r3, [pc, #36]	; (8002584 <svcKernelInitialize+0x68>)
 800255e:	2000      	movs	r0, #0
 8002560:	7018      	strb	r0, [r3, #0]
 8002562:	bd38      	pop	{r3, r4, r5, pc}
 8002564:	200028bc 	.word	0x200028bc
 8002568:	200028c4 	.word	0x200028c4
 800256c:	080063dc 	.word	0x080063dc
 8002570:	20002180 	.word	0x20002180
 8002574:	080063f8 	.word	0x080063f8
 8002578:	20002874 	.word	0x20002874
 800257c:	08006410 	.word	0x08006410
 8002580:	200028b8 	.word	0x200028b8
 8002584:	200028bd 	.word	0x200028bd

08002588 <osKernelInitialize>:
 8002588:	b510      	push	{r4, lr}
 800258a:	f3ef 8410 	mrs	r4, PRIMASK
 800258e:	b974      	cbnz	r4, 80025ae <osKernelInitialize+0x26>
 8002590:	f3ef 8405 	mrs	r4, IPSR
 8002594:	b95c      	cbnz	r4, 80025ae <osKernelInitialize+0x26>
 8002596:	f3ef 8414 	mrs	r4, CONTROL
 800259a:	07e4      	lsls	r4, r4, #31
 800259c:	d403      	bmi.n	80025a6 <osKernelInitialize+0x1e>
 800259e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80025a2:	f7ff bfbb 	b.w	800251c <svcKernelInitialize>
 80025a6:	f8df c00c 	ldr.w	r12, [pc, #12]	; 80025b4 <osKernelInitialize+0x2c>
 80025aa:	df00      	svc	0
 80025ac:	bd10      	pop	{r4, pc}
 80025ae:	2082      	movs	r0, #130	; 0x82
 80025b0:	bd10      	pop	{r4, pc}
 80025b2:	0000      	.short	0x0000
 80025b4:	0800251d 	.word	0x0800251d

080025b8 <svcMessageGet>:
 80025b8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80025bc:	460c      	mov	r4, r1
 80025be:	4680      	mov	r8, r0
 80025c0:	b318      	cbz	r0, 800260a <svcMessageGet+0x52>
 80025c2:	7803      	ldrb	r3, [r0, #0]
 80025c4:	2b01      	cmp	r3, #1
 80025c6:	d125      	bne.n	8002614 <svcMessageGet+0x5c>
 80025c8:	4608      	mov	r0, r1
 80025ca:	f7ff fd91 	bl	80020f0 <rt_ms2tick>
 80025ce:	a902      	add	r1, sp, #8
 80025d0:	4602      	mov	r2, r0
 80025d2:	4640      	mov	r0, r8
 80025d4:	f7ff fc1c 	bl	8001e10 <rt_mbx_wait>
 80025d8:	2801      	cmp	r0, #1
 80025da:	d111      	bne.n	8002600 <svcMessageGet+0x48>
 80025dc:	2000      	movs	r0, #0
 80025de:	2c00      	cmp	r4, #0
 80025e0:	4602      	mov	r2, r0
 80025e2:	4603      	mov	r3, r0
 80025e4:	bf18      	it	ne
 80025e6:	2040      	movne	r0, #64	; 0x40
 80025e8:	9902      	ldr	r1, [sp, #8]
 80025ea:	4604      	mov	r4, r0
 80025ec:	460d      	mov	r5, r1
 80025ee:	4616      	mov	r6, r2
 80025f0:	461f      	mov	r7, r3
 80025f2:	4620      	mov	r0, r4
 80025f4:	4629      	mov	r1, r5
 80025f6:	4632      	mov	r2, r6
 80025f8:	463b      	mov	r3, r7
 80025fa:	b004      	add	sp, #16
 80025fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002600:	2000      	movs	r0, #0
 8002602:	4602      	mov	r2, r0
 8002604:	4603      	mov	r3, r0
 8002606:	2010      	movs	r0, #16
 8002608:	e7ee      	b.n	80025e8 <svcMessageGet+0x30>
 800260a:	2480      	movs	r4, #128	; 0x80
 800260c:	4605      	mov	r5, r0
 800260e:	4606      	mov	r6, r0
 8002610:	4607      	mov	r7, r0
 8002612:	e7ee      	b.n	80025f2 <svcMessageGet+0x3a>
 8002614:	2500      	movs	r5, #0
 8002616:	2480      	movs	r4, #128	; 0x80
 8002618:	462e      	mov	r6, r5
 800261a:	462f      	mov	r7, r5
 800261c:	e7e9      	b.n	80025f2 <svcMessageGet+0x3a>

0800261e <isrMessagePut>:
 800261e:	b570      	push	{r4, r5, r6, lr}
 8002620:	460e      	mov	r6, r1
 8002622:	4614      	mov	r4, r2
 8002624:	4605      	mov	r5, r0
 8002626:	b160      	cbz	r0, 8002642 <isrMessagePut+0x24>
 8002628:	b95a      	cbnz	r2, 8002642 <isrMessagePut+0x24>
 800262a:	7803      	ldrb	r3, [r0, #0]
 800262c:	2b01      	cmp	r3, #1
 800262e:	d108      	bne.n	8002642 <isrMessagePut+0x24>
 8002630:	f7ff fc44 	bl	8001ebc <rt_mbx_check>
 8002634:	b138      	cbz	r0, 8002646 <isrMessagePut+0x28>
 8002636:	4628      	mov	r0, r5
 8002638:	4631      	mov	r1, r6
 800263a:	f7ff fc43 	bl	8001ec4 <isr_mbx_send>
 800263e:	4620      	mov	r0, r4
 8002640:	bd70      	pop	{r4, r5, r6, pc}
 8002642:	2080      	movs	r0, #128	; 0x80
 8002644:	bd70      	pop	{r4, r5, r6, pc}
 8002646:	2081      	movs	r0, #129	; 0x81
 8002648:	bd70      	pop	{r4, r5, r6, pc}
	...

0800264c <sysTimerTick>:
 800264c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800264e:	4e11      	ldr	r6, [pc, #68]	; (8002694 <sysTimerTick+0x48>)
 8002650:	6834      	ldr	r4, [r6, #0]
 8002652:	b12c      	cbz	r4, 8002660 <sysTimerTick+0x14>
 8002654:	68a3      	ldr	r3, [r4, #8]
 8002656:	4f10      	ldr	r7, [pc, #64]	; (8002698 <sysTimerTick+0x4c>)
 8002658:	3b01      	subs	r3, #1
 800265a:	60a3      	str	r3, [r4, #8]
 800265c:	68a2      	ldr	r2, [r4, #8]
 800265e:	b102      	cbz	r2, 8002662 <sysTimerTick+0x16>
 8002660:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002662:	6825      	ldr	r5, [r4, #0]
 8002664:	6838      	ldr	r0, [r7, #0]
 8002666:	6035      	str	r5, [r6, #0]
 8002668:	4621      	mov	r1, r4
 800266a:	f7ff ffd8 	bl	800261e <isrMessagePut>
 800266e:	b110      	cbz	r0, 8002676 <sysTimerTick+0x2a>
 8002670:	2004      	movs	r0, #4
 8002672:	f7ff f895 	bl	80017a0 <os_error>
 8002676:	7963      	ldrb	r3, [r4, #5]
 8002678:	2b01      	cmp	r3, #1
 800267a:	d107      	bne.n	800268c <sysTimerTick+0x40>
 800267c:	68e1      	ldr	r1, [r4, #12]
 800267e:	4620      	mov	r0, r4
 8002680:	f7ff fd1c 	bl	80020bc <rt_timer_insert>
 8002684:	2d00      	cmp	r5, #0
 8002686:	d0eb      	beq.n	8002660 <sysTimerTick+0x14>
 8002688:	462c      	mov	r4, r5
 800268a:	e7e7      	b.n	800265c <sysTimerTick+0x10>
 800268c:	2301      	movs	r3, #1
 800268e:	7123      	strb	r3, [r4, #4]
 8002690:	e7f8      	b.n	8002684 <sysTimerTick+0x38>
 8002692:	bf00      	nop
 8002694:	200028c0 	.word	0x200028c0
 8002698:	20002180 	.word	0x20002180

0800269c <isrMessageGet>:
 800269c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800269e:	4604      	mov	r4, r0
 80026a0:	4616      	mov	r6, r2
 80026a2:	4608      	mov	r0, r1
 80026a4:	b101      	cbz	r1, 80026a8 <isrMessageGet+0xc>
 80026a6:	b122      	cbz	r2, 80026b2 <isrMessageGet+0x16>
 80026a8:	2380      	movs	r3, #128	; 0x80
 80026aa:	6023      	str	r3, [r4, #0]
 80026ac:	4620      	mov	r0, r4
 80026ae:	b004      	add	sp, #16
 80026b0:	bd70      	pop	{r4, r5, r6, pc}
 80026b2:	780b      	ldrb	r3, [r1, #0]
 80026b4:	2b01      	cmp	r3, #1
 80026b6:	d1f7      	bne.n	80026a8 <isrMessageGet+0xc>
 80026b8:	a902      	add	r1, sp, #8
 80026ba:	f7ff fc0a 	bl	8001ed2 <isr_mbx_receive>
 80026be:	2804      	cmp	r0, #4
 80026c0:	bf08      	it	eq
 80026c2:	2310      	moveq	r3, #16
 80026c4:	ad01      	add	r5, sp, #4
 80026c6:	bf14      	ite	ne
 80026c8:	9601      	strne	r6, [sp, #4]
 80026ca:	9301      	streq	r3, [sp, #4]
 80026cc:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 80026d0:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 80026d4:	e7ea      	b.n	80026ac <isrMessageGet+0x10>
	...

080026d8 <osMessageGet>:
 80026d8:	b538      	push	{r3, r4, r5, lr}
 80026da:	4604      	mov	r4, r0
 80026dc:	4615      	mov	r5, r2
 80026de:	f3ef 8010 	mrs	r0, PRIMASK
 80026e2:	b910      	cbnz	r0, 80026ea <osMessageGet+0x12>
 80026e4:	f3ef 8005 	mrs	r0, IPSR
 80026e8:	b128      	cbz	r0, 80026f6 <osMessageGet+0x1e>
 80026ea:	462a      	mov	r2, r5
 80026ec:	4620      	mov	r0, r4
 80026ee:	f7ff ffd5 	bl	800269c <isrMessageGet>
 80026f2:	4620      	mov	r0, r4
 80026f4:	bd38      	pop	{r3, r4, r5, pc}
 80026f6:	4608      	mov	r0, r1
 80026f8:	4611      	mov	r1, r2
 80026fa:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002708 <osMessageGet+0x30>
 80026fe:	df00      	svc	0
 8002700:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8002704:	e7f5      	b.n	80026f2 <osMessageGet+0x1a>
 8002706:	0000      	.short	0x0000
 8002708:	080025b9 	.word	0x080025b9

0800270c <osTimerThread>:
 800270c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800270e:	4c0a      	ldr	r4, [pc, #40]	; (8002738 <osTimerThread+0x2c>)
 8002710:	6821      	ldr	r1, [r4, #0]
 8002712:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8002716:	a803      	add	r0, sp, #12
 8002718:	f7ff ffde 	bl	80026d8 <osMessageGet>
 800271c:	9b03      	ldr	r3, [sp, #12]
 800271e:	2b10      	cmp	r3, #16
 8002720:	d1f6      	bne.n	8002710 <osTimerThread+0x4>
 8002722:	9904      	ldr	r1, [sp, #16]
 8002724:	a801      	add	r0, sp, #4
 8002726:	f7ff fe15 	bl	8002354 <osTimerCall>
 800272a:	9b01      	ldr	r3, [sp, #4]
 800272c:	2b00      	cmp	r3, #0
 800272e:	d0ef      	beq.n	8002710 <osTimerThread+0x4>
 8002730:	9802      	ldr	r0, [sp, #8]
 8002732:	4798      	blx	r3
 8002734:	e7ec      	b.n	8002710 <osTimerThread+0x4>
 8002736:	bf00      	nop
 8002738:	20002180 	.word	0x20002180

0800273c <rt_switch_req>:
 800273c:	4b05      	ldr	r3, [pc, #20]	; (8002754 <rt_switch_req+0x18>)
 800273e:	6058      	str	r0, [r3, #4]
 8002740:	2302      	movs	r3, #2
 8002742:	7043      	strb	r3, [r0, #1]
 8002744:	4b04      	ldr	r3, [pc, #16]	; (8002758 <rt_switch_req+0x1c>)
 8002746:	681b      	ldr	r3, [r3, #0]
 8002748:	b11b      	cbz	r3, 8002752 <rt_switch_req+0x16>
 800274a:	691b      	ldr	r3, [r3, #16]
 800274c:	b10b      	cbz	r3, 8002752 <rt_switch_req+0x16>
 800274e:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8002750:	4718      	bx	r3
 8002752:	4770      	bx	lr
 8002754:	200028c4 	.word	0x200028c4
 8002758:	200028ac 	.word	0x200028ac

0800275c <rt_dispatch.part.0>:
 800275c:	b508      	push	{r3, lr}
 800275e:	4803      	ldr	r0, [pc, #12]	; (800276c <rt_dispatch.part.0+0x10>)
 8002760:	f7ff f884 	bl	800186c <rt_get_first>
 8002764:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8002768:	f7ff bfe8 	b.w	800273c <rt_switch_req>
 800276c:	20002878 	.word	0x20002878

08002770 <rt_dispatch>:
 8002770:	b570      	push	{r4, r5, r6, lr}
 8002772:	4604      	mov	r4, r0
 8002774:	b918      	cbnz	r0, 800277e <rt_dispatch+0xe>
 8002776:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800277a:	f7ff bfef 	b.w	800275c <rt_dispatch.part.0>
 800277e:	4e0c      	ldr	r6, [pc, #48]	; (80027b0 <rt_dispatch+0x40>)
 8002780:	78a2      	ldrb	r2, [r4, #2]
 8002782:	6830      	ldr	r0, [r6, #0]
 8002784:	7883      	ldrb	r3, [r0, #2]
 8002786:	429a      	cmp	r2, r3
 8002788:	f04f 0501 	mov.w	r5, #1
 800278c:	d908      	bls.n	80027a0 <rt_dispatch+0x30>
 800278e:	f7ff f87f 	bl	8001890 <rt_put_rdy_first>
 8002792:	6833      	ldr	r3, [r6, #0]
 8002794:	705d      	strb	r5, [r3, #1]
 8002796:	4620      	mov	r0, r4
 8002798:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800279c:	f7ff bfce 	b.w	800273c <rt_switch_req>
 80027a0:	7065      	strb	r5, [r4, #1]
 80027a2:	4621      	mov	r1, r4
 80027a4:	4803      	ldr	r0, [pc, #12]	; (80027b4 <rt_dispatch+0x44>)
 80027a6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80027aa:	f7ff b847 	b.w	800183c <rt_put_prio>
 80027ae:	bf00      	nop
 80027b0:	200028c4 	.word	0x200028c4
 80027b4:	20002878 	.word	0x20002878

080027b8 <rt_block>:
 80027b8:	b538      	push	{r3, r4, r5, lr}
 80027ba:	460d      	mov	r5, r1
 80027bc:	4601      	mov	r1, r0
 80027be:	b180      	cbz	r0, 80027e2 <rt_block+0x2a>
 80027c0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80027c4:	4298      	cmp	r0, r3
 80027c6:	4c07      	ldr	r4, [pc, #28]	; (80027e4 <rt_block+0x2c>)
 80027c8:	d002      	beq.n	80027d0 <rt_block+0x18>
 80027ca:	6820      	ldr	r0, [r4, #0]
 80027cc:	f7ff f86a 	bl	80018a4 <rt_put_dly>
 80027d0:	6823      	ldr	r3, [r4, #0]
 80027d2:	4805      	ldr	r0, [pc, #20]	; (80027e8 <rt_block+0x30>)
 80027d4:	705d      	strb	r5, [r3, #1]
 80027d6:	f7ff f849 	bl	800186c <rt_get_first>
 80027da:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80027de:	f7ff bfad 	b.w	800273c <rt_switch_req>
 80027e2:	bd38      	pop	{r3, r4, r5, pc}
 80027e4:	200028c4 	.word	0x200028c4
 80027e8:	20002878 	.word	0x20002878

080027ec <rt_tsk_self>:
 80027ec:	4b02      	ldr	r3, [pc, #8]	; (80027f8 <rt_tsk_self+0xc>)
 80027ee:	6818      	ldr	r0, [r3, #0]
 80027f0:	b100      	cbz	r0, 80027f4 <rt_tsk_self+0x8>
 80027f2:	78c0      	ldrb	r0, [r0, #3]
 80027f4:	4770      	bx	lr
 80027f6:	bf00      	nop
 80027f8:	200028c4 	.word	0x200028c4

080027fc <rt_tsk_prio>:
 80027fc:	b510      	push	{r4, lr}
 80027fe:	b9a8      	cbnz	r0, 800282c <rt_tsk_prio+0x30>
 8002800:	4b19      	ldr	r3, [pc, #100]	; (8002868 <rt_tsk_prio+0x6c>)
 8002802:	681b      	ldr	r3, [r3, #0]
 8002804:	7099      	strb	r1, [r3, #2]
 8002806:	f883 1024 	strb.w	r1, [r3, #36]	; 0x24
 800280a:	4818      	ldr	r0, [pc, #96]	; (800286c <rt_tsk_prio+0x70>)
 800280c:	6843      	ldr	r3, [r0, #4]
 800280e:	789b      	ldrb	r3, [r3, #2]
 8002810:	428b      	cmp	r3, r1
 8002812:	d801      	bhi.n	8002818 <rt_tsk_prio+0x1c>
 8002814:	2000      	movs	r0, #0
 8002816:	bd10      	pop	{r4, pc}
 8002818:	4c13      	ldr	r4, [pc, #76]	; (8002868 <rt_tsk_prio+0x6c>)
 800281a:	6821      	ldr	r1, [r4, #0]
 800281c:	f7ff f80e 	bl	800183c <rt_put_prio>
 8002820:	6823      	ldr	r3, [r4, #0]
 8002822:	2201      	movs	r2, #1
 8002824:	705a      	strb	r2, [r3, #1]
 8002826:	f7ff ff99 	bl	800275c <rt_dispatch.part.0>
 800282a:	e7f3      	b.n	8002814 <rt_tsk_prio+0x18>
 800282c:	4b10      	ldr	r3, [pc, #64]	; (8002870 <rt_tsk_prio+0x74>)
 800282e:	881b      	ldrh	r3, [r3, #0]
 8002830:	4298      	cmp	r0, r3
 8002832:	d817      	bhi.n	8002864 <rt_tsk_prio+0x68>
 8002834:	3801      	subs	r0, #1
 8002836:	4b0f      	ldr	r3, [pc, #60]	; (8002874 <rt_tsk_prio+0x78>)
 8002838:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 800283c:	b194      	cbz	r4, 8002864 <rt_tsk_prio+0x68>
 800283e:	4b0a      	ldr	r3, [pc, #40]	; (8002868 <rt_tsk_prio+0x6c>)
 8002840:	70a1      	strb	r1, [r4, #2]
 8002842:	681b      	ldr	r3, [r3, #0]
 8002844:	f884 1024 	strb.w	r1, [r4, #36]	; 0x24
 8002848:	429c      	cmp	r4, r3
 800284a:	d0de      	beq.n	800280a <rt_tsk_prio+0xe>
 800284c:	4620      	mov	r0, r4
 800284e:	f7ff f89b 	bl	8001988 <rt_resort_prio>
 8002852:	7863      	ldrb	r3, [r4, #1]
 8002854:	2b01      	cmp	r3, #1
 8002856:	d1dd      	bne.n	8002814 <rt_tsk_prio+0x18>
 8002858:	4804      	ldr	r0, [pc, #16]	; (800286c <rt_tsk_prio+0x70>)
 800285a:	f7ff f807 	bl	800186c <rt_get_first>
 800285e:	f7ff ff87 	bl	8002770 <rt_dispatch>
 8002862:	e7d7      	b.n	8002814 <rt_tsk_prio+0x18>
 8002864:	20ff      	movs	r0, #255	; 0xff
 8002866:	bd10      	pop	{r4, pc}
 8002868:	200028c4 	.word	0x200028c4
 800286c:	20002878 	.word	0x20002878
 8002870:	080063d8 	.word	0x080063d8
 8002874:	200020c0 	.word	0x200020c0

08002878 <rt_tsk_create>:
 8002878:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 800287c:	f011 0fff 	tst.w	r1, #255	; 0xff
 8002880:	460d      	mov	r5, r1
 8002882:	4680      	mov	r8, r0
 8002884:	4823      	ldr	r0, [pc, #140]	; (8002914 <rt_tsk_create+0x9c>)
 8002886:	4616      	mov	r6, r2
 8002888:	469a      	mov	r10, r3
 800288a:	bf08      	it	eq
 800288c:	3501      	addeq	r5, #1
 800288e:	f7ff fa90 	bl	8001db2 <rt_alloc_box>
 8002892:	4604      	mov	r4, r0
 8002894:	b920      	cbnz	r0, 80028a0 <rt_tsk_create+0x28>
 8002896:	f04f 0900 	mov.w	r9, #0
 800289a:	4648      	mov	r0, r9
 800289c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 80028a0:	4b1d      	ldr	r3, [pc, #116]	; (8002918 <rt_tsk_create+0xa0>)
 80028a2:	6306      	str	r6, [r0, #48]	; 0x30
 80028a4:	881b      	ldrh	r3, [r3, #0]
 80028a6:	4e1d      	ldr	r6, [pc, #116]	; (800291c <rt_tsk_create+0xa4>)
 80028a8:	0a28      	lsrs	r0, r5, #8
 80028aa:	62a0      	str	r0, [r4, #40]	; 0x28
 80028ac:	2100      	movs	r1, #0
 80028ae:	428b      	cmp	r3, r1
 80028b0:	f101 0901 	add.w	r9, r1, #1
 80028b4:	d0ef      	beq.n	8002896 <rt_tsk_create+0x1e>
 80028b6:	eb06 0289 	add.w	r2, r6, r9, lsl #2
 80028ba:	460f      	mov	r7, r1
 80028bc:	f852 2c04 	ldr.w	r2, [r2, #-4]
 80028c0:	4649      	mov	r1, r9
 80028c2:	2a00      	cmp	r2, #0
 80028c4:	d1f3      	bne.n	80028ae <rt_tsk_create+0x36>
 80028c6:	b2ed      	uxtb	r5, r5
 80028c8:	2301      	movs	r3, #1
 80028ca:	f884 9003 	strb.w	r9, [r4, #3]
 80028ce:	f8c4 a01c 	str.w	r10, [r4, #28]
 80028d2:	f8c4 a038 	str.w	r10, [r4, #56]	; 0x38
 80028d6:	7022      	strb	r2, [r4, #0]
 80028d8:	7063      	strb	r3, [r4, #1]
 80028da:	70a5      	strb	r5, [r4, #2]
 80028dc:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 80028e0:	6062      	str	r2, [r4, #4]
 80028e2:	60a2      	str	r2, [r4, #8]
 80028e4:	60e2      	str	r2, [r4, #12]
 80028e6:	6122      	str	r2, [r4, #16]
 80028e8:	6222      	str	r2, [r4, #32]
 80028ea:	82a2      	strh	r2, [r4, #20]
 80028ec:	82e2      	strh	r2, [r4, #22]
 80028ee:	8322      	strh	r2, [r4, #24]
 80028f0:	8362      	strh	r2, [r4, #26]
 80028f2:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 80028f6:	b918      	cbnz	r0, 8002900 <rt_tsk_create+0x88>
 80028f8:	4809      	ldr	r0, [pc, #36]	; (8002920 <rt_tsk_create+0xa8>)
 80028fa:	f7ff fa5a 	bl	8001db2 <rt_alloc_box>
 80028fe:	6320      	str	r0, [r4, #48]	; 0x30
 8002900:	4620      	mov	r0, r4
 8002902:	4641      	mov	r1, r8
 8002904:	f7ff f938 	bl	8001b78 <rt_init_stack>
 8002908:	4620      	mov	r0, r4
 800290a:	f846 4027 	str.w	r4, [r6, r7, lsl #2]
 800290e:	f7ff ff2f 	bl	8002770 <rt_dispatch>
 8002912:	e7c2      	b.n	800289a <rt_tsk_create+0x22>
 8002914:	200024a8 	.word	0x200024a8
 8002918:	080063d8 	.word	0x080063d8
 800291c:	200020c0 	.word	0x200020c0
 8002920:	20001eb0 	.word	0x20001eb0

08002924 <rt_tsk_delete>:
 8002924:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, lr}
 8002928:	4d4d      	ldr	r5, [pc, #308]	; (8002a60 <rt_tsk_delete+0x13c>)
 800292a:	b118      	cbz	r0, 8002934 <rt_tsk_delete+0x10>
 800292c:	682b      	ldr	r3, [r5, #0]
 800292e:	78db      	ldrb	r3, [r3, #3]
 8002930:	4298      	cmp	r0, r3
 8002932:	d141      	bne.n	80029b8 <rt_tsk_delete+0x94>
 8002934:	682c      	ldr	r4, [r5, #0]
 8002936:	f8df 813c 	ldr.w	r8, [pc, #316]	; 8002a74 <rt_tsk_delete+0x150>
 800293a:	2300      	movs	r3, #0
 800293c:	7063      	strb	r3, [r4, #1]
 800293e:	f002 f99c 	bl	8004c7a <rt_get_PSP>
 8002942:	62e0      	str	r0, [r4, #44]	; 0x2c
 8002944:	f7ff f9fe 	bl	8001d44 <rt_stk_check>
 8002948:	682b      	ldr	r3, [r5, #0]
 800294a:	6a1c      	ldr	r4, [r3, #32]
 800294c:	2701      	movs	r7, #1
 800294e:	b9a4      	cbnz	r4, 800297a <rt_tsk_delete+0x56>
 8002950:	682a      	ldr	r2, [r5, #0]
 8002952:	4944      	ldr	r1, [pc, #272]	; (8002a64 <rt_tsk_delete+0x140>)
 8002954:	78d3      	ldrb	r3, [r2, #3]
 8002956:	4844      	ldr	r0, [pc, #272]	; (8002a68 <rt_tsk_delete+0x144>)
 8002958:	3b01      	subs	r3, #1
 800295a:	f841 4023 	str.w	r4, [r1, r3, lsl #2]
 800295e:	6b11      	ldr	r1, [r2, #48]	; 0x30
 8002960:	f7ff fa34 	bl	8001dcc <rt_free_box>
 8002964:	6829      	ldr	r1, [r5, #0]
 8002966:	4841      	ldr	r0, [pc, #260]	; (8002a6c <rt_tsk_delete+0x148>)
 8002968:	630c      	str	r4, [r1, #48]	; 0x30
 800296a:	f7ff fa2f 	bl	8001dcc <rt_free_box>
 800296e:	602c      	str	r4, [r5, #0]
 8002970:	f7ff fef4 	bl	800275c <rt_dispatch.part.0>
 8002974:	4620      	mov	r0, r4
 8002976:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, pc}
 800297a:	6863      	ldr	r3, [r4, #4]
 800297c:	b1b3      	cbz	r3, 80029ac <rt_tsk_delete+0x88>
 800297e:	4620      	mov	r0, r4
 8002980:	f7fe ff74 	bl	800186c <rt_get_first>
 8002984:	2100      	movs	r1, #0
 8002986:	4606      	mov	r6, r0
 8002988:	f7ff f942 	bl	8001c10 <rt_ret_val>
 800298c:	4630      	mov	r0, r6
 800298e:	f7ff f813 	bl	80019b8 <rt_rmv_dly>
 8002992:	7077      	strb	r7, [r6, #1]
 8002994:	4631      	mov	r1, r6
 8002996:	4640      	mov	r0, r8
 8002998:	f7fe ff50 	bl	800183c <rt_put_prio>
 800299c:	68e3      	ldr	r3, [r4, #12]
 800299e:	6a32      	ldr	r2, [r6, #32]
 80029a0:	8067      	strh	r7, [r4, #2]
 80029a2:	60a6      	str	r6, [r4, #8]
 80029a4:	60e2      	str	r2, [r4, #12]
 80029a6:	6234      	str	r4, [r6, #32]
 80029a8:	461c      	mov	r4, r3
 80029aa:	e7d0      	b.n	800294e <rt_tsk_delete+0x2a>
 80029ac:	68e2      	ldr	r2, [r4, #12]
 80029ae:	8063      	strh	r3, [r4, #2]
 80029b0:	60a3      	str	r3, [r4, #8]
 80029b2:	60e3      	str	r3, [r4, #12]
 80029b4:	4614      	mov	r4, r2
 80029b6:	e7ca      	b.n	800294e <rt_tsk_delete+0x2a>
 80029b8:	4b2d      	ldr	r3, [pc, #180]	; (8002a70 <rt_tsk_delete+0x14c>)
 80029ba:	881b      	ldrh	r3, [r3, #0]
 80029bc:	4298      	cmp	r0, r3
 80029be:	d84d      	bhi.n	8002a5c <rt_tsk_delete+0x138>
 80029c0:	4b28      	ldr	r3, [pc, #160]	; (8002a64 <rt_tsk_delete+0x140>)
 80029c2:	1e47      	subs	r7, r0, #1
 80029c4:	4699      	mov	r9, r3
 80029c6:	f853 6027 	ldr.w	r6, [r3, r7, lsl #2]
 80029ca:	2e00      	cmp	r6, #0
 80029cc:	d046      	beq.n	8002a5c <rt_tsk_delete+0x138>
 80029ce:	4630      	mov	r0, r6
 80029d0:	f7fe ffc4 	bl	800195c <rt_rmv_list>
 80029d4:	4630      	mov	r0, r6
 80029d6:	f7fe ffef 	bl	80019b8 <rt_rmv_dly>
 80029da:	f8df b098 	ldr.w	r11, [pc, #152]	; 8002a74 <rt_tsk_delete+0x150>
 80029de:	6a34      	ldr	r4, [r6, #32]
 80029e0:	f04f 0a01 	mov.w	r10, #1
 80029e4:	b9b4      	cbnz	r4, 8002a14 <rt_tsk_delete+0xf0>
 80029e6:	6b31      	ldr	r1, [r6, #48]	; 0x30
 80029e8:	481f      	ldr	r0, [pc, #124]	; (8002a68 <rt_tsk_delete+0x144>)
 80029ea:	f849 4027 	str.w	r4, [r9, r7, lsl #2]
 80029ee:	f7ff f9ed 	bl	8001dcc <rt_free_box>
 80029f2:	4631      	mov	r1, r6
 80029f4:	6334      	str	r4, [r6, #48]	; 0x30
 80029f6:	481d      	ldr	r0, [pc, #116]	; (8002a6c <rt_tsk_delete+0x148>)
 80029f8:	f7ff f9e8 	bl	8001dcc <rt_free_box>
 80029fc:	481d      	ldr	r0, [pc, #116]	; (8002a74 <rt_tsk_delete+0x150>)
 80029fe:	6829      	ldr	r1, [r5, #0]
 8002a00:	6843      	ldr	r3, [r0, #4]
 8002a02:	789a      	ldrb	r2, [r3, #2]
 8002a04:	788b      	ldrb	r3, [r1, #2]
 8002a06:	429a      	cmp	r2, r3
 8002a08:	d9b4      	bls.n	8002974 <rt_tsk_delete+0x50>
 8002a0a:	2301      	movs	r3, #1
 8002a0c:	704b      	strb	r3, [r1, #1]
 8002a0e:	f7fe ff15 	bl	800183c <rt_put_prio>
 8002a12:	e7ad      	b.n	8002970 <rt_tsk_delete+0x4c>
 8002a14:	6863      	ldr	r3, [r4, #4]
 8002a16:	b1db      	cbz	r3, 8002a50 <rt_tsk_delete+0x12c>
 8002a18:	4620      	mov	r0, r4
 8002a1a:	f7fe ff27 	bl	800186c <rt_get_first>
 8002a1e:	2100      	movs	r1, #0
 8002a20:	4680      	mov	r8, r0
 8002a22:	f7ff f8f5 	bl	8001c10 <rt_ret_val>
 8002a26:	4640      	mov	r0, r8
 8002a28:	f7fe ffc6 	bl	80019b8 <rt_rmv_dly>
 8002a2c:	f888 a001 	strb.w	r10, [r8, #1]
 8002a30:	4641      	mov	r1, r8
 8002a32:	4658      	mov	r0, r11
 8002a34:	f7fe ff02 	bl	800183c <rt_put_prio>
 8002a38:	68e3      	ldr	r3, [r4, #12]
 8002a3a:	f8d8 2020 	ldr.w	r2, [r8, #32]
 8002a3e:	f8a4 a002 	strh.w	r10, [r4, #2]
 8002a42:	f8c4 8008 	str.w	r8, [r4, #8]
 8002a46:	60e2      	str	r2, [r4, #12]
 8002a48:	f8c8 4020 	str.w	r4, [r8, #32]
 8002a4c:	461c      	mov	r4, r3
 8002a4e:	e7c9      	b.n	80029e4 <rt_tsk_delete+0xc0>
 8002a50:	68e2      	ldr	r2, [r4, #12]
 8002a52:	8063      	strh	r3, [r4, #2]
 8002a54:	60a3      	str	r3, [r4, #8]
 8002a56:	60e3      	str	r3, [r4, #12]
 8002a58:	4614      	mov	r4, r2
 8002a5a:	e7c3      	b.n	80029e4 <rt_tsk_delete+0xc0>
 8002a5c:	24ff      	movs	r4, #255	; 0xff
 8002a5e:	e789      	b.n	8002974 <rt_tsk_delete+0x50>
 8002a60:	200028c4 	.word	0x200028c4
 8002a64:	200020c0 	.word	0x200020c0
 8002a68:	20001eb0 	.word	0x20001eb0
 8002a6c:	200024a8 	.word	0x200024a8
 8002a70:	080063d8 	.word	0x080063d8
 8002a74:	20002878 	.word	0x20002878

08002a78 <rt_sys_init>:
 8002a78:	b538      	push	{r3, r4, r5, lr}
 8002a7a:	4b2c      	ldr	r3, [pc, #176]	; (8002b2c <rt_sys_init+0xb4>)
 8002a7c:	492c      	ldr	r1, [pc, #176]	; (8002b30 <rt_sys_init+0xb8>)
 8002a7e:	881a      	ldrh	r2, [r3, #0]
 8002a80:	2300      	movs	r3, #0
 8002a82:	4618      	mov	r0, r3
 8002a84:	4293      	cmp	r3, r2
 8002a86:	d34d      	bcc.n	8002b24 <rt_sys_init+0xac>
 8002a88:	4b2a      	ldr	r3, [pc, #168]	; (8002b34 <rt_sys_init+0xbc>)
 8002a8a:	482b      	ldr	r0, [pc, #172]	; (8002b38 <rt_sys_init+0xc0>)
 8002a8c:	8819      	ldrh	r1, [r3, #0]
 8002a8e:	4c2b      	ldr	r4, [pc, #172]	; (8002b3c <rt_sys_init+0xc4>)
 8002a90:	2240      	movs	r2, #64	; 0x40
 8002a92:	f7ff f969 	bl	8001d68 <_init_box>
 8002a96:	4b2a      	ldr	r3, [pc, #168]	; (8002b40 <rt_sys_init+0xc8>)
 8002a98:	482a      	ldr	r0, [pc, #168]	; (8002b44 <rt_sys_init+0xcc>)
 8002a9a:	881a      	ldrh	r2, [r3, #0]
 8002a9c:	4b2a      	ldr	r3, [pc, #168]	; (8002b48 <rt_sys_init+0xd0>)
 8002a9e:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
 8002aa2:	6819      	ldr	r1, [r3, #0]
 8002aa4:	f7ff f960 	bl	8001d68 <_init_box>
 8002aa8:	4b28      	ldr	r3, [pc, #160]	; (8002b4c <rt_sys_init+0xd4>)
 8002aaa:	8819      	ldrh	r1, [r3, #0]
 8002aac:	4b28      	ldr	r3, [pc, #160]	; (8002b50 <rt_sys_init+0xd8>)
 8002aae:	2208      	movs	r2, #8
 8002ab0:	6818      	ldr	r0, [r3, #0]
 8002ab2:	f7ff f959 	bl	8001d68 <_init_box>
 8002ab6:	23ff      	movs	r3, #255	; 0xff
 8002ab8:	2500      	movs	r5, #0
 8002aba:	70e3      	strb	r3, [r4, #3]
 8002abc:	4821      	ldr	r0, [pc, #132]	; (8002b44 <rt_sys_init+0xcc>)
 8002abe:	62a5      	str	r5, [r4, #40]	; 0x28
 8002ac0:	2301      	movs	r3, #1
 8002ac2:	7063      	strb	r3, [r4, #1]
 8002ac4:	7025      	strb	r5, [r4, #0]
 8002ac6:	70a5      	strb	r5, [r4, #2]
 8002ac8:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8002acc:	6065      	str	r5, [r4, #4]
 8002ace:	60a5      	str	r5, [r4, #8]
 8002ad0:	60e5      	str	r5, [r4, #12]
 8002ad2:	6125      	str	r5, [r4, #16]
 8002ad4:	6225      	str	r5, [r4, #32]
 8002ad6:	82a5      	strh	r5, [r4, #20]
 8002ad8:	82e5      	strh	r5, [r4, #22]
 8002ada:	8325      	strh	r5, [r4, #24]
 8002adc:	8365      	strh	r5, [r4, #26]
 8002ade:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 8002ae2:	f7ff f966 	bl	8001db2 <rt_alloc_box>
 8002ae6:	491b      	ldr	r1, [pc, #108]	; (8002b54 <rt_sys_init+0xdc>)
 8002ae8:	6320      	str	r0, [r4, #48]	; 0x30
 8002aea:	4620      	mov	r0, r4
 8002aec:	f7ff f844 	bl	8001b78 <rt_init_stack>
 8002af0:	4b19      	ldr	r3, [pc, #100]	; (8002b58 <rt_sys_init+0xe0>)
 8002af2:	2204      	movs	r2, #4
 8002af4:	701a      	strb	r2, [r3, #0]
 8002af6:	605d      	str	r5, [r3, #4]
 8002af8:	4b18      	ldr	r3, [pc, #96]	; (8002b5c <rt_sys_init+0xe4>)
 8002afa:	701a      	strb	r2, [r3, #0]
 8002afc:	60dd      	str	r5, [r3, #12]
 8002afe:	611d      	str	r5, [r3, #16]
 8002b00:	829d      	strh	r5, [r3, #20]
 8002b02:	4b17      	ldr	r3, [pc, #92]	; (8002b60 <rt_sys_init+0xe8>)
 8002b04:	4620      	mov	r0, r4
 8002b06:	601c      	str	r4, [r3, #0]
 8002b08:	2302      	movs	r3, #2
 8002b0a:	7063      	strb	r3, [r4, #1]
 8002b0c:	f7ff fe16 	bl	800273c <rt_switch_req>
 8002b10:	4a14      	ldr	r2, [pc, #80]	; (8002b64 <rt_sys_init+0xec>)
 8002b12:	4b15      	ldr	r3, [pc, #84]	; (8002b68 <rt_sys_init+0xf0>)
 8002b14:	7812      	ldrb	r2, [r2, #0]
 8002b16:	701d      	strb	r5, [r3, #0]
 8002b18:	705d      	strb	r5, [r3, #1]
 8002b1a:	70da      	strb	r2, [r3, #3]
 8002b1c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002b20:	f7ff ba9c 	b.w	800205c <rt_init_robin>
 8002b24:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 8002b28:	3301      	adds	r3, #1
 8002b2a:	e7ab      	b.n	8002a84 <rt_sys_init+0xc>
 8002b2c:	080063d8 	.word	0x080063d8
 8002b30:	200020c0 	.word	0x200020c0
 8002b34:	080063a4 	.word	0x080063a4
 8002b38:	200024a8 	.word	0x200024a8
 8002b3c:	200028cc 	.word	0x200028cc
 8002b40:	080063f4 	.word	0x080063f4
 8002b44:	20001eb0 	.word	0x20001eb0
 8002b48:	080063a0 	.word	0x080063a0
 8002b4c:	080063a6 	.word	0x080063a6
 8002b50:	20000a58 	.word	0x20000a58
 8002b54:	0800179d 	.word	0x0800179d
 8002b58:	20002878 	.word	0x20002878
 8002b5c:	20002890 	.word	0x20002890
 8002b60:	200028c4 	.word	0x200028c4
 8002b64:	080063d5 	.word	0x080063d5
 8002b68:	200020fc 	.word	0x200020fc

08002b6c <rt_sys_start>:
 8002b6c:	b508      	push	{r3, lr}
 8002b6e:	4b1e      	ldr	r3, [pc, #120]	; (8002be8 <rt_sys_start+0x7c>)
 8002b70:	681a      	ldr	r2, [r3, #0]
 8002b72:	f442 027f 	orr.w	r2, r2, #16711680	; 0xff0000
 8002b76:	601a      	str	r2, [r3, #0]
 8002b78:	681b      	ldr	r3, [r3, #0]
 8002b7a:	021b      	lsls	r3, r3, #8
 8002b7c:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8002b80:	43db      	mvns	r3, r3
 8002b82:	fab3 f383 	clz	r3, r3
 8002b86:	4a19      	ldr	r2, [pc, #100]	; (8002bec <rt_sys_start+0x80>)
 8002b88:	4819      	ldr	r0, [pc, #100]	; (8002bf0 <rt_sys_start+0x84>)
 8002b8a:	6812      	ldr	r2, [r2, #0]
 8002b8c:	6801      	ldr	r1, [r0, #0]
 8002b8e:	b2db      	uxtb	r3, r3
 8002b90:	f1c3 0308 	rsb	r3, r3, #8
 8002b94:	f3c2 2202 	ubfx	r2, r2, #8, #3
 8002b98:	4293      	cmp	r3, r2
 8002b9a:	bf98      	it	ls
 8002b9c:	1c53      	addls	r3, r2, #1
 8002b9e:	f06f 7280 	mvn.w	r2, #16777216	; 0x1000000
 8002ba2:	fa02 f303 	lsl.w	r3, r2, r3
 8002ba6:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8002baa:	f021 427f 	bic.w	r2, r1, #4278190080	; 0xff000000
 8002bae:	4313      	orrs	r3, r2
 8002bb0:	6003      	str	r3, [r0, #0]
 8002bb2:	f7ff f88f 	bl	8001cd4 <os_tick_init>
 8002bb6:	4b0f      	ldr	r3, [pc, #60]	; (8002bf4 <rt_sys_start+0x88>)
 8002bb8:	2800      	cmp	r0, #0
 8002bba:	6018      	str	r0, [r3, #0]
 8002bbc:	db12      	blt.n	8002be4 <rt_sys_start+0x78>
 8002bbe:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8002bc2:	f500 4064 	add.w	r0, r0, #58368	; 0xe400
 8002bc6:	22ff      	movs	r2, #255	; 0xff
 8002bc8:	7002      	strb	r2, [r0, #0]
 8002bca:	681a      	ldr	r2, [r3, #0]
 8002bcc:	0953      	lsrs	r3, r2, #5
 8002bce:	009b      	lsls	r3, r3, #2
 8002bd0:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8002bd4:	f503 4361 	add.w	r3, r3, #57600	; 0xe100
 8002bd8:	f002 021f 	and.w	r2, r2, #31
 8002bdc:	2101      	movs	r1, #1
 8002bde:	fa01 f202 	lsl.w	r2, r1, r2
 8002be2:	601a      	str	r2, [r3, #0]
 8002be4:	bd08      	pop	{r3, pc}
 8002be6:	bf00      	nop
 8002be8:	e000ed20 	.word	0xe000ed20
 8002bec:	e000ed0c 	.word	0xe000ed0c
 8002bf0:	e000ed1c 	.word	0xe000ed1c
 8002bf4:	200028a8 	.word	0x200028a8

08002bf8 <rt_dly_wait>:
 8002bf8:	2103      	movs	r1, #3
 8002bfa:	f7ff bddd 	b.w	80027b8 <rt_block>
	...

08002c00 <rt_sem_psh>:
 8002c00:	6842      	ldr	r2, [r0, #4]
 8002c02:	b510      	push	{r4, lr}
 8002c04:	b17a      	cbz	r2, 8002c26 <rt_sem_psh+0x26>
 8002c06:	f7fe fe31 	bl	800186c <rt_get_first>
 8002c0a:	4604      	mov	r4, r0
 8002c0c:	f7fe fed4 	bl	80019b8 <rt_rmv_dly>
 8002c10:	2101      	movs	r1, #1
 8002c12:	7061      	strb	r1, [r4, #1]
 8002c14:	4620      	mov	r0, r4
 8002c16:	f7fe fffb 	bl	8001c10 <rt_ret_val>
 8002c1a:	4621      	mov	r1, r4
 8002c1c:	4804      	ldr	r0, [pc, #16]	; (8002c30 <rt_sem_psh+0x30>)
 8002c1e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002c22:	f7fe be0b 	b.w	800183c <rt_put_prio>
 8002c26:	8842      	ldrh	r2, [r0, #2]
 8002c28:	3201      	adds	r2, #1
 8002c2a:	8042      	strh	r2, [r0, #2]
 8002c2c:	bd10      	pop	{r4, pc}
 8002c2e:	bf00      	nop
 8002c30:	20002878 	.word	0x20002878

08002c34 <timer_irq_handler>:
 8002c34:	b570      	push	{r4, r5, r6, lr}
 8002c36:	4c13      	ldr	r4, [pc, #76]	; (8002c84 <timer_irq_handler+0x50>)
 8002c38:	6823      	ldr	r3, [r4, #0]
 8002c3a:	691a      	ldr	r2, [r3, #16]
 8002c3c:	0795      	lsls	r5, r2, #30
 8002c3e:	d507      	bpl.n	8002c50 <timer_irq_handler+0x1c>
 8002c40:	68da      	ldr	r2, [r3, #12]
 8002c42:	0790      	lsls	r0, r2, #30
 8002c44:	d504      	bpl.n	8002c50 <timer_irq_handler+0x1c>
 8002c46:	f06f 0202 	mvn.w	r2, #2
 8002c4a:	611a      	str	r2, [r3, #16]
 8002c4c:	f7fe fc98 	bl	8001580 <us_ticker_irq_handler>
 8002c50:	6823      	ldr	r3, [r4, #0]
 8002c52:	691a      	ldr	r2, [r3, #16]
 8002c54:	0751      	lsls	r1, r2, #29
 8002c56:	d513      	bpl.n	8002c80 <timer_irq_handler+0x4c>
 8002c58:	68da      	ldr	r2, [r3, #12]
 8002c5a:	0752      	lsls	r2, r2, #29
 8002c5c:	d510      	bpl.n	8002c80 <timer_irq_handler+0x4c>
 8002c5e:	f06f 0204 	mvn.w	r2, #4
 8002c62:	4e09      	ldr	r6, [pc, #36]	; (8002c88 <timer_irq_handler+0x54>)
 8002c64:	611a      	str	r2, [r3, #16]
 8002c66:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8002c68:	6833      	ldr	r3, [r6, #0]
 8002c6a:	1aeb      	subs	r3, r5, r3
 8002c6c:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8002c70:	d306      	bcc.n	8002c80 <timer_irq_handler+0x4c>
 8002c72:	f000 ff67 	bl	8003b44 <HAL_IncTick>
 8002c76:	6823      	ldr	r3, [r4, #0]
 8002c78:	f505 727a 	add.w	r2, r5, #1000	; 0x3e8
 8002c7c:	639a      	str	r2, [r3, #56]	; 0x38
 8002c7e:	6035      	str	r5, [r6, #0]
 8002c80:	bd70      	pop	{r4, r5, r6, pc}
 8002c82:	bf00      	nop
 8002c84:	20002910 	.word	0x20002910
 8002c88:	20001acc 	.word	0x20001acc

08002c8c <HAL_InitTick>:
 8002c8c:	b530      	push	{r4, r5, lr}
 8002c8e:	b089      	sub	sp, #36	; 0x24
 8002c90:	a901      	add	r1, sp, #4
 8002c92:	a803      	add	r0, sp, #12
 8002c94:	f001 fcf8 	bl	8004688 <HAL_RCC_GetClockConfig>
 8002c98:	f001 fcc6 	bl	8004628 <HAL_RCC_GetPCLK1Freq>
 8002c9c:	2300      	movs	r3, #0
 8002c9e:	9302      	str	r3, [sp, #8]
 8002ca0:	4b24      	ldr	r3, [pc, #144]	; (8002d34 <HAL_InitTick+0xa8>)
 8002ca2:	9001      	str	r0, [sp, #4]
 8002ca4:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002ca6:	4c24      	ldr	r4, [pc, #144]	; (8002d38 <HAL_InitTick+0xac>)
 8002ca8:	f042 0208 	orr.w	r2, r2, #8
 8002cac:	641a      	str	r2, [r3, #64]	; 0x40
 8002cae:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002cb0:	f002 0208 	and.w	r2, r2, #8
 8002cb4:	9202      	str	r2, [sp, #8]
 8002cb6:	9a02      	ldr	r2, [sp, #8]
 8002cb8:	6a1a      	ldr	r2, [r3, #32]
 8002cba:	f042 0208 	orr.w	r2, r2, #8
 8002cbe:	621a      	str	r2, [r3, #32]
 8002cc0:	6a1a      	ldr	r2, [r3, #32]
 8002cc2:	f022 0208 	bic.w	r2, r2, #8
 8002cc6:	621a      	str	r2, [r3, #32]
 8002cc8:	9a06      	ldr	r2, [sp, #24]
 8002cca:	f5a3 330b 	sub.w	r3, r3, #142336	; 0x22c00
 8002cce:	6023      	str	r3, [r4, #0]
 8002cd0:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8002cd4:	60e3      	str	r3, [r4, #12]
 8002cd6:	4b19      	ldr	r3, [pc, #100]	; (8002d3c <HAL_InitTick+0xb0>)
 8002cd8:	bb4a      	cbnz	r2, 8002d2e <HAL_InitTick+0xa2>
 8002cda:	fbb0 f0f3 	udiv	r0, r0, r3
 8002cde:	3801      	subs	r0, #1
 8002ce0:	2500      	movs	r5, #0
 8002ce2:	6060      	str	r0, [r4, #4]
 8002ce4:	4814      	ldr	r0, [pc, #80]	; (8002d38 <HAL_InitTick+0xac>)
 8002ce6:	6125      	str	r5, [r4, #16]
 8002ce8:	60a5      	str	r5, [r4, #8]
 8002cea:	6165      	str	r5, [r4, #20]
 8002cec:	f001 f946 	bl	8003f7c <HAL_TIM_OC_Init>
 8002cf0:	4913      	ldr	r1, [pc, #76]	; (8002d40 <HAL_InitTick+0xb4>)
 8002cf2:	2032      	movs	r0, #50	; 0x32
 8002cf4:	f000 fed0 	bl	8003a98 <__NVIC_SetVector>
 8002cf8:	4b12      	ldr	r3, [pc, #72]	; (8002d44 <HAL_InitTick+0xb8>)
 8002cfa:	480f      	ldr	r0, [pc, #60]	; (8002d38 <HAL_InitTick+0xac>)
 8002cfc:	f44f 2280 	mov.w	r2, #262144	; 0x40000
 8002d00:	605a      	str	r2, [r3, #4]
 8002d02:	4629      	mov	r1, r5
 8002d04:	f001 fa1e 	bl	8004144 <HAL_TIM_OC_Start>
 8002d08:	2104      	movs	r1, #4
 8002d0a:	480b      	ldr	r0, [pc, #44]	; (8002d38 <HAL_InitTick+0xac>)
 8002d0c:	f001 fa1a 	bl	8004144 <HAL_TIM_OC_Start>
 8002d10:	6823      	ldr	r3, [r4, #0]
 8002d12:	4a0d      	ldr	r2, [pc, #52]	; (8002d48 <HAL_InitTick+0xbc>)
 8002d14:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8002d16:	6011      	str	r1, [r2, #0]
 8002d18:	6812      	ldr	r2, [r2, #0]
 8002d1a:	f502 727a 	add.w	r2, r2, #1000	; 0x3e8
 8002d1e:	639a      	str	r2, [r3, #56]	; 0x38
 8002d20:	68da      	ldr	r2, [r3, #12]
 8002d22:	4628      	mov	r0, r5
 8002d24:	f042 0204 	orr.w	r2, r2, #4
 8002d28:	60da      	str	r2, [r3, #12]
 8002d2a:	b009      	add	sp, #36	; 0x24
 8002d2c:	bd30      	pop	{r4, r5, pc}
 8002d2e:	0040      	lsls	r0, r0, #1
 8002d30:	e7d3      	b.n	8002cda <HAL_InitTick+0x4e>
 8002d32:	bf00      	nop
 8002d34:	40023800 	.word	0x40023800
 8002d38:	20002910 	.word	0x20002910
 8002d3c:	000f4240 	.word	0x000f4240
 8002d40:	08002c35 	.word	0x08002c35
 8002d44:	e000e100 	.word	0xe000e100
 8002d48:	20001acc 	.word	0x20001acc

08002d4c <HAL_SuspendTick>:
 8002d4c:	4b03      	ldr	r3, [pc, #12]	; (8002d5c <HAL_SuspendTick+0x10>)
 8002d4e:	4a04      	ldr	r2, [pc, #16]	; (8002d60 <HAL_SuspendTick+0x14>)
 8002d50:	6013      	str	r3, [r2, #0]
 8002d52:	68da      	ldr	r2, [r3, #12]
 8002d54:	f022 0204 	bic.w	r2, r2, #4
 8002d58:	60da      	str	r2, [r3, #12]
 8002d5a:	4770      	bx	lr
 8002d5c:	40000c00 	.word	0x40000c00
 8002d60:	20002910 	.word	0x20002910

08002d64 <HAL_ResumeTick>:
 8002d64:	4b03      	ldr	r3, [pc, #12]	; (8002d74 <HAL_ResumeTick+0x10>)
 8002d66:	4a04      	ldr	r2, [pc, #16]	; (8002d78 <HAL_ResumeTick+0x14>)
 8002d68:	6013      	str	r3, [r2, #0]
 8002d6a:	68da      	ldr	r2, [r3, #12]
 8002d6c:	f042 0204 	orr.w	r2, r2, #4
 8002d70:	60da      	str	r2, [r3, #12]
 8002d72:	4770      	bx	lr
 8002d74:	40000c00 	.word	0x40000c00
 8002d78:	20002910 	.word	0x20002910

08002d7c <Set_GPIO_Clock>:
 8002d7c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8002d7e:	2300      	movs	r3, #0
 8002d80:	2807      	cmp	r0, #7
 8002d82:	d855      	bhi.n	8002e30 <Set_GPIO_Clock+0xb4>
 8002d84:	e8df f000 	tbb	[pc, r0]
 8002d88:	2d201304 	.word	0x2d201304
 8002d8c:	4754543a 	.word	0x4754543a
 8002d90:	9300      	str	r3, [sp, #0]
 8002d92:	4b2a      	ldr	r3, [pc, #168]	; (8002e3c <Set_GPIO_Clock+0xc0>)
 8002d94:	482a      	ldr	r0, [pc, #168]	; (8002e40 <Set_GPIO_Clock+0xc4>)
 8002d96:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002d98:	f042 0201 	orr.w	r2, r2, #1
 8002d9c:	631a      	str	r2, [r3, #48]	; 0x30
 8002d9e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002da0:	f003 0301 	and.w	r3, r3, #1
 8002da4:	9300      	str	r3, [sp, #0]
 8002da6:	9b00      	ldr	r3, [sp, #0]
 8002da8:	b007      	add	sp, #28
 8002daa:	f85d fb04 	ldr.w	pc, [sp], #4
 8002dae:	9301      	str	r3, [sp, #4]
 8002db0:	4b22      	ldr	r3, [pc, #136]	; (8002e3c <Set_GPIO_Clock+0xc0>)
 8002db2:	4824      	ldr	r0, [pc, #144]	; (8002e44 <Set_GPIO_Clock+0xc8>)
 8002db4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002db6:	f042 0202 	orr.w	r2, r2, #2
 8002dba:	631a      	str	r2, [r3, #48]	; 0x30
 8002dbc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002dbe:	f003 0302 	and.w	r3, r3, #2
 8002dc2:	9301      	str	r3, [sp, #4]
 8002dc4:	9b01      	ldr	r3, [sp, #4]
 8002dc6:	e7ef      	b.n	8002da8 <Set_GPIO_Clock+0x2c>
 8002dc8:	9302      	str	r3, [sp, #8]
 8002dca:	4b1c      	ldr	r3, [pc, #112]	; (8002e3c <Set_GPIO_Clock+0xc0>)
 8002dcc:	481e      	ldr	r0, [pc, #120]	; (8002e48 <Set_GPIO_Clock+0xcc>)
 8002dce:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002dd0:	f042 0204 	orr.w	r2, r2, #4
 8002dd4:	631a      	str	r2, [r3, #48]	; 0x30
 8002dd6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002dd8:	f003 0304 	and.w	r3, r3, #4
 8002ddc:	9302      	str	r3, [sp, #8]
 8002dde:	9b02      	ldr	r3, [sp, #8]
 8002de0:	e7e2      	b.n	8002da8 <Set_GPIO_Clock+0x2c>
 8002de2:	9303      	str	r3, [sp, #12]
 8002de4:	4b15      	ldr	r3, [pc, #84]	; (8002e3c <Set_GPIO_Clock+0xc0>)
 8002de6:	4819      	ldr	r0, [pc, #100]	; (8002e4c <Set_GPIO_Clock+0xd0>)
 8002de8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002dea:	f042 0208 	orr.w	r2, r2, #8
 8002dee:	631a      	str	r2, [r3, #48]	; 0x30
 8002df0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002df2:	f003 0308 	and.w	r3, r3, #8
 8002df6:	9303      	str	r3, [sp, #12]
 8002df8:	9b03      	ldr	r3, [sp, #12]
 8002dfa:	e7d5      	b.n	8002da8 <Set_GPIO_Clock+0x2c>
 8002dfc:	9304      	str	r3, [sp, #16]
 8002dfe:	4b0f      	ldr	r3, [pc, #60]	; (8002e3c <Set_GPIO_Clock+0xc0>)
 8002e00:	4813      	ldr	r0, [pc, #76]	; (8002e50 <Set_GPIO_Clock+0xd4>)
 8002e02:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002e04:	f042 0210 	orr.w	r2, r2, #16
 8002e08:	631a      	str	r2, [r3, #48]	; 0x30
 8002e0a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002e0c:	f003 0310 	and.w	r3, r3, #16
 8002e10:	9304      	str	r3, [sp, #16]
 8002e12:	9b04      	ldr	r3, [sp, #16]
 8002e14:	e7c8      	b.n	8002da8 <Set_GPIO_Clock+0x2c>
 8002e16:	9305      	str	r3, [sp, #20]
 8002e18:	4b08      	ldr	r3, [pc, #32]	; (8002e3c <Set_GPIO_Clock+0xc0>)
 8002e1a:	480e      	ldr	r0, [pc, #56]	; (8002e54 <Set_GPIO_Clock+0xd8>)
 8002e1c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002e1e:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8002e22:	631a      	str	r2, [r3, #48]	; 0x30
 8002e24:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002e26:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002e2a:	9305      	str	r3, [sp, #20]
 8002e2c:	9b05      	ldr	r3, [sp, #20]
 8002e2e:	e7bb      	b.n	8002da8 <Set_GPIO_Clock+0x2c>
 8002e30:	4809      	ldr	r0, [pc, #36]	; (8002e58 <Set_GPIO_Clock+0xdc>)
 8002e32:	f7fe fc69 	bl	8001708 <error>
 8002e36:	2000      	movs	r0, #0
 8002e38:	e7b6      	b.n	8002da8 <Set_GPIO_Clock+0x2c>
 8002e3a:	bf00      	nop
 8002e3c:	40023800 	.word	0x40023800
 8002e40:	40020000 	.word	0x40020000
 8002e44:	40020400 	.word	0x40020400
 8002e48:	40020800 	.word	0x40020800
 8002e4c:	40020c00 	.word	0x40020c00
 8002e50:	40021000 	.word	0x40021000
 8002e54:	40021c00 	.word	0x40021c00
 8002e58:	08006414 	.word	0x08006414

08002e5c <gpio_set>:
 8002e5c:	b510      	push	{r4, lr}
 8002e5e:	2100      	movs	r1, #0
 8002e60:	4604      	mov	r4, r0
 8002e62:	f004 040f 	and.w	r4, r4, #15
 8002e66:	f000 fa89 	bl	800337c <pin_function>
 8002e6a:	2001      	movs	r0, #1
 8002e6c:	40a0      	lsls	r0, r4
 8002e6e:	bd10      	pop	{r4, pc}

08002e70 <gpio_init>:
 8002e70:	b570      	push	{r4, r5, r6, lr}
 8002e72:	4604      	mov	r4, r0
 8002e74:	1c4b      	adds	r3, r1, #1
 8002e76:	460e      	mov	r6, r1
 8002e78:	8221      	strh	r1, [r4, #16]
 8002e7a:	d016      	beq.n	8002eaa <gpio_init+0x3a>
 8002e7c:	f3c1 1003 	ubfx	r0, r1, #4, #4
 8002e80:	f7ff ff7c 	bl	8002d7c <Set_GPIO_Clock>
 8002e84:	4605      	mov	r5, r0
 8002e86:	4630      	mov	r0, r6
 8002e88:	f7ff ffe8 	bl	8002e5c <gpio_set>
 8002e8c:	8a23      	ldrh	r3, [r4, #16]
 8002e8e:	4a07      	ldr	r2, [pc, #28]	; (8002eac <gpio_init+0x3c>)
 8002e90:	6165      	str	r5, [r4, #20]
 8002e92:	f003 030f 	and.w	r3, r3, #15
 8002e96:	6020      	str	r0, [r4, #0]
 8002e98:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002e9c:	61a3      	str	r3, [r4, #24]
 8002e9e:	f105 0310 	add.w	r3, r5, #16
 8002ea2:	3518      	adds	r5, #24
 8002ea4:	6063      	str	r3, [r4, #4]
 8002ea6:	60a5      	str	r5, [r4, #8]
 8002ea8:	60e5      	str	r5, [r4, #12]
 8002eaa:	bd70      	pop	{r4, r5, r6, pc}
 8002eac:	08006464 	.word	0x08006464

08002eb0 <gpio_mode>:
 8002eb0:	f9b0 0010 	ldrsh.w	r0, [r0, #16]
 8002eb4:	f000 bae6 	b.w	8003484 <pin_mode>

08002eb8 <gpio_dir>:
 8002eb8:	b510      	push	{r4, lr}
 8002eba:	6983      	ldr	r3, [r0, #24]
 8002ebc:	6944      	ldr	r4, [r0, #20]
 8002ebe:	b971      	cbnz	r1, 8002ede <gpio_dir+0x26>
 8002ec0:	6821      	ldr	r1, [r4, #0]
 8002ec2:	fa93 f2a3 	rbit	r2, r3
 8002ec6:	fab2 f282 	clz	r2, r2
 8002eca:	2003      	movs	r0, #3
 8002ecc:	0052      	lsls	r2, r2, #1
 8002ece:	fa00 f202 	lsl.w	r2, r0, r2
 8002ed2:	ea21 0202 	bic.w	r2, r1, r2
 8002ed6:	fa93 f3a3 	rbit	r3, r3
 8002eda:	6022      	str	r2, [r4, #0]
 8002edc:	bd10      	pop	{r4, pc}
 8002ede:	6822      	ldr	r2, [r4, #0]
 8002ee0:	fa93 f1a3 	rbit	r1, r3
 8002ee4:	fab1 f181 	clz	r1, r1
 8002ee8:	fa93 f3a3 	rbit	r3, r3
 8002eec:	2003      	movs	r0, #3
 8002eee:	0049      	lsls	r1, r1, #1
 8002ef0:	fa00 f101 	lsl.w	r1, r0, r1
 8002ef4:	fab3 f383 	clz	r3, r3
 8002ef8:	ea22 0201 	bic.w	r2, r2, r1
 8002efc:	005b      	lsls	r3, r3, #1
 8002efe:	2101      	movs	r1, #1
 8002f00:	fa01 f303 	lsl.w	r3, r1, r3
 8002f04:	4313      	orrs	r3, r2
 8002f06:	6023      	str	r3, [r4, #0]
 8002f08:	bd10      	pop	{r4, pc}

08002f0a <hal_sleep>:
 8002f0a:	b508      	push	{r3, lr}
 8002f0c:	f7ff ff1e 	bl	8002d4c <HAL_SuspendTick>
 8002f10:	2101      	movs	r1, #1
 8002f12:	2000      	movs	r0, #0
 8002f14:	f001 f918 	bl	8004148 <HAL_PWR_EnterSLEEPMode>
 8002f18:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8002f1c:	f7ff bf22 	b.w	8002d64 <HAL_ResumeTick>

08002f20 <us_ticker_init>:
 8002f20:	4b05      	ldr	r3, [pc, #20]	; (8002f38 <us_ticker_init+0x18>)
 8002f22:	6818      	ldr	r0, [r3, #0]
 8002f24:	b930      	cbnz	r0, 8002f34 <us_ticker_init+0x14>
 8002f26:	2201      	movs	r2, #1
 8002f28:	601a      	str	r2, [r3, #0]
 8002f2a:	4b04      	ldr	r3, [pc, #16]	; (8002f3c <us_ticker_init+0x1c>)
 8002f2c:	4a04      	ldr	r2, [pc, #16]	; (8002f40 <us_ticker_init+0x20>)
 8002f2e:	601a      	str	r2, [r3, #0]
 8002f30:	f7ff beac 	b.w	8002c8c <HAL_InitTick>
 8002f34:	4770      	bx	lr
 8002f36:	bf00      	nop
 8002f38:	20001ad0 	.word	0x20001ad0
 8002f3c:	20002910 	.word	0x20002910
 8002f40:	40000c00 	.word	0x40000c00

08002f44 <us_ticker_read>:
 8002f44:	b508      	push	{r3, lr}
 8002f46:	4b04      	ldr	r3, [pc, #16]	; (8002f58 <us_ticker_read+0x14>)
 8002f48:	681b      	ldr	r3, [r3, #0]
 8002f4a:	b90b      	cbnz	r3, 8002f50 <us_ticker_read+0xc>
 8002f4c:	f7ff ffe8 	bl	8002f20 <us_ticker_init>
 8002f50:	4b02      	ldr	r3, [pc, #8]	; (8002f5c <us_ticker_read+0x18>)
 8002f52:	6a58      	ldr	r0, [r3, #36]	; 0x24
 8002f54:	bd08      	pop	{r3, pc}
 8002f56:	bf00      	nop
 8002f58:	20001ad0 	.word	0x20001ad0
 8002f5c:	40000c00 	.word	0x40000c00

08002f60 <us_ticker_set_interrupt>:
 8002f60:	4b04      	ldr	r3, [pc, #16]	; (8002f74 <us_ticker_set_interrupt+0x14>)
 8002f62:	4a05      	ldr	r2, [pc, #20]	; (8002f78 <us_ticker_set_interrupt+0x18>)
 8002f64:	6013      	str	r3, [r2, #0]
 8002f66:	6358      	str	r0, [r3, #52]	; 0x34
 8002f68:	68da      	ldr	r2, [r3, #12]
 8002f6a:	f042 0202 	orr.w	r2, r2, #2
 8002f6e:	60da      	str	r2, [r3, #12]
 8002f70:	4770      	bx	lr
 8002f72:	bf00      	nop
 8002f74:	40000c00 	.word	0x40000c00
 8002f78:	20002910 	.word	0x20002910

08002f7c <us_ticker_disable_interrupt>:
 8002f7c:	4b03      	ldr	r3, [pc, #12]	; (8002f8c <us_ticker_disable_interrupt+0x10>)
 8002f7e:	4a04      	ldr	r2, [pc, #16]	; (8002f90 <us_ticker_disable_interrupt+0x14>)
 8002f80:	6013      	str	r3, [r2, #0]
 8002f82:	68da      	ldr	r2, [r3, #12]
 8002f84:	f022 0202 	bic.w	r2, r2, #2
 8002f88:	60da      	str	r2, [r3, #12]
 8002f8a:	4770      	bx	lr
 8002f8c:	40000c00 	.word	0x40000c00
 8002f90:	20002910 	.word	0x20002910

08002f94 <us_ticker_clear_interrupt>:
 8002f94:	4a03      	ldr	r2, [pc, #12]	; (8002fa4 <us_ticker_clear_interrupt+0x10>)
 8002f96:	4b04      	ldr	r3, [pc, #16]	; (8002fa8 <us_ticker_clear_interrupt+0x14>)
 8002f98:	6013      	str	r3, [r2, #0]
 8002f9a:	f06f 0202 	mvn.w	r2, #2
 8002f9e:	611a      	str	r2, [r3, #16]
 8002fa0:	4770      	bx	lr
 8002fa2:	bf00      	nop
 8002fa4:	20002910 	.word	0x20002910
 8002fa8:	40000c00 	.word	0x40000c00

08002fac <pwmout_write>:
 8002fac:	b530      	push	{r4, r5, lr}
 8002fae:	ee07 1a10 	vmov	s14, r1
 8002fb2:	4b28      	ldr	r3, [pc, #160]	; (8003054 <pwmout_write+0xa8>)
 8002fb4:	6802      	ldr	r2, [r0, #0]
 8002fb6:	601a      	str	r2, [r3, #0]
 8002fb8:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8002fbc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002fc0:	b089      	sub	sp, #36	; 0x24
 8002fc2:	4605      	mov	r5, r0
 8002fc4:	d428      	bmi.n	8003018 <pwmout_write+0x6c>
 8002fc6:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8002fca:	eeb4 7a67 	vcmp.f32	s14, s15
 8002fce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002fd2:	bfc8      	it	gt
 8002fd4:	eeb0 7a67 	vmovgt.f32	s14, s15
 8002fd8:	edd5 7a03 	vldr	s15, [r5, #12]
 8002fdc:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8002fe0:	2260      	movs	r2, #96	; 0x60
 8002fe2:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002fe6:	9201      	str	r2, [sp, #4]
 8002fe8:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002fec:	68aa      	ldr	r2, [r5, #8]
 8002fee:	edc5 7a04 	vstr	s15, [r5, #16]
 8002ff2:	ee17 3a90 	vmov	r3, s15
 8002ff6:	fbb3 f3f2 	udiv	r3, r3, r2
 8002ffa:	9302      	str	r3, [sp, #8]
 8002ffc:	2300      	movs	r3, #0
 8002ffe:	9303      	str	r3, [sp, #12]
 8003000:	9305      	str	r3, [sp, #20]
 8003002:	9306      	str	r3, [sp, #24]
 8003004:	9304      	str	r3, [sp, #16]
 8003006:	9307      	str	r3, [sp, #28]
 8003008:	7d2b      	ldrb	r3, [r5, #20]
 800300a:	3b01      	subs	r3, #1
 800300c:	2b03      	cmp	r3, #3
 800300e:	d816      	bhi.n	800303e <pwmout_write+0x92>
 8003010:	e8df f003 	tbb	[pc, r3]
 8003014:	1917051b 	.word	0x1917051b
 8003018:	ed9f 7a0f 	vldr	s14, [pc, #60]	; 8003058 <pwmout_write+0xac>
 800301c:	e7dc      	b.n	8002fd8 <pwmout_write+0x2c>
 800301e:	2404      	movs	r4, #4
 8003020:	4622      	mov	r2, r4
 8003022:	a901      	add	r1, sp, #4
 8003024:	480b      	ldr	r0, [pc, #44]	; (8003054 <pwmout_write+0xa8>)
 8003026:	f001 f809 	bl	800403c <HAL_TIM_PWM_ConfigChannel>
 800302a:	b110      	cbz	r0, 8003032 <pwmout_write+0x86>
 800302c:	480b      	ldr	r0, [pc, #44]	; (800305c <pwmout_write+0xb0>)
 800302e:	f7fe fb6b 	bl	8001708 <error>
 8003032:	7d6b      	ldrb	r3, [r5, #21]
 8003034:	4807      	ldr	r0, [pc, #28]	; (8003054 <pwmout_write+0xa8>)
 8003036:	4621      	mov	r1, r4
 8003038:	b14b      	cbz	r3, 800304e <pwmout_write+0xa2>
 800303a:	f000 fd59 	bl	8003af0 <HAL_TIMEx_PWMN_Start>
 800303e:	b009      	add	sp, #36	; 0x24
 8003040:	bd30      	pop	{r4, r5, pc}
 8003042:	2408      	movs	r4, #8
 8003044:	e7ec      	b.n	8003020 <pwmout_write+0x74>
 8003046:	240c      	movs	r4, #12
 8003048:	e7ea      	b.n	8003020 <pwmout_write+0x74>
 800304a:	2400      	movs	r4, #0
 800304c:	e7e8      	b.n	8003020 <pwmout_write+0x74>
 800304e:	f001 f863 	bl	8004118 <HAL_TIM_PWM_Start>
 8003052:	e7f4      	b.n	800303e <pwmout_write+0x92>
 8003054:	20001ad4 	.word	0x20001ad4
 8003058:	00000000 	.word	0x00000000
 800305c:	0800644a 	.word	0x0800644a

08003060 <pwmout_read>:
 8003060:	68c3      	ldr	r3, [r0, #12]
 8003062:	b1ab      	cbz	r3, 8003090 <pwmout_read+0x30>
 8003064:	ee07 3a90 	vmov	s15, r3
 8003068:	edd0 6a04 	vldr	s13, [r0, #16]
 800306c:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8003070:	eef8 6a66 	vcvt.f32.u32	s13, s13
 8003074:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8003078:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800307c:	eef4 7a47 	vcmp.f32	s15, s14
 8003080:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003084:	bfc8      	it	gt
 8003086:	eef0 7a47 	vmovgt.f32	s15, s14
 800308a:	ee17 0a90 	vmov	r0, s15
 800308e:	4770      	bx	lr
 8003090:	eddf 7a01 	vldr	s15, [pc, #4]	; 8003098 <pwmout_read+0x38>
 8003094:	e7f9      	b.n	800308a <pwmout_read+0x2a>
 8003096:	bf00      	nop
 8003098:	00000000 	.word	0x00000000

0800309c <pwmout_period_us>:
 800309c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 80030a0:	4c4a      	ldr	r4, [pc, #296]	; (80031cc <pwmout_period_us+0x130>)
 80030a2:	6802      	ldr	r2, [r0, #0]
 80030a4:	6022      	str	r2, [r4, #0]
 80030a6:	b086      	sub	sp, #24
 80030a8:	2300      	movs	r3, #0
 80030aa:	460e      	mov	r6, r1
 80030ac:	9300      	str	r3, [sp, #0]
 80030ae:	4605      	mov	r5, r0
 80030b0:	f7ff ffd6 	bl	8003060 <pwmout_read>
 80030b4:	6a11      	ldr	r1, [r2, #32]
 80030b6:	f241 1311 	movw	r3, #4369	; 0x1111
 80030ba:	4219      	tst	r1, r3
 80030bc:	4607      	mov	r7, r0
 80030be:	d108      	bne.n	80030d2 <pwmout_period_us+0x36>
 80030c0:	6a11      	ldr	r1, [r2, #32]
 80030c2:	f240 4344 	movw	r3, #1092	; 0x444
 80030c6:	4219      	tst	r1, r3
 80030c8:	bf02      	ittt	eq
 80030ca:	6813      	ldreq	r3, [r2, #0]
 80030cc:	f023 0301 	biceq.w	r3, r3, #1
 80030d0:	6013      	streq	r3, [r2, #0]
 80030d2:	4669      	mov	r1, sp
 80030d4:	a801      	add	r0, sp, #4
 80030d6:	f001 fad7 	bl	8004688 <HAL_RCC_GetClockConfig>
 80030da:	483d      	ldr	r0, [pc, #244]	; (80031d0 <pwmout_period_us+0x134>)
 80030dc:	6829      	ldr	r1, [r5, #0]
 80030de:	2300      	movs	r3, #0
 80030e0:	4680      	mov	r8, r0
 80030e2:	fa5f f983 	uxtb.w	r9, r3
 80030e6:	3301      	adds	r3, #1
 80030e8:	f850 2039 	ldr.w	r2, [r0, r9, lsl #3]
 80030ec:	428a      	cmp	r2, r1
 80030ee:	d1f8      	bne.n	80030e2 <pwmout_period_us+0x46>
 80030f0:	b911      	cbnz	r1, 80030f8 <pwmout_period_us+0x5c>
 80030f2:	4838      	ldr	r0, [pc, #224]	; (80031d4 <pwmout_period_us+0x138>)
 80030f4:	f7fe fb08 	bl	8001708 <error>
 80030f8:	eb08 08c9 	add.w	r8, r8, r9, lsl #3
 80030fc:	f898 3004 	ldrb.w	r3, [r8, #4]
 8003100:	bb53      	cbnz	r3, 8003158 <pwmout_period_us+0xbc>
 8003102:	f001 fa91 	bl	8004628 <HAL_RCC_GetPCLK1Freq>
 8003106:	9000      	str	r0, [sp, #0]
 8003108:	9804      	ldr	r0, [sp, #16]
 800310a:	9900      	ldr	r1, [sp, #0]
 800310c:	2301      	movs	r3, #1
 800310e:	60ab      	str	r3, [r5, #8]
 8003110:	4b31      	ldr	r3, [pc, #196]	; (80031d8 <pwmout_period_us+0x13c>)
 8003112:	bb30      	cbnz	r0, 8003162 <pwmout_period_us+0xc6>
 8003114:	fbb1 f3f3 	udiv	r3, r1, r3
 8003118:	3b01      	subs	r3, #1
 800311a:	6063      	str	r3, [r4, #4]
 800311c:	f106 3cff 	add.w	r12, r6, #4294967295	; 0xffffffff
 8003120:	4b2d      	ldr	r3, [pc, #180]	; (80031d8 <pwmout_period_us+0x13c>)
 8003122:	6862      	ldr	r2, [r4, #4]
 8003124:	fbb1 fef3 	udiv	lr, r1, r3
 8003128:	ea4f 0841 	mov.w	r8, r1, lsl #1
 800312c:	2100      	movs	r1, #0
 800312e:	fbb8 f8f3 	udiv	r8, r8, r3
 8003132:	f8c4 c00c 	str.w	r12, [r4, #12]
 8003136:	4663      	mov	r3, r12
 8003138:	468a      	mov	r10, r1
 800313a:	f64f 79fe 	movw	r9, #65534	; 0xfffe
 800313e:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8003142:	d212      	bcs.n	800316a <pwmout_period_us+0xce>
 8003144:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8003148:	d20f      	bcs.n	800316a <pwmout_period_us+0xce>
 800314a:	f1ba 0f00 	cmp.w	r10, #0
 800314e:	d000      	beq.n	8003152 <pwmout_period_us+0xb6>
 8003150:	6062      	str	r2, [r4, #4]
 8003152:	b1f1      	cbz	r1, 8003192 <pwmout_period_us+0xf6>
 8003154:	60e3      	str	r3, [r4, #12]
 8003156:	e01c      	b.n	8003192 <pwmout_period_us+0xf6>
 8003158:	f001 fa7e 	bl	8004658 <HAL_RCC_GetPCLK2Freq>
 800315c:	9000      	str	r0, [sp, #0]
 800315e:	9805      	ldr	r0, [sp, #20]
 8003160:	e7d3      	b.n	800310a <pwmout_period_us+0x6e>
 8003162:	004a      	lsls	r2, r1, #1
 8003164:	fbb2 f3f3 	udiv	r3, r2, r3
 8003168:	e7d6      	b.n	8003118 <pwmout_period_us+0x7c>
 800316a:	68ab      	ldr	r3, [r5, #8]
 800316c:	005b      	lsls	r3, r3, #1
 800316e:	60ab      	str	r3, [r5, #8]
 8003170:	bb30      	cbnz	r0, 80031c0 <pwmout_period_us+0x124>
 8003172:	fb0e f203 	mul.w	r2, lr, r3
 8003176:	fbbc f3f3 	udiv	r3, r12, r3
 800317a:	454b      	cmp	r3, r9
 800317c:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
 8003180:	d821      	bhi.n	80031c6 <pwmout_period_us+0x12a>
 8003182:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8003186:	d31e      	bcc.n	80031c6 <pwmout_period_us+0x12a>
 8003188:	4814      	ldr	r0, [pc, #80]	; (80031dc <pwmout_period_us+0x140>)
 800318a:	6062      	str	r2, [r4, #4]
 800318c:	60e3      	str	r3, [r4, #12]
 800318e:	f7fe fabb 	bl	8001708 <error>
 8003192:	2300      	movs	r3, #0
 8003194:	480d      	ldr	r0, [pc, #52]	; (80031cc <pwmout_period_us+0x130>)
 8003196:	6123      	str	r3, [r4, #16]
 8003198:	60a3      	str	r3, [r4, #8]
 800319a:	f000 ff09 	bl	8003fb0 <HAL_TIM_PWM_Init>
 800319e:	b110      	cbz	r0, 80031a6 <pwmout_period_us+0x10a>
 80031a0:	480e      	ldr	r0, [pc, #56]	; (80031dc <pwmout_period_us+0x140>)
 80031a2:	f7fe fab1 	bl	8001708 <error>
 80031a6:	60ee      	str	r6, [r5, #12]
 80031a8:	4639      	mov	r1, r7
 80031aa:	4628      	mov	r0, r5
 80031ac:	f7ff fefe 	bl	8002fac <pwmout_write>
 80031b0:	6822      	ldr	r2, [r4, #0]
 80031b2:	6813      	ldr	r3, [r2, #0]
 80031b4:	f043 0301 	orr.w	r3, r3, #1
 80031b8:	6013      	str	r3, [r2, #0]
 80031ba:	b006      	add	sp, #24
 80031bc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 80031c0:	fb08 f203 	mul.w	r2, r8, r3
 80031c4:	e7d7      	b.n	8003176 <pwmout_period_us+0xda>
 80031c6:	2101      	movs	r1, #1
 80031c8:	468a      	mov	r10, r1
 80031ca:	e7b8      	b.n	800313e <pwmout_period_us+0xa2>
 80031cc:	20001ad4 	.word	0x20001ad4
 80031d0:	080064a4 	.word	0x080064a4
 80031d4:	08006435 	.word	0x08006435
 80031d8:	000f4240 	.word	0x000f4240
 80031dc:	0800644a 	.word	0x0800644a

080031e0 <pwmout_init>:
 80031e0:	b530      	push	{r4, r5, lr}
 80031e2:	460d      	mov	r5, r1
 80031e4:	4604      	mov	r4, r0
 80031e6:	b089      	sub	sp, #36	; 0x24
 80031e8:	494c      	ldr	r1, [pc, #304]	; (800331c <pwmout_init+0x13c>)
 80031ea:	4628      	mov	r0, r5
 80031ec:	f7fe fa30 	bl	8001650 <pinmap_peripheral>
 80031f0:	494a      	ldr	r1, [pc, #296]	; (800331c <pwmout_init+0x13c>)
 80031f2:	6020      	str	r0, [r4, #0]
 80031f4:	4628      	mov	r0, r5
 80031f6:	f7fe fa47 	bl	8001688 <pinmap_function>
 80031fa:	f3c0 3304 	ubfx	r3, r0, #12, #5
 80031fe:	4a48      	ldr	r2, [pc, #288]	; (8003320 <pwmout_init+0x140>)
 8003200:	7523      	strb	r3, [r4, #20]
 8003202:	6823      	ldr	r3, [r4, #0]
 8003204:	f3c0 4040 	ubfx	r0, r0, #17, #1
 8003208:	4293      	cmp	r3, r2
 800320a:	7560      	strb	r0, [r4, #21]
 800320c:	f04f 0200 	mov.w	r2, #0
 8003210:	d11a      	bne.n	8003248 <pwmout_init+0x68>
 8003212:	9200      	str	r2, [sp, #0]
 8003214:	4a43      	ldr	r2, [pc, #268]	; (8003324 <pwmout_init+0x144>)
 8003216:	6c51      	ldr	r1, [r2, #68]	; 0x44
 8003218:	f041 0101 	orr.w	r1, r1, #1
 800321c:	6451      	str	r1, [r2, #68]	; 0x44
 800321e:	6c52      	ldr	r2, [r2, #68]	; 0x44
 8003220:	f002 0201 	and.w	r2, r2, #1
 8003224:	9200      	str	r2, [sp, #0]
 8003226:	9a00      	ldr	r2, [sp, #0]
 8003228:	4a3f      	ldr	r2, [pc, #252]	; (8003328 <pwmout_init+0x148>)
 800322a:	4293      	cmp	r3, r2
 800322c:	d129      	bne.n	8003282 <pwmout_init+0xa2>
 800322e:	2300      	movs	r3, #0
 8003230:	9305      	str	r3, [sp, #20]
 8003232:	4b3c      	ldr	r3, [pc, #240]	; (8003324 <pwmout_init+0x144>)
 8003234:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8003236:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800323a:	645a      	str	r2, [r3, #68]	; 0x44
 800323c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800323e:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003242:	9305      	str	r3, [sp, #20]
 8003244:	9b05      	ldr	r3, [sp, #20]
 8003246:	e058      	b.n	80032fa <pwmout_init+0x11a>
 8003248:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800324c:	d10b      	bne.n	8003266 <pwmout_init+0x86>
 800324e:	9201      	str	r2, [sp, #4]
 8003250:	4a34      	ldr	r2, [pc, #208]	; (8003324 <pwmout_init+0x144>)
 8003252:	6c11      	ldr	r1, [r2, #64]	; 0x40
 8003254:	f041 0101 	orr.w	r1, r1, #1
 8003258:	6411      	str	r1, [r2, #64]	; 0x40
 800325a:	6c12      	ldr	r2, [r2, #64]	; 0x40
 800325c:	f002 0201 	and.w	r2, r2, #1
 8003260:	9201      	str	r2, [sp, #4]
 8003262:	9a01      	ldr	r2, [sp, #4]
 8003264:	e7e0      	b.n	8003228 <pwmout_init+0x48>
 8003266:	4931      	ldr	r1, [pc, #196]	; (800332c <pwmout_init+0x14c>)
 8003268:	428b      	cmp	r3, r1
 800326a:	d11a      	bne.n	80032a2 <pwmout_init+0xc2>
 800326c:	9202      	str	r2, [sp, #8]
 800326e:	4a2d      	ldr	r2, [pc, #180]	; (8003324 <pwmout_init+0x144>)
 8003270:	6c11      	ldr	r1, [r2, #64]	; 0x40
 8003272:	f041 0102 	orr.w	r1, r1, #2
 8003276:	6411      	str	r1, [r2, #64]	; 0x40
 8003278:	6c12      	ldr	r2, [r2, #64]	; 0x40
 800327a:	f002 0202 	and.w	r2, r2, #2
 800327e:	9202      	str	r2, [sp, #8]
 8003280:	9a02      	ldr	r2, [sp, #8]
 8003282:	4a2b      	ldr	r2, [pc, #172]	; (8003330 <pwmout_init+0x150>)
 8003284:	4293      	cmp	r3, r2
 8003286:	d11a      	bne.n	80032be <pwmout_init+0xde>
 8003288:	2300      	movs	r3, #0
 800328a:	9306      	str	r3, [sp, #24]
 800328c:	4b25      	ldr	r3, [pc, #148]	; (8003324 <pwmout_init+0x144>)
 800328e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8003290:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8003294:	645a      	str	r2, [r3, #68]	; 0x44
 8003296:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003298:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800329c:	9306      	str	r3, [sp, #24]
 800329e:	9b06      	ldr	r3, [sp, #24]
 80032a0:	e02b      	b.n	80032fa <pwmout_init+0x11a>
 80032a2:	4924      	ldr	r1, [pc, #144]	; (8003334 <pwmout_init+0x154>)
 80032a4:	428b      	cmp	r3, r1
 80032a6:	d11a      	bne.n	80032de <pwmout_init+0xfe>
 80032a8:	9203      	str	r2, [sp, #12]
 80032aa:	4a1e      	ldr	r2, [pc, #120]	; (8003324 <pwmout_init+0x144>)
 80032ac:	6c11      	ldr	r1, [r2, #64]	; 0x40
 80032ae:	f041 0104 	orr.w	r1, r1, #4
 80032b2:	6411      	str	r1, [r2, #64]	; 0x40
 80032b4:	6c12      	ldr	r2, [r2, #64]	; 0x40
 80032b6:	f002 0204 	and.w	r2, r2, #4
 80032ba:	9203      	str	r2, [sp, #12]
 80032bc:	9a03      	ldr	r2, [sp, #12]
 80032be:	4a1e      	ldr	r2, [pc, #120]	; (8003338 <pwmout_init+0x158>)
 80032c0:	4293      	cmp	r3, r2
 80032c2:	d11a      	bne.n	80032fa <pwmout_init+0x11a>
 80032c4:	2300      	movs	r3, #0
 80032c6:	9307      	str	r3, [sp, #28]
 80032c8:	4b16      	ldr	r3, [pc, #88]	; (8003324 <pwmout_init+0x144>)
 80032ca:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80032cc:	f442 2280 	orr.w	r2, r2, #262144	; 0x40000
 80032d0:	645a      	str	r2, [r3, #68]	; 0x44
 80032d2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80032d4:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 80032d8:	9307      	str	r3, [sp, #28]
 80032da:	9b07      	ldr	r3, [sp, #28]
 80032dc:	e00d      	b.n	80032fa <pwmout_init+0x11a>
 80032de:	4917      	ldr	r1, [pc, #92]	; (800333c <pwmout_init+0x15c>)
 80032e0:	428b      	cmp	r3, r1
 80032e2:	d1a1      	bne.n	8003228 <pwmout_init+0x48>
 80032e4:	4b0f      	ldr	r3, [pc, #60]	; (8003324 <pwmout_init+0x144>)
 80032e6:	9204      	str	r2, [sp, #16]
 80032e8:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80032ea:	f042 0208 	orr.w	r2, r2, #8
 80032ee:	641a      	str	r2, [r3, #64]	; 0x40
 80032f0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80032f2:	f003 0308 	and.w	r3, r3, #8
 80032f6:	9304      	str	r3, [sp, #16]
 80032f8:	9b04      	ldr	r3, [sp, #16]
 80032fa:	4908      	ldr	r1, [pc, #32]	; (800331c <pwmout_init+0x13c>)
 80032fc:	4628      	mov	r0, r5
 80032fe:	f7fe f96b 	bl	80015d8 <pinmap_pinout>
 8003302:	2300      	movs	r3, #0
 8003304:	60e3      	str	r3, [r4, #12]
 8003306:	6123      	str	r3, [r4, #16]
 8003308:	2301      	movs	r3, #1
 800330a:	80a5      	strh	r5, [r4, #4]
 800330c:	60a3      	str	r3, [r4, #8]
 800330e:	f644 6120 	movw	r1, #20000	; 0x4e20
 8003312:	4620      	mov	r0, r4
 8003314:	f7ff fec2 	bl	800309c <pwmout_period_us>
 8003318:	b009      	add	sp, #36	; 0x24
 800331a:	bd30      	pop	{r4, r5, pc}
 800331c:	08006504 	.word	0x08006504
 8003320:	40010000 	.word	0x40010000
 8003324:	40023800 	.word	0x40023800
 8003328:	40014000 	.word	0x40014000
 800332c:	40000400 	.word	0x40000400
 8003330:	40014400 	.word	0x40014400
 8003334:	40000800 	.word	0x40000800
 8003338:	40014800 	.word	0x40014800
 800333c:	40000c00 	.word	0x40000c00

08003340 <LL_GPIO_SetPinPull>:
 8003340:	b530      	push	{r4, r5, lr}
 8003342:	68c3      	ldr	r3, [r0, #12]
 8003344:	fa91 f4a1 	rbit	r4, r1
 8003348:	fab4 f484 	clz	r4, r4
 800334c:	fa91 f1a1 	rbit	r1, r1
 8003350:	2503      	movs	r5, #3
 8003352:	fab1 f181 	clz	r1, r1
 8003356:	0064      	lsls	r4, r4, #1
 8003358:	fa05 f404 	lsl.w	r4, r5, r4
 800335c:	0049      	lsls	r1, r1, #1
 800335e:	ea23 0304 	bic.w	r3, r3, r4
 8003362:	fa02 f101 	lsl.w	r1, r2, r1
 8003366:	4319      	orrs	r1, r3
 8003368:	60c1      	str	r1, [r0, #12]
 800336a:	bd30      	pop	{r4, r5, pc}

0800336c <stm_pin_PullConfig>:
 800336c:	2a01      	cmp	r2, #1
 800336e:	d002      	beq.n	8003376 <stm_pin_PullConfig+0xa>
 8003370:	2a02      	cmp	r2, #2
 8003372:	bf18      	it	ne
 8003374:	2200      	movne	r2, #0
 8003376:	f7ff bfe3 	b.w	8003340 <LL_GPIO_SetPinPull>
	...

0800337c <pin_function>:
 800337c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003380:	4b3f      	ldr	r3, [pc, #252]	; (8003480 <pin_function+0x104>)
 8003382:	f000 080f 	and.w	r8, r0, #15
 8003386:	f3c0 1003 	ubfx	r0, r0, #4, #4
 800338a:	f853 4028 	ldr.w	r4, [r3, r8, lsl #2]
 800338e:	460e      	mov	r6, r1
 8003390:	f001 0507 	and.w	r5, r1, #7
 8003394:	f7ff fcf2 	bl	8002d7c <Set_GPIO_Clock>
 8003398:	6883      	ldr	r3, [r0, #8]
 800339a:	fa94 f1a4 	rbit	r1, r4
 800339e:	fab1 f181 	clz	r1, r1
 80033a2:	fa94 f2a4 	rbit	r2, r4
 80033a6:	2703      	movs	r7, #3
 80033a8:	0049      	lsls	r1, r1, #1
 80033aa:	fa07 f101 	lsl.w	r1, r7, r1
 80033ae:	fab2 f282 	clz	r2, r2
 80033b2:	ea23 0301 	bic.w	r3, r3, r1
 80033b6:	0052      	lsls	r2, r2, #1
 80033b8:	2102      	movs	r1, #2
 80033ba:	fa01 f202 	lsl.w	r2, r1, r2
 80033be:	4313      	orrs	r3, r2
 80033c0:	428d      	cmp	r5, r1
 80033c2:	6083      	str	r3, [r0, #8]
 80033c4:	d028      	beq.n	8003418 <pin_function+0x9c>
 80033c6:	42bd      	cmp	r5, r7
 80033c8:	d041      	beq.n	800344e <pin_function+0xd2>
 80033ca:	2d01      	cmp	r5, #1
 80033cc:	d03f      	beq.n	800344e <pin_function+0xd2>
 80033ce:	2300      	movs	r3, #0
 80033d0:	6802      	ldr	r2, [r0, #0]
 80033d2:	fa94 f7a4 	rbit	r7, r4
 80033d6:	fab7 f787 	clz	r7, r7
 80033da:	fa94 f1a4 	rbit	r1, r4
 80033de:	f04f 0e03 	mov.w	lr, #3
 80033e2:	fab1 f181 	clz	r1, r1
 80033e6:	007f      	lsls	r7, r7, #1
 80033e8:	fa0e f707 	lsl.w	r7, lr, r7
 80033ec:	0049      	lsls	r1, r1, #1
 80033ee:	ea22 0207 	bic.w	r2, r2, r7
 80033f2:	408b      	lsls	r3, r1
 80033f4:	3d01      	subs	r5, #1
 80033f6:	4313      	orrs	r3, r2
 80033f8:	2d01      	cmp	r5, #1
 80033fa:	6003      	str	r3, [r0, #0]
 80033fc:	d805      	bhi.n	800340a <pin_function+0x8e>
 80033fe:	6843      	ldr	r3, [r0, #4]
 8003400:	0732      	lsls	r2, r6, #28
 8003402:	bf4c      	ite	mi
 8003404:	4323      	orrmi	r3, r4
 8003406:	43a3      	bicpl	r3, r4
 8003408:	6043      	str	r3, [r0, #4]
 800340a:	f3c6 1201 	ubfx	r2, r6, #4, #2
 800340e:	4621      	mov	r1, r4
 8003410:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003414:	f7ff bfaa 	b.w	800336c <stm_pin_PullConfig>
 8003418:	f1b8 0f07 	cmp.w	r8, #7
 800341c:	f3c6 2703 	ubfx	r7, r6, #8, #4
 8003420:	d917      	bls.n	8003452 <pin_function+0xd6>
 8003422:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8003424:	0a23      	lsrs	r3, r4, #8
 8003426:	fa93 f1a3 	rbit	r1, r3
 800342a:	fab1 f181 	clz	r1, r1
 800342e:	fa93 f3a3 	rbit	r3, r3
 8003432:	f04f 0e0f 	mov.w	lr, #15
 8003436:	fab3 f383 	clz	r3, r3
 800343a:	0089      	lsls	r1, r1, #2
 800343c:	fa0e f101 	lsl.w	r1, lr, r1
 8003440:	009b      	lsls	r3, r3, #2
 8003442:	ea22 0201 	bic.w	r2, r2, r1
 8003446:	fa07 f303 	lsl.w	r3, r7, r3
 800344a:	4313      	orrs	r3, r2
 800344c:	6243      	str	r3, [r0, #36]	; 0x24
 800344e:	462b      	mov	r3, r5
 8003450:	e7be      	b.n	80033d0 <pin_function+0x54>
 8003452:	6a02      	ldr	r2, [r0, #32]
 8003454:	fa94 f3a4 	rbit	r3, r4
 8003458:	fab3 f383 	clz	r3, r3
 800345c:	fa94 f1a4 	rbit	r1, r4
 8003460:	f04f 0e0f 	mov.w	lr, #15
 8003464:	fab1 f181 	clz	r1, r1
 8003468:	009b      	lsls	r3, r3, #2
 800346a:	fa0e f303 	lsl.w	r3, lr, r3
 800346e:	0089      	lsls	r1, r1, #2
 8003470:	ea22 0203 	bic.w	r2, r2, r3
 8003474:	fa07 f301 	lsl.w	r3, r7, r1
 8003478:	4313      	orrs	r3, r2
 800347a:	6203      	str	r3, [r0, #32]
 800347c:	e7e7      	b.n	800344e <pin_function+0xd2>
 800347e:	bf00      	nop
 8003480:	08006464 	.word	0x08006464

08003484 <pin_mode>:
 8003484:	b538      	push	{r3, r4, r5, lr}
 8003486:	f000 020f 	and.w	r2, r0, #15
 800348a:	4b19      	ldr	r3, [pc, #100]	; (80034f0 <pin_mode+0x6c>)
 800348c:	f3c0 1003 	ubfx	r0, r0, #4, #4
 8003490:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8003494:	460d      	mov	r5, r1
 8003496:	f7ff fc71 	bl	8002d7c <Set_GPIO_Clock>
 800349a:	fb04 f204 	mul.w	r2, r4, r4
 800349e:	6801      	ldr	r1, [r0, #0]
 80034a0:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 80034a4:	400b      	ands	r3, r1
 80034a6:	fbb3 f3f2 	udiv	r3, r3, r2
 80034aa:	3b01      	subs	r3, #1
 80034ac:	2b01      	cmp	r3, #1
 80034ae:	d805      	bhi.n	80034bc <pin_mode+0x38>
 80034b0:	1eeb      	subs	r3, r5, #3
 80034b2:	2b02      	cmp	r3, #2
 80034b4:	6843      	ldr	r3, [r0, #4]
 80034b6:	d809      	bhi.n	80034cc <pin_mode+0x48>
 80034b8:	4323      	orrs	r3, r4
 80034ba:	6043      	str	r3, [r0, #4]
 80034bc:	2d03      	cmp	r5, #3
 80034be:	d108      	bne.n	80034d2 <pin_mode+0x4e>
 80034c0:	2201      	movs	r2, #1
 80034c2:	4621      	mov	r1, r4
 80034c4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80034c8:	f7ff bf50 	b.w	800336c <stm_pin_PullConfig>
 80034cc:	ea23 0304 	bic.w	r3, r3, r4
 80034d0:	6043      	str	r3, [r0, #4]
 80034d2:	2d01      	cmp	r5, #1
 80034d4:	d0f4      	beq.n	80034c0 <pin_mode+0x3c>
 80034d6:	2d05      	cmp	r5, #5
 80034d8:	d001      	beq.n	80034de <pin_mode+0x5a>
 80034da:	2d02      	cmp	r5, #2
 80034dc:	d101      	bne.n	80034e2 <pin_mode+0x5e>
 80034de:	2202      	movs	r2, #2
 80034e0:	e7ef      	b.n	80034c2 <pin_mode+0x3e>
 80034e2:	4621      	mov	r1, r4
 80034e4:	2200      	movs	r2, #0
 80034e6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80034ea:	f7ff bf29 	b.w	8003340 <LL_GPIO_SetPinPull>
 80034ee:	bf00      	nop
 80034f0:	08006464 	.word	0x08006464

080034f4 <__NVIC_DisableIRQ>:
 80034f4:	0943      	lsrs	r3, r0, #5
 80034f6:	2201      	movs	r2, #1
 80034f8:	f000 001f 	and.w	r0, r0, #31
 80034fc:	fa02 f000 	lsl.w	r0, r2, r0
 8003500:	3320      	adds	r3, #32
 8003502:	4a04      	ldr	r2, [pc, #16]	; (8003514 <__NVIC_DisableIRQ+0x20>)
 8003504:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
 8003508:	f3bf 8f4f 	dsb	sy
 800350c:	f3bf 8f6f 	isb	sy
 8003510:	4770      	bx	lr
 8003512:	bf00      	nop
 8003514:	e000e100 	.word	0xe000e100

08003518 <init_uart>:
 8003518:	6842      	ldr	r2, [r0, #4]
 800351a:	4916      	ldr	r1, [pc, #88]	; (8003574 <init_uart+0x5c>)
 800351c:	0192      	lsls	r2, r2, #6
 800351e:	b510      	push	{r4, lr}
 8003520:	188b      	adds	r3, r1, r2
 8003522:	6804      	ldr	r4, [r0, #0]
 8003524:	508c      	str	r4, [r1, r2]
 8003526:	6882      	ldr	r2, [r0, #8]
 8003528:	605a      	str	r2, [r3, #4]
 800352a:	68c2      	ldr	r2, [r0, #12]
 800352c:	609a      	str	r2, [r3, #8]
 800352e:	6902      	ldr	r2, [r0, #16]
 8003530:	60da      	str	r2, [r3, #12]
 8003532:	6942      	ldr	r2, [r0, #20]
 8003534:	611a      	str	r2, [r3, #16]
 8003536:	6a02      	ldr	r2, [r0, #32]
 8003538:	619a      	str	r2, [r3, #24]
 800353a:	2200      	movs	r2, #0
 800353c:	61da      	str	r2, [r3, #28]
 800353e:	84da      	strh	r2, [r3, #38]	; 0x26
 8003540:	849a      	strh	r2, [r3, #36]	; 0x24
 8003542:	85da      	strh	r2, [r3, #46]	; 0x2e
 8003544:	859a      	strh	r2, [r3, #44]	; 0x2c
 8003546:	f9b0 201a 	ldrsh.w	r2, [r0, #26]
 800354a:	3201      	adds	r2, #1
 800354c:	d10a      	bne.n	8003564 <init_uart+0x4c>
 800354e:	2208      	movs	r2, #8
 8003550:	615a      	str	r2, [r3, #20]
 8003552:	4618      	mov	r0, r3
 8003554:	f000 fc21 	bl	8003d9a <HAL_UART_Init>
 8003558:	b158      	cbz	r0, 8003572 <init_uart+0x5a>
 800355a:	4807      	ldr	r0, [pc, #28]	; (8003578 <init_uart+0x60>)
 800355c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003560:	f7fe b8d2 	b.w	8001708 <error>
 8003564:	f9b0 2018 	ldrsh.w	r2, [r0, #24]
 8003568:	3201      	adds	r2, #1
 800356a:	bf0c      	ite	eq
 800356c:	2204      	moveq	r2, #4
 800356e:	220c      	movne	r2, #12
 8003570:	e7ee      	b.n	8003550 <init_uart+0x38>
 8003572:	bd10      	pop	{r4, pc}
 8003574:	20001b38 	.word	0x20001b38
 8003578:	080064ec 	.word	0x080064ec

0800357c <uart_irq>:
 800357c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800357e:	4e19      	ldr	r6, [pc, #100]	; (80035e4 <uart_irq+0x68>)
 8003580:	4607      	mov	r7, r0
 8003582:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8003586:	2800      	cmp	r0, #0
 8003588:	d02a      	beq.n	80035e0 <uart_irq+0x64>
 800358a:	4c17      	ldr	r4, [pc, #92]	; (80035e8 <uart_irq+0x6c>)
 800358c:	01bd      	lsls	r5, r7, #6
 800358e:	5963      	ldr	r3, [r4, r5]
 8003590:	681a      	ldr	r2, [r3, #0]
 8003592:	0652      	lsls	r2, r2, #25
 8003594:	d50a      	bpl.n	80035ac <uart_irq+0x30>
 8003596:	68db      	ldr	r3, [r3, #12]
 8003598:	0659      	lsls	r1, r3, #25
 800359a:	d507      	bpl.n	80035ac <uart_irq+0x30>
 800359c:	4b13      	ldr	r3, [pc, #76]	; (80035ec <uart_irq+0x70>)
 800359e:	2101      	movs	r1, #1
 80035a0:	681b      	ldr	r3, [r3, #0]
 80035a2:	4798      	blx	r3
 80035a4:	5963      	ldr	r3, [r4, r5]
 80035a6:	f06f 0240 	mvn.w	r2, #64	; 0x40
 80035aa:	601a      	str	r2, [r3, #0]
 80035ac:	5963      	ldr	r3, [r4, r5]
 80035ae:	681a      	ldr	r2, [r3, #0]
 80035b0:	0692      	lsls	r2, r2, #26
 80035b2:	d50c      	bpl.n	80035ce <uart_irq+0x52>
 80035b4:	68db      	ldr	r3, [r3, #12]
 80035b6:	0698      	lsls	r0, r3, #26
 80035b8:	d509      	bpl.n	80035ce <uart_irq+0x52>
 80035ba:	4b0c      	ldr	r3, [pc, #48]	; (80035ec <uart_irq+0x70>)
 80035bc:	f856 0027 	ldr.w	r0, [r6, r7, lsl #2]
 80035c0:	681b      	ldr	r3, [r3, #0]
 80035c2:	2100      	movs	r1, #0
 80035c4:	4798      	blx	r3
 80035c6:	5963      	ldr	r3, [r4, r5]
 80035c8:	f06f 0220 	mvn.w	r2, #32
 80035cc:	601a      	str	r2, [r3, #0]
 80035ce:	5963      	ldr	r3, [r4, r5]
 80035d0:	681a      	ldr	r2, [r3, #0]
 80035d2:	0711      	lsls	r1, r2, #28
 80035d4:	d504      	bpl.n	80035e0 <uart_irq+0x64>
 80035d6:	695a      	ldr	r2, [r3, #20]
 80035d8:	07d2      	lsls	r2, r2, #31
 80035da:	bf44      	itt	mi
 80035dc:	685b      	ldrmi	r3, [r3, #4]
 80035de:	9301      	strmi	r3, [sp, #4]
 80035e0:	b003      	add	sp, #12
 80035e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80035e4:	20001b14 	.word	0x20001b14
 80035e8:	20001b38 	.word	0x20001b38
 80035ec:	20001b10 	.word	0x20001b10

080035f0 <uart1_irq>:
 80035f0:	2000      	movs	r0, #0
 80035f2:	f7ff bfc3 	b.w	800357c <uart_irq>

080035f6 <uart2_irq>:
 80035f6:	2001      	movs	r0, #1
 80035f8:	f7ff bfc0 	b.w	800357c <uart_irq>

080035fc <uart6_irq>:
 80035fc:	2005      	movs	r0, #5
 80035fe:	f7ff bfbd 	b.w	800357c <uart_irq>
	...

08003604 <serial_init>:
 8003604:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003606:	460e      	mov	r6, r1
 8003608:	b085      	sub	sp, #20
 800360a:	4604      	mov	r4, r0
 800360c:	4945      	ldr	r1, [pc, #276]	; (8003724 <serial_init+0x120>)
 800360e:	4630      	mov	r0, r6
 8003610:	4615      	mov	r5, r2
 8003612:	f7fe f81d 	bl	8001650 <pinmap_peripheral>
 8003616:	4944      	ldr	r1, [pc, #272]	; (8003728 <serial_init+0x124>)
 8003618:	4607      	mov	r7, r0
 800361a:	4628      	mov	r0, r5
 800361c:	f7fe f818 	bl	8001650 <pinmap_peripheral>
 8003620:	4601      	mov	r1, r0
 8003622:	4638      	mov	r0, r7
 8003624:	f7fd fff6 	bl	8001614 <pinmap_merge>
 8003628:	4b40      	ldr	r3, [pc, #256]	; (800372c <serial_init+0x128>)
 800362a:	6020      	str	r0, [r4, #0]
 800362c:	4298      	cmp	r0, r3
 800362e:	d01e      	beq.n	800366e <serial_init+0x6a>
 8003630:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8003634:	4298      	cmp	r0, r3
 8003636:	d05e      	beq.n	80036f6 <serial_init+0xf2>
 8003638:	f5a3 4350 	sub.w	r3, r3, #53248	; 0xd000
 800363c:	4298      	cmp	r0, r3
 800363e:	d12b      	bne.n	8003698 <serial_init+0x94>
 8003640:	4b3b      	ldr	r3, [pc, #236]	; (8003730 <serial_init+0x12c>)
 8003642:	6a1a      	ldr	r2, [r3, #32]
 8003644:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8003648:	621a      	str	r2, [r3, #32]
 800364a:	6a1a      	ldr	r2, [r3, #32]
 800364c:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
 8003650:	621a      	str	r2, [r3, #32]
 8003652:	2200      	movs	r2, #0
 8003654:	9202      	str	r2, [sp, #8]
 8003656:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003658:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 800365c:	641a      	str	r2, [r3, #64]	; 0x40
 800365e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003660:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003664:	9302      	str	r3, [sp, #8]
 8003666:	9b02      	ldr	r3, [sp, #8]
 8003668:	2301      	movs	r3, #1
 800366a:	6063      	str	r3, [r4, #4]
 800366c:	e014      	b.n	8003698 <serial_init+0x94>
 800366e:	4b30      	ldr	r3, [pc, #192]	; (8003730 <serial_init+0x12c>)
 8003670:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003672:	f042 0210 	orr.w	r2, r2, #16
 8003676:	625a      	str	r2, [r3, #36]	; 0x24
 8003678:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800367a:	2100      	movs	r1, #0
 800367c:	f022 0210 	bic.w	r2, r2, #16
 8003680:	625a      	str	r2, [r3, #36]	; 0x24
 8003682:	9101      	str	r1, [sp, #4]
 8003684:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8003686:	f042 0210 	orr.w	r2, r2, #16
 800368a:	645a      	str	r2, [r3, #68]	; 0x44
 800368c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800368e:	6061      	str	r1, [r4, #4]
 8003690:	f003 0310 	and.w	r3, r3, #16
 8003694:	9301      	str	r3, [sp, #4]
 8003696:	9b01      	ldr	r3, [sp, #4]
 8003698:	4922      	ldr	r1, [pc, #136]	; (8003724 <serial_init+0x120>)
 800369a:	4630      	mov	r0, r6
 800369c:	f7fd ff9c 	bl	80015d8 <pinmap_pinout>
 80036a0:	4921      	ldr	r1, [pc, #132]	; (8003728 <serial_init+0x124>)
 80036a2:	4628      	mov	r0, r5
 80036a4:	f7fd ff98 	bl	80015d8 <pinmap_pinout>
 80036a8:	1c72      	adds	r2, r6, #1
 80036aa:	d003      	beq.n	80036b4 <serial_init+0xb0>
 80036ac:	2101      	movs	r1, #1
 80036ae:	4630      	mov	r0, r6
 80036b0:	f7ff fee8 	bl	8003484 <pin_mode>
 80036b4:	1c6b      	adds	r3, r5, #1
 80036b6:	d003      	beq.n	80036c0 <serial_init+0xbc>
 80036b8:	2101      	movs	r1, #1
 80036ba:	4628      	mov	r0, r5
 80036bc:	f7ff fee2 	bl	8003484 <pin_mode>
 80036c0:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 80036c4:	60a3      	str	r3, [r4, #8]
 80036c6:	2300      	movs	r3, #0
 80036c8:	60e3      	str	r3, [r4, #12]
 80036ca:	6123      	str	r3, [r4, #16]
 80036cc:	6163      	str	r3, [r4, #20]
 80036ce:	6223      	str	r3, [r4, #32]
 80036d0:	8326      	strh	r6, [r4, #24]
 80036d2:	8365      	strh	r5, [r4, #26]
 80036d4:	4620      	mov	r0, r4
 80036d6:	f7ff ff1f 	bl	8003518 <init_uart>
 80036da:	6822      	ldr	r2, [r4, #0]
 80036dc:	4b15      	ldr	r3, [pc, #84]	; (8003734 <serial_init+0x130>)
 80036de:	429a      	cmp	r2, r3
 80036e0:	d107      	bne.n	80036f2 <serial_init+0xee>
 80036e2:	4b15      	ldr	r3, [pc, #84]	; (8003738 <serial_init+0x134>)
 80036e4:	4815      	ldr	r0, [pc, #84]	; (800373c <serial_init+0x138>)
 80036e6:	2201      	movs	r2, #1
 80036e8:	601a      	str	r2, [r3, #0]
 80036ea:	4621      	mov	r1, r4
 80036ec:	224c      	movs	r2, #76	; 0x4c
 80036ee:	f001 ffcf 	bl	8005690 <memcpy>
 80036f2:	b005      	add	sp, #20
 80036f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80036f6:	4b0e      	ldr	r3, [pc, #56]	; (8003730 <serial_init+0x12c>)
 80036f8:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80036fa:	f042 0220 	orr.w	r2, r2, #32
 80036fe:	625a      	str	r2, [r3, #36]	; 0x24
 8003700:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003702:	f022 0220 	bic.w	r2, r2, #32
 8003706:	625a      	str	r2, [r3, #36]	; 0x24
 8003708:	2200      	movs	r2, #0
 800370a:	9203      	str	r2, [sp, #12]
 800370c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800370e:	f042 0220 	orr.w	r2, r2, #32
 8003712:	645a      	str	r2, [r3, #68]	; 0x44
 8003714:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003716:	f003 0320 	and.w	r3, r3, #32
 800371a:	9303      	str	r3, [sp, #12]
 800371c:	9b03      	ldr	r3, [sp, #12]
 800371e:	2305      	movs	r3, #5
 8003720:	e7a3      	b.n	800366a <serial_init+0x66>
 8003722:	bf00      	nop
 8003724:	0800669c 	.word	0x0800669c
 8003728:	08006654 	.word	0x08006654
 800372c:	40011000 	.word	0x40011000
 8003730:	40023800 	.word	0x40023800
 8003734:	40004400 	.word	0x40004400
 8003738:	20001b34 	.word	0x20001b34
 800373c:	2000294c 	.word	0x2000294c

08003740 <serial_baud>:
 8003740:	6081      	str	r1, [r0, #8]
 8003742:	f7ff bee9 	b.w	8003518 <init_uart>
	...

08003748 <serial_irq_handler>:
 8003748:	4b03      	ldr	r3, [pc, #12]	; (8003758 <serial_irq_handler+0x10>)
 800374a:	6019      	str	r1, [r3, #0]
 800374c:	6841      	ldr	r1, [r0, #4]
 800374e:	4b03      	ldr	r3, [pc, #12]	; (800375c <serial_irq_handler+0x14>)
 8003750:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
 8003754:	4770      	bx	lr
 8003756:	bf00      	nop
 8003758:	20001b10 	.word	0x20001b10
 800375c:	20001b14 	.word	0x20001b14

08003760 <serial_irq_set>:
 8003760:	b538      	push	{r3, r4, r5, lr}
 8003762:	6843      	ldr	r3, [r0, #4]
 8003764:	2b01      	cmp	r3, #1
 8003766:	460d      	mov	r5, r1
 8003768:	d01a      	beq.n	80037a0 <serial_irq_set+0x40>
 800376a:	2b05      	cmp	r3, #5
 800376c:	d01b      	beq.n	80037a6 <serial_irq_set+0x46>
 800376e:	b9eb      	cbnz	r3, 80037ac <serial_irq_set+0x4c>
 8003770:	491c      	ldr	r1, [pc, #112]	; (80037e4 <serial_irq_set+0x84>)
 8003772:	2425      	movs	r4, #37	; 0x25
 8003774:	481c      	ldr	r0, [pc, #112]	; (80037e8 <serial_irq_set+0x88>)
 8003776:	019b      	lsls	r3, r3, #6
 8003778:	b1f2      	cbz	r2, 80037b8 <serial_irq_set+0x58>
 800377a:	58c2      	ldr	r2, [r0, r3]
 800377c:	68d3      	ldr	r3, [r2, #12]
 800377e:	b9c5      	cbnz	r5, 80037b2 <serial_irq_set+0x52>
 8003780:	f043 0320 	orr.w	r3, r3, #32
 8003784:	60d3      	str	r3, [r2, #12]
 8003786:	4620      	mov	r0, r4
 8003788:	f000 f986 	bl	8003a98 <__NVIC_SetVector>
 800378c:	0962      	lsrs	r2, r4, #5
 800378e:	2301      	movs	r3, #1
 8003790:	f004 0407 	and.w	r4, r4, #7
 8003794:	fa03 f404 	lsl.w	r4, r3, r4
 8003798:	4b14      	ldr	r3, [pc, #80]	; (80037ec <serial_irq_set+0x8c>)
 800379a:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800379e:	bd38      	pop	{r3, r4, r5, pc}
 80037a0:	4913      	ldr	r1, [pc, #76]	; (80037f0 <serial_irq_set+0x90>)
 80037a2:	2426      	movs	r4, #38	; 0x26
 80037a4:	e7e6      	b.n	8003774 <serial_irq_set+0x14>
 80037a6:	4913      	ldr	r1, [pc, #76]	; (80037f4 <serial_irq_set+0x94>)
 80037a8:	2447      	movs	r4, #71	; 0x47
 80037aa:	e7e3      	b.n	8003774 <serial_irq_set+0x14>
 80037ac:	2100      	movs	r1, #0
 80037ae:	460c      	mov	r4, r1
 80037b0:	e7e0      	b.n	8003774 <serial_irq_set+0x14>
 80037b2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80037b6:	e7e5      	b.n	8003784 <serial_irq_set+0x24>
 80037b8:	58c3      	ldr	r3, [r0, r3]
 80037ba:	68da      	ldr	r2, [r3, #12]
 80037bc:	b935      	cbnz	r5, 80037cc <serial_irq_set+0x6c>
 80037be:	f022 0220 	bic.w	r2, r2, #32
 80037c2:	60da      	str	r2, [r3, #12]
 80037c4:	68db      	ldr	r3, [r3, #12]
 80037c6:	061a      	lsls	r2, r3, #24
 80037c8:	d506      	bpl.n	80037d8 <serial_irq_set+0x78>
 80037ca:	bd38      	pop	{r3, r4, r5, pc}
 80037cc:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80037d0:	60da      	str	r2, [r3, #12]
 80037d2:	68db      	ldr	r3, [r3, #12]
 80037d4:	069b      	lsls	r3, r3, #26
 80037d6:	d404      	bmi.n	80037e2 <serial_irq_set+0x82>
 80037d8:	4620      	mov	r0, r4
 80037da:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80037de:	f7ff be89 	b.w	80034f4 <__NVIC_DisableIRQ>
 80037e2:	bd38      	pop	{r3, r4, r5, pc}
 80037e4:	080035f1 	.word	0x080035f1
 80037e8:	20001b38 	.word	0x20001b38
 80037ec:	e000e100 	.word	0xe000e100
 80037f0:	080035f7 	.word	0x080035f7
 80037f4:	080035fd 	.word	0x080035fd

080037f8 <serial_readable>:
 80037f8:	6843      	ldr	r3, [r0, #4]
 80037fa:	4a03      	ldr	r2, [pc, #12]	; (8003808 <serial_readable+0x10>)
 80037fc:	019b      	lsls	r3, r3, #6
 80037fe:	58d3      	ldr	r3, [r2, r3]
 8003800:	6818      	ldr	r0, [r3, #0]
 8003802:	f3c0 1040 	ubfx	r0, r0, #5, #1
 8003806:	4770      	bx	lr
 8003808:	20001b38 	.word	0x20001b38

0800380c <serial_getc>:
 800380c:	6841      	ldr	r1, [r0, #4]
 800380e:	b510      	push	{r4, lr}
 8003810:	4604      	mov	r4, r0
 8003812:	4620      	mov	r0, r4
 8003814:	f7ff fff0 	bl	80037f8 <serial_readable>
 8003818:	2800      	cmp	r0, #0
 800381a:	d0fa      	beq.n	8003812 <serial_getc+0x6>
 800381c:	0189      	lsls	r1, r1, #6
 800381e:	4b03      	ldr	r3, [pc, #12]	; (800382c <serial_getc+0x20>)
 8003820:	585b      	ldr	r3, [r3, r1]
 8003822:	6858      	ldr	r0, [r3, #4]
 8003824:	f3c0 0008 	ubfx	r0, r0, #0, #9
 8003828:	bd10      	pop	{r4, pc}
 800382a:	bf00      	nop
 800382c:	20001b38 	.word	0x20001b38

08003830 <serial_writable>:
 8003830:	6843      	ldr	r3, [r0, #4]
 8003832:	4a03      	ldr	r2, [pc, #12]	; (8003840 <serial_writable+0x10>)
 8003834:	019b      	lsls	r3, r3, #6
 8003836:	58d3      	ldr	r3, [r2, r3]
 8003838:	6818      	ldr	r0, [r3, #0]
 800383a:	f3c0 10c0 	ubfx	r0, r0, #7, #1
 800383e:	4770      	bx	lr
 8003840:	20001b38 	.word	0x20001b38

08003844 <serial_putc>:
 8003844:	b538      	push	{r3, r4, r5, lr}
 8003846:	6844      	ldr	r4, [r0, #4]
 8003848:	4605      	mov	r5, r0
 800384a:	4628      	mov	r0, r5
 800384c:	f7ff fff0 	bl	8003830 <serial_writable>
 8003850:	2800      	cmp	r0, #0
 8003852:	d0fa      	beq.n	800384a <serial_putc+0x6>
 8003854:	01a4      	lsls	r4, r4, #6
 8003856:	4b03      	ldr	r3, [pc, #12]	; (8003864 <serial_putc+0x20>)
 8003858:	591b      	ldr	r3, [r3, r4]
 800385a:	f3c1 0108 	ubfx	r1, r1, #0, #9
 800385e:	6059      	str	r1, [r3, #4]
 8003860:	bd38      	pop	{r3, r4, r5, pc}
 8003862:	bf00      	nop
 8003864:	20001b38 	.word	0x20001b38

08003868 <mbed_sdk_init>:
 8003868:	b508      	push	{r3, lr}
 800386a:	f000 f819 	bl	80038a0 <SystemCoreClockUpdate>
 800386e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8003872:	f000 b94f 	b.w	8003b14 <HAL_Init>

08003876 <SetSysClock_PLL_HSE.part.0>:
 8003876:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8003878:	230f      	movs	r3, #15
 800387a:	9301      	str	r3, [sp, #4]
 800387c:	2102      	movs	r1, #2
 800387e:	2300      	movs	r3, #0
 8003880:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8003884:	a801      	add	r0, sp, #4
 8003886:	9102      	str	r1, [sp, #8]
 8003888:	9303      	str	r3, [sp, #12]
 800388a:	9204      	str	r2, [sp, #16]
 800388c:	9305      	str	r3, [sp, #20]
 800388e:	f000 fe15 	bl	80044bc <HAL_RCC_ClockConfig>
 8003892:	fab0 f080 	clz	r0, r0
 8003896:	0940      	lsrs	r0, r0, #5
 8003898:	b007      	add	sp, #28
 800389a:	f85d fb04 	ldr.w	pc, [sp], #4
	...

080038a0 <SystemCoreClockUpdate>:
 80038a0:	4a17      	ldr	r2, [pc, #92]	; (8003900 <SystemCoreClockUpdate+0x60>)
 80038a2:	4918      	ldr	r1, [pc, #96]	; (8003904 <SystemCoreClockUpdate+0x64>)
 80038a4:	6893      	ldr	r3, [r2, #8]
 80038a6:	f003 030c 	and.w	r3, r3, #12
 80038aa:	2b04      	cmp	r3, #4
 80038ac:	b510      	push	{r4, lr}
 80038ae:	d00d      	beq.n	80038cc <SystemCoreClockUpdate+0x2c>
 80038b0:	2b08      	cmp	r3, #8
 80038b2:	d00d      	beq.n	80038d0 <SystemCoreClockUpdate+0x30>
 80038b4:	4b14      	ldr	r3, [pc, #80]	; (8003908 <SystemCoreClockUpdate+0x68>)
 80038b6:	600b      	str	r3, [r1, #0]
 80038b8:	4b11      	ldr	r3, [pc, #68]	; (8003900 <SystemCoreClockUpdate+0x60>)
 80038ba:	4a14      	ldr	r2, [pc, #80]	; (800390c <SystemCoreClockUpdate+0x6c>)
 80038bc:	689b      	ldr	r3, [r3, #8]
 80038be:	f3c3 1303 	ubfx	r3, r3, #4, #4
 80038c2:	5cd2      	ldrb	r2, [r2, r3]
 80038c4:	680b      	ldr	r3, [r1, #0]
 80038c6:	40d3      	lsrs	r3, r2
 80038c8:	600b      	str	r3, [r1, #0]
 80038ca:	bd10      	pop	{r4, pc}
 80038cc:	4b10      	ldr	r3, [pc, #64]	; (8003910 <SystemCoreClockUpdate+0x70>)
 80038ce:	e7f2      	b.n	80038b6 <SystemCoreClockUpdate+0x16>
 80038d0:	6854      	ldr	r4, [r2, #4]
 80038d2:	6850      	ldr	r0, [r2, #4]
 80038d4:	6852      	ldr	r2, [r2, #4]
 80038d6:	0263      	lsls	r3, r4, #9
 80038d8:	f3c2 1288 	ubfx	r2, r2, #6, #9
 80038dc:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 80038e0:	bf4c      	ite	mi
 80038e2:	4b0b      	ldrmi	r3, [pc, #44]	; (8003910 <SystemCoreClockUpdate+0x70>)
 80038e4:	4b08      	ldrpl	r3, [pc, #32]	; (8003908 <SystemCoreClockUpdate+0x68>)
 80038e6:	fbb3 f3f0 	udiv	r3, r3, r0
 80038ea:	4353      	muls	r3, r2
 80038ec:	4a04      	ldr	r2, [pc, #16]	; (8003900 <SystemCoreClockUpdate+0x60>)
 80038ee:	6852      	ldr	r2, [r2, #4]
 80038f0:	f3c2 4201 	ubfx	r2, r2, #16, #2
 80038f4:	3201      	adds	r2, #1
 80038f6:	0052      	lsls	r2, r2, #1
 80038f8:	fbb3 f3f2 	udiv	r3, r3, r2
 80038fc:	e7db      	b.n	80038b6 <SystemCoreClockUpdate+0x16>
 80038fe:	bf00      	nop
 8003900:	40023800 	.word	0x40023800
 8003904:	200001b0 	.word	0x200001b0
 8003908:	00f42400 	.word	0x00f42400
 800390c:	080066e4 	.word	0x080066e4
 8003910:	007a1200 	.word	0x007a1200

08003914 <SetSysClock_PLL_HSE>:
 8003914:	b500      	push	{lr}
 8003916:	b08f      	sub	sp, #60	; 0x3c
 8003918:	4b1b      	ldr	r3, [pc, #108]	; (8003988 <SetSysClock_PLL_HSE+0x74>)
 800391a:	2100      	movs	r1, #0
 800391c:	9100      	str	r1, [sp, #0]
 800391e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003920:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8003924:	641a      	str	r2, [r3, #64]	; 0x40
 8003926:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003928:	4a18      	ldr	r2, [pc, #96]	; (800398c <SetSysClock_PLL_HSE+0x78>)
 800392a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800392e:	9300      	str	r3, [sp, #0]
 8003930:	9b00      	ldr	r3, [sp, #0]
 8003932:	9101      	str	r1, [sp, #4]
 8003934:	6813      	ldr	r3, [r2, #0]
 8003936:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 800393a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800393e:	6013      	str	r3, [r2, #0]
 8003940:	6813      	ldr	r3, [r2, #0]
 8003942:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8003946:	9301      	str	r3, [sp, #4]
 8003948:	9b01      	ldr	r3, [sp, #4]
 800394a:	2301      	movs	r3, #1
 800394c:	9302      	str	r3, [sp, #8]
 800394e:	b9b8      	cbnz	r0, 8003980 <SetSysClock_PLL_HSE+0x6c>
 8003950:	9303      	str	r3, [sp, #12]
 8003952:	2302      	movs	r3, #2
 8003954:	9308      	str	r3, [sp, #32]
 8003956:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 800395a:	9309      	str	r3, [sp, #36]	; 0x24
 800395c:	2308      	movs	r3, #8
 800395e:	930a      	str	r3, [sp, #40]	; 0x28
 8003960:	f44f 73a8 	mov.w	r3, #336	; 0x150
 8003964:	930b      	str	r3, [sp, #44]	; 0x2c
 8003966:	2304      	movs	r3, #4
 8003968:	930c      	str	r3, [sp, #48]	; 0x30
 800396a:	a802      	add	r0, sp, #8
 800396c:	2307      	movs	r3, #7
 800396e:	930d      	str	r3, [sp, #52]	; 0x34
 8003970:	f000 fbfa 	bl	8004168 <HAL_RCC_OscConfig>
 8003974:	b930      	cbnz	r0, 8003984 <SetSysClock_PLL_HSE+0x70>
 8003976:	f7ff ff7e 	bl	8003876 <SetSysClock_PLL_HSE.part.0>
 800397a:	b00f      	add	sp, #60	; 0x3c
 800397c:	f85d fb04 	ldr.w	pc, [sp], #4
 8003980:	2305      	movs	r3, #5
 8003982:	e7e5      	b.n	8003950 <SetSysClock_PLL_HSE+0x3c>
 8003984:	2000      	movs	r0, #0
 8003986:	e7f8      	b.n	800397a <SetSysClock_PLL_HSE+0x66>
 8003988:	40023800 	.word	0x40023800
 800398c:	40007000 	.word	0x40007000

08003990 <SetSysClock_PLL_HSI>:
 8003990:	b510      	push	{r4, lr}
 8003992:	b08e      	sub	sp, #56	; 0x38
 8003994:	2400      	movs	r4, #0
 8003996:	4b1a      	ldr	r3, [pc, #104]	; (8003a00 <SetSysClock_PLL_HSI+0x70>)
 8003998:	9400      	str	r4, [sp, #0]
 800399a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800399c:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80039a0:	641a      	str	r2, [r3, #64]	; 0x40
 80039a2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80039a4:	4a17      	ldr	r2, [pc, #92]	; (8003a04 <SetSysClock_PLL_HSI+0x74>)
 80039a6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80039aa:	9300      	str	r3, [sp, #0]
 80039ac:	9b00      	ldr	r3, [sp, #0]
 80039ae:	9401      	str	r4, [sp, #4]
 80039b0:	6813      	ldr	r3, [r2, #0]
 80039b2:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 80039b6:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80039ba:	6013      	str	r3, [r2, #0]
 80039bc:	6813      	ldr	r3, [r2, #0]
 80039be:	9403      	str	r4, [sp, #12]
 80039c0:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80039c4:	9301      	str	r3, [sp, #4]
 80039c6:	9b01      	ldr	r3, [sp, #4]
 80039c8:	9409      	str	r4, [sp, #36]	; 0x24
 80039ca:	2303      	movs	r3, #3
 80039cc:	9302      	str	r3, [sp, #8]
 80039ce:	2301      	movs	r3, #1
 80039d0:	9305      	str	r3, [sp, #20]
 80039d2:	2310      	movs	r3, #16
 80039d4:	9306      	str	r3, [sp, #24]
 80039d6:	930a      	str	r3, [sp, #40]	; 0x28
 80039d8:	f44f 73a8 	mov.w	r3, #336	; 0x150
 80039dc:	930b      	str	r3, [sp, #44]	; 0x2c
 80039de:	2304      	movs	r3, #4
 80039e0:	2202      	movs	r2, #2
 80039e2:	930c      	str	r3, [sp, #48]	; 0x30
 80039e4:	a802      	add	r0, sp, #8
 80039e6:	2307      	movs	r3, #7
 80039e8:	9208      	str	r2, [sp, #32]
 80039ea:	930d      	str	r3, [sp, #52]	; 0x34
 80039ec:	f000 fbbc 	bl	8004168 <HAL_RCC_OscConfig>
 80039f0:	b918      	cbnz	r0, 80039fa <SetSysClock_PLL_HSI+0x6a>
 80039f2:	f7ff ff40 	bl	8003876 <SetSysClock_PLL_HSE.part.0>
 80039f6:	b00e      	add	sp, #56	; 0x38
 80039f8:	bd10      	pop	{r4, pc}
 80039fa:	4620      	mov	r0, r4
 80039fc:	e7fb      	b.n	80039f6 <SetSysClock_PLL_HSI+0x66>
 80039fe:	bf00      	nop
 8003a00:	40023800 	.word	0x40023800
 8003a04:	40007000 	.word	0x40007000

08003a08 <SetSysClock>:
 8003a08:	b508      	push	{r3, lr}
 8003a0a:	2001      	movs	r0, #1
 8003a0c:	f7ff ff82 	bl	8003914 <SetSysClock_PLL_HSE>
 8003a10:	b930      	cbnz	r0, 8003a20 <SetSysClock+0x18>
 8003a12:	f7ff ff7f 	bl	8003914 <SetSysClock_PLL_HSE>
 8003a16:	b918      	cbnz	r0, 8003a20 <SetSysClock+0x18>
 8003a18:	f7ff ffba 	bl	8003990 <SetSysClock_PLL_HSI>
 8003a1c:	b900      	cbnz	r0, 8003a20 <SetSysClock+0x18>
 8003a1e:	e7fe      	b.n	8003a1e <SetSysClock+0x16>
 8003a20:	bd08      	pop	{r3, pc}
	...

08003a24 <SystemInit>:
 8003a24:	4a17      	ldr	r2, [pc, #92]	; (8003a84 <SystemInit+0x60>)
 8003a26:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 8003a2a:	b510      	push	{r4, lr}
 8003a2c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8003a30:	4c15      	ldr	r4, [pc, #84]	; (8003a88 <SystemInit+0x64>)
 8003a32:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8003a36:	6823      	ldr	r3, [r4, #0]
 8003a38:	2100      	movs	r1, #0
 8003a3a:	f043 0301 	orr.w	r3, r3, #1
 8003a3e:	6023      	str	r3, [r4, #0]
 8003a40:	60a1      	str	r1, [r4, #8]
 8003a42:	6823      	ldr	r3, [r4, #0]
 8003a44:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 8003a48:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8003a4c:	6023      	str	r3, [r4, #0]
 8003a4e:	4b0f      	ldr	r3, [pc, #60]	; (8003a8c <SystemInit+0x68>)
 8003a50:	6063      	str	r3, [r4, #4]
 8003a52:	6823      	ldr	r3, [r4, #0]
 8003a54:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8003a58:	6023      	str	r3, [r4, #0]
 8003a5a:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8003a5e:	60e1      	str	r1, [r4, #12]
 8003a60:	6093      	str	r3, [r2, #8]
 8003a62:	4b0b      	ldr	r3, [pc, #44]	; (8003a90 <SystemInit+0x6c>)
 8003a64:	4a0b      	ldr	r2, [pc, #44]	; (8003a94 <SystemInit+0x70>)
 8003a66:	601a      	str	r2, [r3, #0]
 8003a68:	f000 f854 	bl	8003b14 <HAL_Init>
 8003a6c:	f7ff ffcc 	bl	8003a08 <SetSysClock>
 8003a70:	6a23      	ldr	r3, [r4, #32]
 8003a72:	f043 0308 	orr.w	r3, r3, #8
 8003a76:	6223      	str	r3, [r4, #32]
 8003a78:	6a23      	ldr	r3, [r4, #32]
 8003a7a:	f023 0308 	bic.w	r3, r3, #8
 8003a7e:	6223      	str	r3, [r4, #32]
 8003a80:	bd10      	pop	{r4, pc}
 8003a82:	bf00      	nop
 8003a84:	e000ed00 	.word	0xe000ed00
 8003a88:	40023800 	.word	0x40023800
 8003a8c:	24003010 	.word	0x24003010
 8003a90:	200001b0 	.word	0x200001b0
 8003a94:	00f42400 	.word	0x00f42400

08003a98 <__NVIC_SetVector>:
 8003a98:	b530      	push	{r4, r5, lr}
 8003a9a:	4c0c      	ldr	r4, [pc, #48]	; (8003acc <__NVIC_SetVector+0x34>)
 8003a9c:	68a2      	ldr	r2, [r4, #8]
 8003a9e:	68a4      	ldr	r4, [r4, #8]
 8003aa0:	f1b4 6f00 	cmp.w	r4, #134217728	; 0x8000000
 8003aa4:	4613      	mov	r3, r2
 8003aa6:	d10c      	bne.n	8003ac2 <__NVIC_SetVector+0x2a>
 8003aa8:	1f13      	subs	r3, r2, #4
 8003aaa:	4c09      	ldr	r4, [pc, #36]	; (8003ad0 <__NVIC_SetVector+0x38>)
 8003aac:	4a09      	ldr	r2, [pc, #36]	; (8003ad4 <__NVIC_SetVector+0x3c>)
 8003aae:	f853 5f04 	ldr.w	r5, [r3, #4]!
 8003ab2:	f842 5f04 	str.w	r5, [r2, #4]!
 8003ab6:	42a2      	cmp	r2, r4
 8003ab8:	d1f9      	bne.n	8003aae <__NVIC_SetVector+0x16>
 8003aba:	4a04      	ldr	r2, [pc, #16]	; (8003acc <__NVIC_SetVector+0x34>)
 8003abc:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
 8003ac0:	6093      	str	r3, [r2, #8]
 8003ac2:	3010      	adds	r0, #16
 8003ac4:	f843 1020 	str.w	r1, [r3, r0, lsl #2]
 8003ac8:	bd30      	pop	{r4, r5, pc}
 8003aca:	bf00      	nop
 8003acc:	e000ed00 	.word	0xe000ed00
 8003ad0:	20000190 	.word	0x20000190
 8003ad4:	1ffffffc 	.word	0x1ffffffc

08003ad8 <TIM_CCxNChannelCmd>:
 8003ad8:	6a03      	ldr	r3, [r0, #32]
 8003ada:	b510      	push	{r4, lr}
 8003adc:	2404      	movs	r4, #4
 8003ade:	408c      	lsls	r4, r1
 8003ae0:	ea23 0304 	bic.w	r3, r3, r4
 8003ae4:	6203      	str	r3, [r0, #32]
 8003ae6:	6a03      	ldr	r3, [r0, #32]
 8003ae8:	408a      	lsls	r2, r1
 8003aea:	431a      	orrs	r2, r3
 8003aec:	6202      	str	r2, [r0, #32]
 8003aee:	bd10      	pop	{r4, pc}

08003af0 <HAL_TIMEx_PWMN_Start>:
 8003af0:	b510      	push	{r4, lr}
 8003af2:	4604      	mov	r4, r0
 8003af4:	2204      	movs	r2, #4
 8003af6:	6800      	ldr	r0, [r0, #0]
 8003af8:	f7ff ffee 	bl	8003ad8 <TIM_CCxNChannelCmd>
 8003afc:	6823      	ldr	r3, [r4, #0]
 8003afe:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8003b00:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8003b04:	645a      	str	r2, [r3, #68]	; 0x44
 8003b06:	681a      	ldr	r2, [r3, #0]
 8003b08:	f042 0201 	orr.w	r2, r2, #1
 8003b0c:	601a      	str	r2, [r3, #0]
 8003b0e:	2000      	movs	r0, #0
 8003b10:	bd10      	pop	{r4, pc}
	...

08003b14 <HAL_Init>:
 8003b14:	b508      	push	{r3, lr}
 8003b16:	4b0a      	ldr	r3, [pc, #40]	; (8003b40 <HAL_Init+0x2c>)
 8003b18:	681a      	ldr	r2, [r3, #0]
 8003b1a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8003b1e:	601a      	str	r2, [r3, #0]
 8003b20:	681a      	ldr	r2, [r3, #0]
 8003b22:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8003b26:	601a      	str	r2, [r3, #0]
 8003b28:	681a      	ldr	r2, [r3, #0]
 8003b2a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003b2e:	601a      	str	r2, [r3, #0]
 8003b30:	200f      	movs	r0, #15
 8003b32:	f7ff f8ab 	bl	8002c8c <HAL_InitTick>
 8003b36:	f000 f813 	bl	8003b60 <HAL_MspInit>
 8003b3a:	2000      	movs	r0, #0
 8003b3c:	bd08      	pop	{r3, pc}
 8003b3e:	bf00      	nop
 8003b40:	40023c00 	.word	0x40023c00

08003b44 <HAL_IncTick>:
 8003b44:	4a02      	ldr	r2, [pc, #8]	; (8003b50 <HAL_IncTick+0xc>)
 8003b46:	6813      	ldr	r3, [r2, #0]
 8003b48:	3301      	adds	r3, #1
 8003b4a:	6013      	str	r3, [r2, #0]
 8003b4c:	4770      	bx	lr
 8003b4e:	bf00      	nop
 8003b50:	20002998 	.word	0x20002998

08003b54 <HAL_GetTick>:
 8003b54:	4b01      	ldr	r3, [pc, #4]	; (8003b5c <HAL_GetTick+0x8>)
 8003b56:	6818      	ldr	r0, [r3, #0]
 8003b58:	4770      	bx	lr
 8003b5a:	bf00      	nop
 8003b5c:	20002998 	.word	0x20002998

08003b60 <HAL_MspInit>:
 8003b60:	4770      	bx	lr
	...

08003b64 <UART_SetConfig>:
 8003b64:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8003b68:	6806      	ldr	r6, [r0, #0]
 8003b6a:	68c2      	ldr	r2, [r0, #12]
 8003b6c:	6933      	ldr	r3, [r6, #16]
 8003b6e:	69c1      	ldr	r1, [r0, #28]
 8003b70:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8003b74:	4313      	orrs	r3, r2
 8003b76:	6133      	str	r3, [r6, #16]
 8003b78:	4604      	mov	r4, r0
 8003b7a:	6883      	ldr	r3, [r0, #8]
 8003b7c:	6900      	ldr	r0, [r0, #16]
 8003b7e:	68f2      	ldr	r2, [r6, #12]
 8003b80:	4303      	orrs	r3, r0
 8003b82:	6960      	ldr	r0, [r4, #20]
 8003b84:	f422 4216 	bic.w	r2, r2, #38400	; 0x9600
 8003b88:	4303      	orrs	r3, r0
 8003b8a:	f022 020c 	bic.w	r2, r2, #12
 8003b8e:	430b      	orrs	r3, r1
 8003b90:	4313      	orrs	r3, r2
 8003b92:	60f3      	str	r3, [r6, #12]
 8003b94:	6973      	ldr	r3, [r6, #20]
 8003b96:	69a2      	ldr	r2, [r4, #24]
 8003b98:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8003b9c:	4313      	orrs	r3, r2
 8003b9e:	f5b1 4f00 	cmp.w	r1, #32768	; 0x8000
 8003ba2:	6173      	str	r3, [r6, #20]
 8003ba4:	4b7a      	ldr	r3, [pc, #488]	; (8003d90 <UART_SetConfig+0x22c>)
 8003ba6:	d17c      	bne.n	8003ca2 <UART_SetConfig+0x13e>
 8003ba8:	429e      	cmp	r6, r3
 8003baa:	d003      	beq.n	8003bb4 <UART_SetConfig+0x50>
 8003bac:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8003bb0:	429e      	cmp	r6, r3
 8003bb2:	d144      	bne.n	8003c3e <UART_SetConfig+0xda>
 8003bb4:	f000 fd50 	bl	8004658 <HAL_RCC_GetPCLK2Freq>
 8003bb8:	2519      	movs	r5, #25
 8003bba:	fb05 f300 	mul.w	r3, r5, r0
 8003bbe:	6860      	ldr	r0, [r4, #4]
 8003bc0:	f04f 0964 	mov.w	r9, #100	; 0x64
 8003bc4:	0040      	lsls	r0, r0, #1
 8003bc6:	fbb3 f3f0 	udiv	r3, r3, r0
 8003bca:	fbb3 f3f9 	udiv	r3, r3, r9
 8003bce:	ea4f 1803 	mov.w	r8, r3, lsl #4
 8003bd2:	f000 fd41 	bl	8004658 <HAL_RCC_GetPCLK2Freq>
 8003bd6:	6863      	ldr	r3, [r4, #4]
 8003bd8:	4368      	muls	r0, r5
 8003bda:	005b      	lsls	r3, r3, #1
 8003bdc:	fbb0 f7f3 	udiv	r7, r0, r3
 8003be0:	f000 fd3a 	bl	8004658 <HAL_RCC_GetPCLK2Freq>
 8003be4:	6863      	ldr	r3, [r4, #4]
 8003be6:	4368      	muls	r0, r5
 8003be8:	005b      	lsls	r3, r3, #1
 8003bea:	fbb0 f3f3 	udiv	r3, r0, r3
 8003bee:	fbb3 f3f9 	udiv	r3, r3, r9
 8003bf2:	fb09 7313 	mls	r3, r9, r3, r7
 8003bf6:	00db      	lsls	r3, r3, #3
 8003bf8:	3332      	adds	r3, #50	; 0x32
 8003bfa:	fbb3 f3f9 	udiv	r3, r3, r9
 8003bfe:	005b      	lsls	r3, r3, #1
 8003c00:	f403 77f8 	and.w	r7, r3, #496	; 0x1f0
 8003c04:	f000 fd28 	bl	8004658 <HAL_RCC_GetPCLK2Freq>
 8003c08:	6862      	ldr	r2, [r4, #4]
 8003c0a:	4368      	muls	r0, r5
 8003c0c:	0052      	lsls	r2, r2, #1
 8003c0e:	fbb0 faf2 	udiv	r10, r0, r2
 8003c12:	f000 fd21 	bl	8004658 <HAL_RCC_GetPCLK2Freq>
 8003c16:	6863      	ldr	r3, [r4, #4]
 8003c18:	4368      	muls	r0, r5
 8003c1a:	005b      	lsls	r3, r3, #1
 8003c1c:	fbb0 f3f3 	udiv	r3, r0, r3
 8003c20:	fbb3 f3f9 	udiv	r3, r3, r9
 8003c24:	fb09 a313 	mls	r3, r9, r3, r10
 8003c28:	00db      	lsls	r3, r3, #3
 8003c2a:	3332      	adds	r3, #50	; 0x32
 8003c2c:	fbb3 f3f9 	udiv	r3, r3, r9
 8003c30:	f003 0307 	and.w	r3, r3, #7
 8003c34:	4443      	add	r3, r8
 8003c36:	443b      	add	r3, r7
 8003c38:	60b3      	str	r3, [r6, #8]
 8003c3a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8003c3e:	f000 fcf3 	bl	8004628 <HAL_RCC_GetPCLK1Freq>
 8003c42:	2519      	movs	r5, #25
 8003c44:	fb05 f300 	mul.w	r3, r5, r0
 8003c48:	6860      	ldr	r0, [r4, #4]
 8003c4a:	f04f 0964 	mov.w	r9, #100	; 0x64
 8003c4e:	0040      	lsls	r0, r0, #1
 8003c50:	fbb3 f3f0 	udiv	r3, r3, r0
 8003c54:	fbb3 f3f9 	udiv	r3, r3, r9
 8003c58:	ea4f 1803 	mov.w	r8, r3, lsl #4
 8003c5c:	f000 fce4 	bl	8004628 <HAL_RCC_GetPCLK1Freq>
 8003c60:	6863      	ldr	r3, [r4, #4]
 8003c62:	4368      	muls	r0, r5
 8003c64:	005b      	lsls	r3, r3, #1
 8003c66:	fbb0 f7f3 	udiv	r7, r0, r3
 8003c6a:	f000 fcdd 	bl	8004628 <HAL_RCC_GetPCLK1Freq>
 8003c6e:	6863      	ldr	r3, [r4, #4]
 8003c70:	4368      	muls	r0, r5
 8003c72:	005b      	lsls	r3, r3, #1
 8003c74:	fbb0 f3f3 	udiv	r3, r0, r3
 8003c78:	fbb3 f3f9 	udiv	r3, r3, r9
 8003c7c:	fb09 7313 	mls	r3, r9, r3, r7
 8003c80:	00db      	lsls	r3, r3, #3
 8003c82:	3332      	adds	r3, #50	; 0x32
 8003c84:	fbb3 f3f9 	udiv	r3, r3, r9
 8003c88:	005b      	lsls	r3, r3, #1
 8003c8a:	f403 77f8 	and.w	r7, r3, #496	; 0x1f0
 8003c8e:	f000 fccb 	bl	8004628 <HAL_RCC_GetPCLK1Freq>
 8003c92:	6862      	ldr	r2, [r4, #4]
 8003c94:	4368      	muls	r0, r5
 8003c96:	0052      	lsls	r2, r2, #1
 8003c98:	fbb0 faf2 	udiv	r10, r0, r2
 8003c9c:	f000 fcc4 	bl	8004628 <HAL_RCC_GetPCLK1Freq>
 8003ca0:	e7b9      	b.n	8003c16 <UART_SetConfig+0xb2>
 8003ca2:	429e      	cmp	r6, r3
 8003ca4:	d002      	beq.n	8003cac <UART_SetConfig+0x148>
 8003ca6:	4b3b      	ldr	r3, [pc, #236]	; (8003d94 <UART_SetConfig+0x230>)
 8003ca8:	429e      	cmp	r6, r3
 8003caa:	d140      	bne.n	8003d2e <UART_SetConfig+0x1ca>
 8003cac:	f000 fcd4 	bl	8004658 <HAL_RCC_GetPCLK2Freq>
 8003cb0:	6867      	ldr	r7, [r4, #4]
 8003cb2:	2519      	movs	r5, #25
 8003cb4:	f04f 0964 	mov.w	r9, #100	; 0x64
 8003cb8:	fb05 f300 	mul.w	r3, r5, r0
 8003cbc:	00bf      	lsls	r7, r7, #2
 8003cbe:	fbb3 f3f7 	udiv	r3, r3, r7
 8003cc2:	fbb3 f3f9 	udiv	r3, r3, r9
 8003cc6:	011f      	lsls	r7, r3, #4
 8003cc8:	f000 fcc6 	bl	8004658 <HAL_RCC_GetPCLK2Freq>
 8003ccc:	6863      	ldr	r3, [r4, #4]
 8003cce:	4368      	muls	r0, r5
 8003cd0:	009b      	lsls	r3, r3, #2
 8003cd2:	fbb0 f8f3 	udiv	r8, r0, r3
 8003cd6:	f000 fcbf 	bl	8004658 <HAL_RCC_GetPCLK2Freq>
 8003cda:	6863      	ldr	r3, [r4, #4]
 8003cdc:	4368      	muls	r0, r5
 8003cde:	009b      	lsls	r3, r3, #2
 8003ce0:	fbb0 f3f3 	udiv	r3, r0, r3
 8003ce4:	fbb3 f3f9 	udiv	r3, r3, r9
 8003ce8:	fb09 8313 	mls	r3, r9, r3, r8
 8003cec:	011b      	lsls	r3, r3, #4
 8003cee:	3332      	adds	r3, #50	; 0x32
 8003cf0:	fbb3 f3f9 	udiv	r3, r3, r9
 8003cf4:	f003 08f0 	and.w	r8, r3, #240	; 0xf0
 8003cf8:	f000 fcae 	bl	8004658 <HAL_RCC_GetPCLK2Freq>
 8003cfc:	6862      	ldr	r2, [r4, #4]
 8003cfe:	4368      	muls	r0, r5
 8003d00:	0092      	lsls	r2, r2, #2
 8003d02:	fbb0 faf2 	udiv	r10, r0, r2
 8003d06:	f000 fca7 	bl	8004658 <HAL_RCC_GetPCLK2Freq>
 8003d0a:	6863      	ldr	r3, [r4, #4]
 8003d0c:	4368      	muls	r0, r5
 8003d0e:	009b      	lsls	r3, r3, #2
 8003d10:	fbb0 f3f3 	udiv	r3, r0, r3
 8003d14:	fbb3 f3f9 	udiv	r3, r3, r9
 8003d18:	fb09 a313 	mls	r3, r9, r3, r10
 8003d1c:	011b      	lsls	r3, r3, #4
 8003d1e:	3332      	adds	r3, #50	; 0x32
 8003d20:	fbb3 f3f9 	udiv	r3, r3, r9
 8003d24:	f003 030f 	and.w	r3, r3, #15
 8003d28:	ea43 0308 	orr.w	r3, r3, r8
 8003d2c:	e783      	b.n	8003c36 <UART_SetConfig+0xd2>
 8003d2e:	f000 fc7b 	bl	8004628 <HAL_RCC_GetPCLK1Freq>
 8003d32:	6867      	ldr	r7, [r4, #4]
 8003d34:	2519      	movs	r5, #25
 8003d36:	f04f 0964 	mov.w	r9, #100	; 0x64
 8003d3a:	fb05 f300 	mul.w	r3, r5, r0
 8003d3e:	00bf      	lsls	r7, r7, #2
 8003d40:	fbb3 f3f7 	udiv	r3, r3, r7
 8003d44:	fbb3 f3f9 	udiv	r3, r3, r9
 8003d48:	011f      	lsls	r7, r3, #4
 8003d4a:	f000 fc6d 	bl	8004628 <HAL_RCC_GetPCLK1Freq>
 8003d4e:	6863      	ldr	r3, [r4, #4]
 8003d50:	4368      	muls	r0, r5
 8003d52:	009b      	lsls	r3, r3, #2
 8003d54:	fbb0 f8f3 	udiv	r8, r0, r3
 8003d58:	f000 fc66 	bl	8004628 <HAL_RCC_GetPCLK1Freq>
 8003d5c:	6863      	ldr	r3, [r4, #4]
 8003d5e:	4368      	muls	r0, r5
 8003d60:	009b      	lsls	r3, r3, #2
 8003d62:	fbb0 f3f3 	udiv	r3, r0, r3
 8003d66:	fbb3 f3f9 	udiv	r3, r3, r9
 8003d6a:	fb09 8313 	mls	r3, r9, r3, r8
 8003d6e:	011b      	lsls	r3, r3, #4
 8003d70:	3332      	adds	r3, #50	; 0x32
 8003d72:	fbb3 f3f9 	udiv	r3, r3, r9
 8003d76:	f003 08f0 	and.w	r8, r3, #240	; 0xf0
 8003d7a:	f000 fc55 	bl	8004628 <HAL_RCC_GetPCLK1Freq>
 8003d7e:	6862      	ldr	r2, [r4, #4]
 8003d80:	4368      	muls	r0, r5
 8003d82:	0092      	lsls	r2, r2, #2
 8003d84:	fbb0 faf2 	udiv	r10, r0, r2
 8003d88:	f000 fc4e 	bl	8004628 <HAL_RCC_GetPCLK1Freq>
 8003d8c:	e7bd      	b.n	8003d0a <UART_SetConfig+0x1a6>
 8003d8e:	bf00      	nop
 8003d90:	40011000 	.word	0x40011000
 8003d94:	40011400 	.word	0x40011400

08003d98 <HAL_UART_MspInit>:
 8003d98:	4770      	bx	lr

08003d9a <HAL_UART_Init>:
 8003d9a:	b510      	push	{r4, lr}
 8003d9c:	4604      	mov	r4, r0
 8003d9e:	b340      	cbz	r0, 8003df2 <HAL_UART_Init+0x58>
 8003da0:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8003da4:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8003da8:	b91b      	cbnz	r3, 8003db2 <HAL_UART_Init+0x18>
 8003daa:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
 8003dae:	f7ff fff3 	bl	8003d98 <HAL_UART_MspInit>
 8003db2:	6822      	ldr	r2, [r4, #0]
 8003db4:	2324      	movs	r3, #36	; 0x24
 8003db6:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8003dba:	68d3      	ldr	r3, [r2, #12]
 8003dbc:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8003dc0:	60d3      	str	r3, [r2, #12]
 8003dc2:	4620      	mov	r0, r4
 8003dc4:	f7ff fece 	bl	8003b64 <UART_SetConfig>
 8003dc8:	6823      	ldr	r3, [r4, #0]
 8003dca:	691a      	ldr	r2, [r3, #16]
 8003dcc:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8003dd0:	611a      	str	r2, [r3, #16]
 8003dd2:	695a      	ldr	r2, [r3, #20]
 8003dd4:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8003dd8:	615a      	str	r2, [r3, #20]
 8003dda:	68da      	ldr	r2, [r3, #12]
 8003ddc:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8003de0:	60da      	str	r2, [r3, #12]
 8003de2:	2000      	movs	r0, #0
 8003de4:	2320      	movs	r3, #32
 8003de6:	63e0      	str	r0, [r4, #60]	; 0x3c
 8003de8:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8003dec:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
 8003df0:	bd10      	pop	{r4, pc}
 8003df2:	2001      	movs	r0, #1
 8003df4:	bd10      	pop	{r4, pc}
	...

08003df8 <TIM_OC1_SetConfig>:
 8003df8:	6a03      	ldr	r3, [r0, #32]
 8003dfa:	f023 0301 	bic.w	r3, r3, #1
 8003dfe:	6203      	str	r3, [r0, #32]
 8003e00:	6a03      	ldr	r3, [r0, #32]
 8003e02:	b570      	push	{r4, r5, r6, lr}
 8003e04:	6844      	ldr	r4, [r0, #4]
 8003e06:	6982      	ldr	r2, [r0, #24]
 8003e08:	680d      	ldr	r5, [r1, #0]
 8003e0a:	f022 0273 	bic.w	r2, r2, #115	; 0x73
 8003e0e:	432a      	orrs	r2, r5
 8003e10:	688d      	ldr	r5, [r1, #8]
 8003e12:	f023 0302 	bic.w	r3, r3, #2
 8003e16:	432b      	orrs	r3, r5
 8003e18:	4d0a      	ldr	r5, [pc, #40]	; (8003e44 <TIM_OC1_SetConfig+0x4c>)
 8003e1a:	42a8      	cmp	r0, r5
 8003e1c:	d10b      	bne.n	8003e36 <TIM_OC1_SetConfig+0x3e>
 8003e1e:	68cd      	ldr	r5, [r1, #12]
 8003e20:	698e      	ldr	r6, [r1, #24]
 8003e22:	f023 0308 	bic.w	r3, r3, #8
 8003e26:	432b      	orrs	r3, r5
 8003e28:	694d      	ldr	r5, [r1, #20]
 8003e2a:	f424 7440 	bic.w	r4, r4, #768	; 0x300
 8003e2e:	4335      	orrs	r5, r6
 8003e30:	f023 0304 	bic.w	r3, r3, #4
 8003e34:	432c      	orrs	r4, r5
 8003e36:	6044      	str	r4, [r0, #4]
 8003e38:	6182      	str	r2, [r0, #24]
 8003e3a:	684a      	ldr	r2, [r1, #4]
 8003e3c:	6342      	str	r2, [r0, #52]	; 0x34
 8003e3e:	6203      	str	r3, [r0, #32]
 8003e40:	bd70      	pop	{r4, r5, r6, pc}
 8003e42:	bf00      	nop
 8003e44:	40010000 	.word	0x40010000

08003e48 <TIM_OC3_SetConfig>:
 8003e48:	6a03      	ldr	r3, [r0, #32]
 8003e4a:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8003e4e:	6203      	str	r3, [r0, #32]
 8003e50:	6a03      	ldr	r3, [r0, #32]
 8003e52:	b570      	push	{r4, r5, r6, lr}
 8003e54:	6844      	ldr	r4, [r0, #4]
 8003e56:	69c2      	ldr	r2, [r0, #28]
 8003e58:	680d      	ldr	r5, [r1, #0]
 8003e5a:	f022 0273 	bic.w	r2, r2, #115	; 0x73
 8003e5e:	432a      	orrs	r2, r5
 8003e60:	688d      	ldr	r5, [r1, #8]
 8003e62:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8003e66:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 8003e6a:	4d0b      	ldr	r5, [pc, #44]	; (8003e98 <TIM_OC3_SetConfig+0x50>)
 8003e6c:	42a8      	cmp	r0, r5
 8003e6e:	d10d      	bne.n	8003e8c <TIM_OC3_SetConfig+0x44>
 8003e70:	68cd      	ldr	r5, [r1, #12]
 8003e72:	698e      	ldr	r6, [r1, #24]
 8003e74:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8003e78:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
 8003e7c:	694d      	ldr	r5, [r1, #20]
 8003e7e:	f424 5440 	bic.w	r4, r4, #12288	; 0x3000
 8003e82:	4335      	orrs	r5, r6
 8003e84:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8003e88:	ea44 1405 	orr.w	r4, r4, r5, lsl #4
 8003e8c:	6044      	str	r4, [r0, #4]
 8003e8e:	61c2      	str	r2, [r0, #28]
 8003e90:	684a      	ldr	r2, [r1, #4]
 8003e92:	63c2      	str	r2, [r0, #60]	; 0x3c
 8003e94:	6203      	str	r3, [r0, #32]
 8003e96:	bd70      	pop	{r4, r5, r6, pc}
 8003e98:	40010000 	.word	0x40010000

08003e9c <TIM_OC4_SetConfig>:
 8003e9c:	6a03      	ldr	r3, [r0, #32]
 8003e9e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8003ea2:	6203      	str	r3, [r0, #32]
 8003ea4:	6a03      	ldr	r3, [r0, #32]
 8003ea6:	b530      	push	{r4, r5, lr}
 8003ea8:	6844      	ldr	r4, [r0, #4]
 8003eaa:	69c2      	ldr	r2, [r0, #28]
 8003eac:	680d      	ldr	r5, [r1, #0]
 8003eae:	f422 42e6 	bic.w	r2, r2, #29440	; 0x7300
 8003eb2:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 8003eb6:	688d      	ldr	r5, [r1, #8]
 8003eb8:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8003ebc:	ea43 3305 	orr.w	r3, r3, r5, lsl #12
 8003ec0:	4d06      	ldr	r5, [pc, #24]	; (8003edc <TIM_OC4_SetConfig+0x40>)
 8003ec2:	42a8      	cmp	r0, r5
 8003ec4:	bf02      	ittt	eq
 8003ec6:	694d      	ldreq	r5, [r1, #20]
 8003ec8:	f424 4480 	biceq.w	r4, r4, #16384	; 0x4000
 8003ecc:	ea44 1485 	orreq.w	r4, r4, r5, lsl #6
 8003ed0:	6044      	str	r4, [r0, #4]
 8003ed2:	61c2      	str	r2, [r0, #28]
 8003ed4:	684a      	ldr	r2, [r1, #4]
 8003ed6:	6402      	str	r2, [r0, #64]	; 0x40
 8003ed8:	6203      	str	r3, [r0, #32]
 8003eda:	bd30      	pop	{r4, r5, pc}
 8003edc:	40010000 	.word	0x40010000

08003ee0 <HAL_TIM_OC_MspInit>:
 8003ee0:	4770      	bx	lr

08003ee2 <HAL_TIM_PWM_MspInit>:
 8003ee2:	4770      	bx	lr

08003ee4 <TIM_Base_SetConfig>:
 8003ee4:	4a22      	ldr	r2, [pc, #136]	; (8003f70 <TIM_Base_SetConfig+0x8c>)
 8003ee6:	6803      	ldr	r3, [r0, #0]
 8003ee8:	4290      	cmp	r0, r2
 8003eea:	d00e      	beq.n	8003f0a <TIM_Base_SetConfig+0x26>
 8003eec:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8003ef0:	d00b      	beq.n	8003f0a <TIM_Base_SetConfig+0x26>
 8003ef2:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8003ef6:	4290      	cmp	r0, r2
 8003ef8:	d007      	beq.n	8003f0a <TIM_Base_SetConfig+0x26>
 8003efa:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8003efe:	4290      	cmp	r0, r2
 8003f00:	d003      	beq.n	8003f0a <TIM_Base_SetConfig+0x26>
 8003f02:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8003f06:	4290      	cmp	r0, r2
 8003f08:	d119      	bne.n	8003f3e <TIM_Base_SetConfig+0x5a>
 8003f0a:	684a      	ldr	r2, [r1, #4]
 8003f0c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003f10:	4313      	orrs	r3, r2
 8003f12:	4a17      	ldr	r2, [pc, #92]	; (8003f70 <TIM_Base_SetConfig+0x8c>)
 8003f14:	4290      	cmp	r0, r2
 8003f16:	d104      	bne.n	8003f22 <TIM_Base_SetConfig+0x3e>
 8003f18:	68ca      	ldr	r2, [r1, #12]
 8003f1a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8003f1e:	4313      	orrs	r3, r2
 8003f20:	e018      	b.n	8003f54 <TIM_Base_SetConfig+0x70>
 8003f22:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8003f26:	d0f7      	beq.n	8003f18 <TIM_Base_SetConfig+0x34>
 8003f28:	4a12      	ldr	r2, [pc, #72]	; (8003f74 <TIM_Base_SetConfig+0x90>)
 8003f2a:	4290      	cmp	r0, r2
 8003f2c:	d0f4      	beq.n	8003f18 <TIM_Base_SetConfig+0x34>
 8003f2e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8003f32:	4290      	cmp	r0, r2
 8003f34:	d0f0      	beq.n	8003f18 <TIM_Base_SetConfig+0x34>
 8003f36:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8003f3a:	4290      	cmp	r0, r2
 8003f3c:	d0ec      	beq.n	8003f18 <TIM_Base_SetConfig+0x34>
 8003f3e:	4a0e      	ldr	r2, [pc, #56]	; (8003f78 <TIM_Base_SetConfig+0x94>)
 8003f40:	4290      	cmp	r0, r2
 8003f42:	d0e9      	beq.n	8003f18 <TIM_Base_SetConfig+0x34>
 8003f44:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8003f48:	4290      	cmp	r0, r2
 8003f4a:	d0e5      	beq.n	8003f18 <TIM_Base_SetConfig+0x34>
 8003f4c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8003f50:	4290      	cmp	r0, r2
 8003f52:	d0e1      	beq.n	8003f18 <TIM_Base_SetConfig+0x34>
 8003f54:	6003      	str	r3, [r0, #0]
 8003f56:	688b      	ldr	r3, [r1, #8]
 8003f58:	62c3      	str	r3, [r0, #44]	; 0x2c
 8003f5a:	680b      	ldr	r3, [r1, #0]
 8003f5c:	6283      	str	r3, [r0, #40]	; 0x28
 8003f5e:	4b04      	ldr	r3, [pc, #16]	; (8003f70 <TIM_Base_SetConfig+0x8c>)
 8003f60:	4298      	cmp	r0, r3
 8003f62:	bf04      	itt	eq
 8003f64:	690b      	ldreq	r3, [r1, #16]
 8003f66:	6303      	streq	r3, [r0, #48]	; 0x30
 8003f68:	2301      	movs	r3, #1
 8003f6a:	6143      	str	r3, [r0, #20]
 8003f6c:	4770      	bx	lr
 8003f6e:	bf00      	nop
 8003f70:	40010000 	.word	0x40010000
 8003f74:	40000400 	.word	0x40000400
 8003f78:	40014000 	.word	0x40014000

08003f7c <HAL_TIM_OC_Init>:
 8003f7c:	b510      	push	{r4, lr}
 8003f7e:	4604      	mov	r4, r0
 8003f80:	b1a0      	cbz	r0, 8003fac <HAL_TIM_OC_Init+0x30>
 8003f82:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8003f86:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8003f8a:	b91b      	cbnz	r3, 8003f94 <HAL_TIM_OC_Init+0x18>
 8003f8c:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
 8003f90:	f7ff ffa6 	bl	8003ee0 <HAL_TIM_OC_MspInit>
 8003f94:	2302      	movs	r3, #2
 8003f96:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8003f9a:	6820      	ldr	r0, [r4, #0]
 8003f9c:	1d21      	adds	r1, r4, #4
 8003f9e:	f7ff ffa1 	bl	8003ee4 <TIM_Base_SetConfig>
 8003fa2:	2301      	movs	r3, #1
 8003fa4:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8003fa8:	2000      	movs	r0, #0
 8003faa:	bd10      	pop	{r4, pc}
 8003fac:	2001      	movs	r0, #1
 8003fae:	bd10      	pop	{r4, pc}

08003fb0 <HAL_TIM_PWM_Init>:
 8003fb0:	b510      	push	{r4, lr}
 8003fb2:	4604      	mov	r4, r0
 8003fb4:	b1a0      	cbz	r0, 8003fe0 <HAL_TIM_PWM_Init+0x30>
 8003fb6:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8003fba:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8003fbe:	b91b      	cbnz	r3, 8003fc8 <HAL_TIM_PWM_Init+0x18>
 8003fc0:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
 8003fc4:	f7ff ff8d 	bl	8003ee2 <HAL_TIM_PWM_MspInit>
 8003fc8:	2302      	movs	r3, #2
 8003fca:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8003fce:	6820      	ldr	r0, [r4, #0]
 8003fd0:	1d21      	adds	r1, r4, #4
 8003fd2:	f7ff ff87 	bl	8003ee4 <TIM_Base_SetConfig>
 8003fd6:	2301      	movs	r3, #1
 8003fd8:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8003fdc:	2000      	movs	r0, #0
 8003fde:	bd10      	pop	{r4, pc}
 8003fe0:	2001      	movs	r0, #1
 8003fe2:	bd10      	pop	{r4, pc}

08003fe4 <TIM_OC2_SetConfig>:
 8003fe4:	6a03      	ldr	r3, [r0, #32]
 8003fe6:	f023 0310 	bic.w	r3, r3, #16
 8003fea:	6203      	str	r3, [r0, #32]
 8003fec:	6a03      	ldr	r3, [r0, #32]
 8003fee:	b570      	push	{r4, r5, r6, lr}
 8003ff0:	6844      	ldr	r4, [r0, #4]
 8003ff2:	6982      	ldr	r2, [r0, #24]
 8003ff4:	680d      	ldr	r5, [r1, #0]
 8003ff6:	f422 42e6 	bic.w	r2, r2, #29440	; 0x7300
 8003ffa:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 8003ffe:	688d      	ldr	r5, [r1, #8]
 8004000:	f023 0320 	bic.w	r3, r3, #32
 8004004:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
 8004008:	4d0b      	ldr	r5, [pc, #44]	; (8004038 <TIM_OC2_SetConfig+0x54>)
 800400a:	42a8      	cmp	r0, r5
 800400c:	d10d      	bne.n	800402a <TIM_OC2_SetConfig+0x46>
 800400e:	68cd      	ldr	r5, [r1, #12]
 8004010:	698e      	ldr	r6, [r1, #24]
 8004012:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8004016:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
 800401a:	694d      	ldr	r5, [r1, #20]
 800401c:	f424 6440 	bic.w	r4, r4, #3072	; 0xc00
 8004020:	4335      	orrs	r5, r6
 8004022:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8004026:	ea44 0485 	orr.w	r4, r4, r5, lsl #2
 800402a:	6044      	str	r4, [r0, #4]
 800402c:	6182      	str	r2, [r0, #24]
 800402e:	684a      	ldr	r2, [r1, #4]
 8004030:	6382      	str	r2, [r0, #56]	; 0x38
 8004032:	6203      	str	r3, [r0, #32]
 8004034:	bd70      	pop	{r4, r5, r6, pc}
 8004036:	bf00      	nop
 8004038:	40010000 	.word	0x40010000

0800403c <HAL_TIM_PWM_ConfigChannel>:
 800403c:	b538      	push	{r3, r4, r5, lr}
 800403e:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8004042:	2b01      	cmp	r3, #1
 8004044:	4604      	mov	r4, r0
 8004046:	f04f 0002 	mov.w	r0, #2
 800404a:	d025      	beq.n	8004098 <HAL_TIM_PWM_ConfigChannel+0x5c>
 800404c:	2301      	movs	r3, #1
 800404e:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
 8004052:	f884 0039 	strb.w	r0, [r4, #57]	; 0x39
 8004056:	2a0c      	cmp	r2, #12
 8004058:	d818      	bhi.n	800408c <HAL_TIM_PWM_ConfigChannel+0x50>
 800405a:	e8df f002 	tbb	[pc, r2]
 800405e:	1707      	.short	0x1707
 8004060:	171e1717 	.word	0x171e1717
 8004064:	172f1717 	.word	0x172f1717
 8004068:	1717      	.short	0x1717
 800406a:	40          	.byte	0x40
 800406b:	00          	.byte	0x00
 800406c:	6820      	ldr	r0, [r4, #0]
 800406e:	f7ff fec3 	bl	8003df8 <TIM_OC1_SetConfig>
 8004072:	6823      	ldr	r3, [r4, #0]
 8004074:	6909      	ldr	r1, [r1, #16]
 8004076:	699a      	ldr	r2, [r3, #24]
 8004078:	f042 0208 	orr.w	r2, r2, #8
 800407c:	619a      	str	r2, [r3, #24]
 800407e:	699a      	ldr	r2, [r3, #24]
 8004080:	f022 0204 	bic.w	r2, r2, #4
 8004084:	619a      	str	r2, [r3, #24]
 8004086:	699a      	ldr	r2, [r3, #24]
 8004088:	430a      	orrs	r2, r1
 800408a:	619a      	str	r2, [r3, #24]
 800408c:	2301      	movs	r3, #1
 800408e:	2000      	movs	r0, #0
 8004090:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 8004094:	f884 0038 	strb.w	r0, [r4, #56]	; 0x38
 8004098:	bd38      	pop	{r3, r4, r5, pc}
 800409a:	6820      	ldr	r0, [r4, #0]
 800409c:	f7ff ffa2 	bl	8003fe4 <TIM_OC2_SetConfig>
 80040a0:	6823      	ldr	r3, [r4, #0]
 80040a2:	6909      	ldr	r1, [r1, #16]
 80040a4:	699a      	ldr	r2, [r3, #24]
 80040a6:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80040aa:	619a      	str	r2, [r3, #24]
 80040ac:	699a      	ldr	r2, [r3, #24]
 80040ae:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80040b2:	619a      	str	r2, [r3, #24]
 80040b4:	699a      	ldr	r2, [r3, #24]
 80040b6:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80040ba:	e7e6      	b.n	800408a <HAL_TIM_PWM_ConfigChannel+0x4e>
 80040bc:	6820      	ldr	r0, [r4, #0]
 80040be:	f7ff fec3 	bl	8003e48 <TIM_OC3_SetConfig>
 80040c2:	6823      	ldr	r3, [r4, #0]
 80040c4:	6909      	ldr	r1, [r1, #16]
 80040c6:	69da      	ldr	r2, [r3, #28]
 80040c8:	f042 0208 	orr.w	r2, r2, #8
 80040cc:	61da      	str	r2, [r3, #28]
 80040ce:	69da      	ldr	r2, [r3, #28]
 80040d0:	f022 0204 	bic.w	r2, r2, #4
 80040d4:	61da      	str	r2, [r3, #28]
 80040d6:	69da      	ldr	r2, [r3, #28]
 80040d8:	430a      	orrs	r2, r1
 80040da:	61da      	str	r2, [r3, #28]
 80040dc:	e7d6      	b.n	800408c <HAL_TIM_PWM_ConfigChannel+0x50>
 80040de:	6820      	ldr	r0, [r4, #0]
 80040e0:	f7ff fedc 	bl	8003e9c <TIM_OC4_SetConfig>
 80040e4:	6823      	ldr	r3, [r4, #0]
 80040e6:	6909      	ldr	r1, [r1, #16]
 80040e8:	69da      	ldr	r2, [r3, #28]
 80040ea:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80040ee:	61da      	str	r2, [r3, #28]
 80040f0:	69da      	ldr	r2, [r3, #28]
 80040f2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80040f6:	61da      	str	r2, [r3, #28]
 80040f8:	69da      	ldr	r2, [r3, #28]
 80040fa:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80040fe:	e7ec      	b.n	80040da <HAL_TIM_PWM_ConfigChannel+0x9e>

08004100 <TIM_CCxChannelCmd>:
 8004100:	6a03      	ldr	r3, [r0, #32]
 8004102:	b510      	push	{r4, lr}
 8004104:	2401      	movs	r4, #1
 8004106:	408c      	lsls	r4, r1
 8004108:	ea23 0304 	bic.w	r3, r3, r4
 800410c:	6203      	str	r3, [r0, #32]
 800410e:	6a03      	ldr	r3, [r0, #32]
 8004110:	408a      	lsls	r2, r1
 8004112:	431a      	orrs	r2, r3
 8004114:	6202      	str	r2, [r0, #32]
 8004116:	bd10      	pop	{r4, pc}

08004118 <HAL_TIM_PWM_Start>:
 8004118:	b510      	push	{r4, lr}
 800411a:	4604      	mov	r4, r0
 800411c:	2201      	movs	r2, #1
 800411e:	6800      	ldr	r0, [r0, #0]
 8004120:	f7ff ffee 	bl	8004100 <TIM_CCxChannelCmd>
 8004124:	6823      	ldr	r3, [r4, #0]
 8004126:	4a06      	ldr	r2, [pc, #24]	; (8004140 <HAL_TIM_PWM_Start+0x28>)
 8004128:	4293      	cmp	r3, r2
 800412a:	bf02      	ittt	eq
 800412c:	6c5a      	ldreq	r2, [r3, #68]	; 0x44
 800412e:	f442 4200 	orreq.w	r2, r2, #32768	; 0x8000
 8004132:	645a      	streq	r2, [r3, #68]	; 0x44
 8004134:	681a      	ldr	r2, [r3, #0]
 8004136:	f042 0201 	orr.w	r2, r2, #1
 800413a:	601a      	str	r2, [r3, #0]
 800413c:	2000      	movs	r0, #0
 800413e:	bd10      	pop	{r4, pc}
 8004140:	40010000 	.word	0x40010000

08004144 <HAL_TIM_OC_Start>:
 8004144:	f7ff bfe8 	b.w	8004118 <HAL_TIM_PWM_Start>

08004148 <HAL_PWR_EnterSLEEPMode>:
 8004148:	4a06      	ldr	r2, [pc, #24]	; (8004164 <HAL_PWR_EnterSLEEPMode+0x1c>)
 800414a:	6913      	ldr	r3, [r2, #16]
 800414c:	2901      	cmp	r1, #1
 800414e:	f023 0304 	bic.w	r3, r3, #4
 8004152:	6113      	str	r3, [r2, #16]
 8004154:	d101      	bne.n	800415a <HAL_PWR_EnterSLEEPMode+0x12>
 8004156:	bf30      	wfi
 8004158:	4770      	bx	lr
 800415a:	bf40      	sev
 800415c:	bf20      	wfe
 800415e:	bf20      	wfe
 8004160:	4770      	bx	lr
 8004162:	bf00      	nop
 8004164:	e000ed00 	.word	0xe000ed00

08004168 <HAL_RCC_OscConfig>:
 8004168:	6803      	ldr	r3, [r0, #0]
 800416a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800416c:	07dd      	lsls	r5, r3, #31
 800416e:	4604      	mov	r4, r0
 8004170:	d438      	bmi.n	80041e4 <HAL_RCC_OscConfig+0x7c>
 8004172:	6823      	ldr	r3, [r4, #0]
 8004174:	0798      	lsls	r0, r3, #30
 8004176:	d471      	bmi.n	800425c <HAL_RCC_OscConfig+0xf4>
 8004178:	6823      	ldr	r3, [r4, #0]
 800417a:	071e      	lsls	r6, r3, #28
 800417c:	f100 80bd 	bmi.w	80042fa <HAL_RCC_OscConfig+0x192>
 8004180:	6823      	ldr	r3, [r4, #0]
 8004182:	075d      	lsls	r5, r3, #29
 8004184:	d528      	bpl.n	80041d8 <HAL_RCC_OscConfig+0x70>
 8004186:	2300      	movs	r3, #0
 8004188:	9301      	str	r3, [sp, #4]
 800418a:	4ba8      	ldr	r3, [pc, #672]	; (800442c <HAL_RCC_OscConfig+0x2c4>)
 800418c:	4da8      	ldr	r5, [pc, #672]	; (8004430 <HAL_RCC_OscConfig+0x2c8>)
 800418e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8004190:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8004194:	641a      	str	r2, [r3, #64]	; 0x40
 8004196:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004198:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800419c:	9301      	str	r3, [sp, #4]
 800419e:	9b01      	ldr	r3, [sp, #4]
 80041a0:	682b      	ldr	r3, [r5, #0]
 80041a2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80041a6:	602b      	str	r3, [r5, #0]
 80041a8:	f7ff fcd4 	bl	8003b54 <HAL_GetTick>
 80041ac:	4606      	mov	r6, r0
 80041ae:	682b      	ldr	r3, [r5, #0]
 80041b0:	05da      	lsls	r2, r3, #23
 80041b2:	f140 80c4 	bpl.w	800433e <HAL_RCC_OscConfig+0x1d6>
 80041b6:	4b9f      	ldr	r3, [pc, #636]	; (8004434 <HAL_RCC_OscConfig+0x2cc>)
 80041b8:	7a22      	ldrb	r2, [r4, #8]
 80041ba:	701a      	strb	r2, [r3, #0]
 80041bc:	68a3      	ldr	r3, [r4, #8]
 80041be:	2b00      	cmp	r3, #0
 80041c0:	f000 80cb 	beq.w	800435a <HAL_RCC_OscConfig+0x1f2>
 80041c4:	f7ff fcc6 	bl	8003b54 <HAL_GetTick>
 80041c8:	4d98      	ldr	r5, [pc, #608]	; (800442c <HAL_RCC_OscConfig+0x2c4>)
 80041ca:	4606      	mov	r6, r0
 80041cc:	f241 3788 	movw	r7, #5000	; 0x1388
 80041d0:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80041d2:	079b      	lsls	r3, r3, #30
 80041d4:	f140 80ba 	bpl.w	800434c <HAL_RCC_OscConfig+0x1e4>
 80041d8:	69a2      	ldr	r2, [r4, #24]
 80041da:	2a00      	cmp	r2, #0
 80041dc:	f040 80cd 	bne.w	800437a <HAL_RCC_OscConfig+0x212>
 80041e0:	2000      	movs	r0, #0
 80041e2:	e015      	b.n	8004210 <HAL_RCC_OscConfig+0xa8>
 80041e4:	4b91      	ldr	r3, [pc, #580]	; (800442c <HAL_RCC_OscConfig+0x2c4>)
 80041e6:	689a      	ldr	r2, [r3, #8]
 80041e8:	f002 020c 	and.w	r2, r2, #12
 80041ec:	2a04      	cmp	r2, #4
 80041ee:	d007      	beq.n	8004200 <HAL_RCC_OscConfig+0x98>
 80041f0:	689a      	ldr	r2, [r3, #8]
 80041f2:	f002 020c 	and.w	r2, r2, #12
 80041f6:	2a08      	cmp	r2, #8
 80041f8:	d10c      	bne.n	8004214 <HAL_RCC_OscConfig+0xac>
 80041fa:	685b      	ldr	r3, [r3, #4]
 80041fc:	0259      	lsls	r1, r3, #9
 80041fe:	d509      	bpl.n	8004214 <HAL_RCC_OscConfig+0xac>
 8004200:	4b8a      	ldr	r3, [pc, #552]	; (800442c <HAL_RCC_OscConfig+0x2c4>)
 8004202:	681b      	ldr	r3, [r3, #0]
 8004204:	039a      	lsls	r2, r3, #14
 8004206:	d5b4      	bpl.n	8004172 <HAL_RCC_OscConfig+0xa>
 8004208:	6863      	ldr	r3, [r4, #4]
 800420a:	2b00      	cmp	r3, #0
 800420c:	d1b1      	bne.n	8004172 <HAL_RCC_OscConfig+0xa>
 800420e:	2001      	movs	r0, #1
 8004210:	b003      	add	sp, #12
 8004212:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004214:	4b88      	ldr	r3, [pc, #544]	; (8004438 <HAL_RCC_OscConfig+0x2d0>)
 8004216:	7922      	ldrb	r2, [r4, #4]
 8004218:	701a      	strb	r2, [r3, #0]
 800421a:	6863      	ldr	r3, [r4, #4]
 800421c:	b17b      	cbz	r3, 800423e <HAL_RCC_OscConfig+0xd6>
 800421e:	f7ff fc99 	bl	8003b54 <HAL_GetTick>
 8004222:	4d82      	ldr	r5, [pc, #520]	; (800442c <HAL_RCC_OscConfig+0x2c4>)
 8004224:	4606      	mov	r6, r0
 8004226:	f241 3788 	movw	r7, #5000	; 0x1388
 800422a:	682b      	ldr	r3, [r5, #0]
 800422c:	039b      	lsls	r3, r3, #14
 800422e:	d4a0      	bmi.n	8004172 <HAL_RCC_OscConfig+0xa>
 8004230:	f7ff fc90 	bl	8003b54 <HAL_GetTick>
 8004234:	1b80      	subs	r0, r0, r6
 8004236:	42b8      	cmp	r0, r7
 8004238:	d9f7      	bls.n	800422a <HAL_RCC_OscConfig+0xc2>
 800423a:	2003      	movs	r0, #3
 800423c:	e7e8      	b.n	8004210 <HAL_RCC_OscConfig+0xa8>
 800423e:	f7ff fc89 	bl	8003b54 <HAL_GetTick>
 8004242:	4d7a      	ldr	r5, [pc, #488]	; (800442c <HAL_RCC_OscConfig+0x2c4>)
 8004244:	4606      	mov	r6, r0
 8004246:	f241 3788 	movw	r7, #5000	; 0x1388
 800424a:	682b      	ldr	r3, [r5, #0]
 800424c:	0398      	lsls	r0, r3, #14
 800424e:	d590      	bpl.n	8004172 <HAL_RCC_OscConfig+0xa>
 8004250:	f7ff fc80 	bl	8003b54 <HAL_GetTick>
 8004254:	1b80      	subs	r0, r0, r6
 8004256:	42b8      	cmp	r0, r7
 8004258:	d9f7      	bls.n	800424a <HAL_RCC_OscConfig+0xe2>
 800425a:	e7ee      	b.n	800423a <HAL_RCC_OscConfig+0xd2>
 800425c:	4b73      	ldr	r3, [pc, #460]	; (800442c <HAL_RCC_OscConfig+0x2c4>)
 800425e:	689a      	ldr	r2, [r3, #8]
 8004260:	f012 0f0c 	tst.w	r2, #12
 8004264:	d007      	beq.n	8004276 <HAL_RCC_OscConfig+0x10e>
 8004266:	689a      	ldr	r2, [r3, #8]
 8004268:	f002 020c 	and.w	r2, r2, #12
 800426c:	2a08      	cmp	r2, #8
 800426e:	d116      	bne.n	800429e <HAL_RCC_OscConfig+0x136>
 8004270:	685b      	ldr	r3, [r3, #4]
 8004272:	0259      	lsls	r1, r3, #9
 8004274:	d413      	bmi.n	800429e <HAL_RCC_OscConfig+0x136>
 8004276:	4b6d      	ldr	r3, [pc, #436]	; (800442c <HAL_RCC_OscConfig+0x2c4>)
 8004278:	681a      	ldr	r2, [r3, #0]
 800427a:	0792      	lsls	r2, r2, #30
 800427c:	d502      	bpl.n	8004284 <HAL_RCC_OscConfig+0x11c>
 800427e:	68e2      	ldr	r2, [r4, #12]
 8004280:	2a01      	cmp	r2, #1
 8004282:	d1c4      	bne.n	800420e <HAL_RCC_OscConfig+0xa6>
 8004284:	6818      	ldr	r0, [r3, #0]
 8004286:	22f8      	movs	r2, #248	; 0xf8
 8004288:	fa92 f2a2 	rbit	r2, r2
 800428c:	fab2 f182 	clz	r1, r2
 8004290:	6922      	ldr	r2, [r4, #16]
 8004292:	408a      	lsls	r2, r1
 8004294:	f020 01f8 	bic.w	r1, r0, #248	; 0xf8
 8004298:	430a      	orrs	r2, r1
 800429a:	601a      	str	r2, [r3, #0]
 800429c:	e76c      	b.n	8004178 <HAL_RCC_OscConfig+0x10>
 800429e:	68e2      	ldr	r2, [r4, #12]
 80042a0:	4b66      	ldr	r3, [pc, #408]	; (800443c <HAL_RCC_OscConfig+0x2d4>)
 80042a2:	b1da      	cbz	r2, 80042dc <HAL_RCC_OscConfig+0x174>
 80042a4:	2201      	movs	r2, #1
 80042a6:	601a      	str	r2, [r3, #0]
 80042a8:	f7ff fc54 	bl	8003b54 <HAL_GetTick>
 80042ac:	4d5f      	ldr	r5, [pc, #380]	; (800442c <HAL_RCC_OscConfig+0x2c4>)
 80042ae:	4606      	mov	r6, r0
 80042b0:	682b      	ldr	r3, [r5, #0]
 80042b2:	079b      	lsls	r3, r3, #30
 80042b4:	d50c      	bpl.n	80042d0 <HAL_RCC_OscConfig+0x168>
 80042b6:	6829      	ldr	r1, [r5, #0]
 80042b8:	23f8      	movs	r3, #248	; 0xf8
 80042ba:	fa93 f3a3 	rbit	r3, r3
 80042be:	fab3 f283 	clz	r2, r3
 80042c2:	6923      	ldr	r3, [r4, #16]
 80042c4:	4093      	lsls	r3, r2
 80042c6:	f021 02f8 	bic.w	r2, r1, #248	; 0xf8
 80042ca:	4313      	orrs	r3, r2
 80042cc:	602b      	str	r3, [r5, #0]
 80042ce:	e753      	b.n	8004178 <HAL_RCC_OscConfig+0x10>
 80042d0:	f7ff fc40 	bl	8003b54 <HAL_GetTick>
 80042d4:	1b80      	subs	r0, r0, r6
 80042d6:	2802      	cmp	r0, #2
 80042d8:	d9ea      	bls.n	80042b0 <HAL_RCC_OscConfig+0x148>
 80042da:	e7ae      	b.n	800423a <HAL_RCC_OscConfig+0xd2>
 80042dc:	601a      	str	r2, [r3, #0]
 80042de:	f7ff fc39 	bl	8003b54 <HAL_GetTick>
 80042e2:	4d52      	ldr	r5, [pc, #328]	; (800442c <HAL_RCC_OscConfig+0x2c4>)
 80042e4:	4606      	mov	r6, r0
 80042e6:	682b      	ldr	r3, [r5, #0]
 80042e8:	079f      	lsls	r7, r3, #30
 80042ea:	f57f af45 	bpl.w	8004178 <HAL_RCC_OscConfig+0x10>
 80042ee:	f7ff fc31 	bl	8003b54 <HAL_GetTick>
 80042f2:	1b80      	subs	r0, r0, r6
 80042f4:	2802      	cmp	r0, #2
 80042f6:	d9f6      	bls.n	80042e6 <HAL_RCC_OscConfig+0x17e>
 80042f8:	e79f      	b.n	800423a <HAL_RCC_OscConfig+0xd2>
 80042fa:	6962      	ldr	r2, [r4, #20]
 80042fc:	4b50      	ldr	r3, [pc, #320]	; (8004440 <HAL_RCC_OscConfig+0x2d8>)
 80042fe:	b17a      	cbz	r2, 8004320 <HAL_RCC_OscConfig+0x1b8>
 8004300:	2201      	movs	r2, #1
 8004302:	601a      	str	r2, [r3, #0]
 8004304:	f7ff fc26 	bl	8003b54 <HAL_GetTick>
 8004308:	4d48      	ldr	r5, [pc, #288]	; (800442c <HAL_RCC_OscConfig+0x2c4>)
 800430a:	4606      	mov	r6, r0
 800430c:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 800430e:	0798      	lsls	r0, r3, #30
 8004310:	f53f af36 	bmi.w	8004180 <HAL_RCC_OscConfig+0x18>
 8004314:	f7ff fc1e 	bl	8003b54 <HAL_GetTick>
 8004318:	1b80      	subs	r0, r0, r6
 800431a:	2802      	cmp	r0, #2
 800431c:	d9f6      	bls.n	800430c <HAL_RCC_OscConfig+0x1a4>
 800431e:	e78c      	b.n	800423a <HAL_RCC_OscConfig+0xd2>
 8004320:	601a      	str	r2, [r3, #0]
 8004322:	f7ff fc17 	bl	8003b54 <HAL_GetTick>
 8004326:	4d41      	ldr	r5, [pc, #260]	; (800442c <HAL_RCC_OscConfig+0x2c4>)
 8004328:	4606      	mov	r6, r0
 800432a:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 800432c:	0799      	lsls	r1, r3, #30
 800432e:	f57f af27 	bpl.w	8004180 <HAL_RCC_OscConfig+0x18>
 8004332:	f7ff fc0f 	bl	8003b54 <HAL_GetTick>
 8004336:	1b80      	subs	r0, r0, r6
 8004338:	2802      	cmp	r0, #2
 800433a:	d9f6      	bls.n	800432a <HAL_RCC_OscConfig+0x1c2>
 800433c:	e77d      	b.n	800423a <HAL_RCC_OscConfig+0xd2>
 800433e:	f7ff fc09 	bl	8003b54 <HAL_GetTick>
 8004342:	1b80      	subs	r0, r0, r6
 8004344:	2802      	cmp	r0, #2
 8004346:	f67f af32 	bls.w	80041ae <HAL_RCC_OscConfig+0x46>
 800434a:	e776      	b.n	800423a <HAL_RCC_OscConfig+0xd2>
 800434c:	f7ff fc02 	bl	8003b54 <HAL_GetTick>
 8004350:	1b80      	subs	r0, r0, r6
 8004352:	42b8      	cmp	r0, r7
 8004354:	f67f af3c 	bls.w	80041d0 <HAL_RCC_OscConfig+0x68>
 8004358:	e76f      	b.n	800423a <HAL_RCC_OscConfig+0xd2>
 800435a:	f7ff fbfb 	bl	8003b54 <HAL_GetTick>
 800435e:	4d33      	ldr	r5, [pc, #204]	; (800442c <HAL_RCC_OscConfig+0x2c4>)
 8004360:	4606      	mov	r6, r0
 8004362:	f241 3788 	movw	r7, #5000	; 0x1388
 8004366:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8004368:	0798      	lsls	r0, r3, #30
 800436a:	f57f af35 	bpl.w	80041d8 <HAL_RCC_OscConfig+0x70>
 800436e:	f7ff fbf1 	bl	8003b54 <HAL_GetTick>
 8004372:	1b80      	subs	r0, r0, r6
 8004374:	42b8      	cmp	r0, r7
 8004376:	d9f6      	bls.n	8004366 <HAL_RCC_OscConfig+0x1fe>
 8004378:	e75f      	b.n	800423a <HAL_RCC_OscConfig+0xd2>
 800437a:	4d2c      	ldr	r5, [pc, #176]	; (800442c <HAL_RCC_OscConfig+0x2c4>)
 800437c:	68ab      	ldr	r3, [r5, #8]
 800437e:	f003 030c 	and.w	r3, r3, #12
 8004382:	2b08      	cmp	r3, #8
 8004384:	f43f af43 	beq.w	800420e <HAL_RCC_OscConfig+0xa6>
 8004388:	4e2e      	ldr	r6, [pc, #184]	; (8004444 <HAL_RCC_OscConfig+0x2dc>)
 800438a:	2300      	movs	r3, #0
 800438c:	2a02      	cmp	r2, #2
 800438e:	6033      	str	r3, [r6, #0]
 8004390:	d13e      	bne.n	8004410 <HAL_RCC_OscConfig+0x2a8>
 8004392:	f7ff fbdf 	bl	8003b54 <HAL_GetTick>
 8004396:	4607      	mov	r7, r0
 8004398:	682b      	ldr	r3, [r5, #0]
 800439a:	0199      	lsls	r1, r3, #6
 800439c:	d432      	bmi.n	8004404 <HAL_RCC_OscConfig+0x29c>
 800439e:	f647 77c0 	movw	r7, #32704	; 0x7fc0
 80043a2:	fa97 f7a7 	rbit	r7, r7
 80043a6:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 80043aa:	fab7 f787 	clz	r7, r7
 80043ae:	fa92 f2a2 	rbit	r2, r2
 80043b2:	f04f 6170 	mov.w	r1, #251658240	; 0xf000000
 80043b6:	fab2 f082 	clz	r0, r2
 80043ba:	fa91 f1a1 	rbit	r1, r1
 80043be:	6a22      	ldr	r2, [r4, #32]
 80043c0:	69e3      	ldr	r3, [r4, #28]
 80043c2:	4313      	orrs	r3, r2
 80043c4:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80043c6:	fa02 f707 	lsl.w	r7, r2, r7
 80043ca:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80043cc:	0852      	lsrs	r2, r2, #1
 80043ce:	3a01      	subs	r2, #1
 80043d0:	4082      	lsls	r2, r0
 80043d2:	433b      	orrs	r3, r7
 80043d4:	4313      	orrs	r3, r2
 80043d6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80043d8:	4c14      	ldr	r4, [pc, #80]	; (800442c <HAL_RCC_OscConfig+0x2c4>)
 80043da:	fab1 f181 	clz	r1, r1
 80043de:	fa02 f101 	lsl.w	r1, r2, r1
 80043e2:	430b      	orrs	r3, r1
 80043e4:	606b      	str	r3, [r5, #4]
 80043e6:	2301      	movs	r3, #1
 80043e8:	6033      	str	r3, [r6, #0]
 80043ea:	f7ff fbb3 	bl	8003b54 <HAL_GetTick>
 80043ee:	4605      	mov	r5, r0
 80043f0:	6823      	ldr	r3, [r4, #0]
 80043f2:	019a      	lsls	r2, r3, #6
 80043f4:	f53f aef4 	bmi.w	80041e0 <HAL_RCC_OscConfig+0x78>
 80043f8:	f7ff fbac 	bl	8003b54 <HAL_GetTick>
 80043fc:	1b40      	subs	r0, r0, r5
 80043fe:	2802      	cmp	r0, #2
 8004400:	d9f6      	bls.n	80043f0 <HAL_RCC_OscConfig+0x288>
 8004402:	e71a      	b.n	800423a <HAL_RCC_OscConfig+0xd2>
 8004404:	f7ff fba6 	bl	8003b54 <HAL_GetTick>
 8004408:	1bc0      	subs	r0, r0, r7
 800440a:	2802      	cmp	r0, #2
 800440c:	d9c4      	bls.n	8004398 <HAL_RCC_OscConfig+0x230>
 800440e:	e714      	b.n	800423a <HAL_RCC_OscConfig+0xd2>
 8004410:	f7ff fba0 	bl	8003b54 <HAL_GetTick>
 8004414:	4604      	mov	r4, r0
 8004416:	682b      	ldr	r3, [r5, #0]
 8004418:	019b      	lsls	r3, r3, #6
 800441a:	f57f aee1 	bpl.w	80041e0 <HAL_RCC_OscConfig+0x78>
 800441e:	f7ff fb99 	bl	8003b54 <HAL_GetTick>
 8004422:	1b00      	subs	r0, r0, r4
 8004424:	2802      	cmp	r0, #2
 8004426:	d9f6      	bls.n	8004416 <HAL_RCC_OscConfig+0x2ae>
 8004428:	e707      	b.n	800423a <HAL_RCC_OscConfig+0xd2>
 800442a:	bf00      	nop
 800442c:	40023800 	.word	0x40023800
 8004430:	40007000 	.word	0x40007000
 8004434:	40023870 	.word	0x40023870
 8004438:	40023802 	.word	0x40023802
 800443c:	42470000 	.word	0x42470000
 8004440:	42470e80 	.word	0x42470e80
 8004444:	42470060 	.word	0x42470060

08004448 <HAL_RCC_GetSysClockFreq>:
 8004448:	4a19      	ldr	r2, [pc, #100]	; (80044b0 <HAL_RCC_GetSysClockFreq+0x68>)
 800444a:	6893      	ldr	r3, [r2, #8]
 800444c:	f003 030c 	and.w	r3, r3, #12
 8004450:	2b04      	cmp	r3, #4
 8004452:	b510      	push	{r4, lr}
 8004454:	d003      	beq.n	800445e <HAL_RCC_GetSysClockFreq+0x16>
 8004456:	2b08      	cmp	r3, #8
 8004458:	d003      	beq.n	8004462 <HAL_RCC_GetSysClockFreq+0x1a>
 800445a:	4816      	ldr	r0, [pc, #88]	; (80044b4 <HAL_RCC_GetSysClockFreq+0x6c>)
 800445c:	bd10      	pop	{r4, pc}
 800445e:	4816      	ldr	r0, [pc, #88]	; (80044b8 <HAL_RCC_GetSysClockFreq+0x70>)
 8004460:	bd10      	pop	{r4, pc}
 8004462:	6851      	ldr	r1, [r2, #4]
 8004464:	6853      	ldr	r3, [r2, #4]
 8004466:	f001 013f 	and.w	r1, r1, #63	; 0x3f
 800446a:	f413 0f80 	tst.w	r3, #4194304	; 0x400000
 800446e:	f647 74c0 	movw	r4, #32704	; 0x7fc0
 8004472:	6853      	ldr	r3, [r2, #4]
 8004474:	fa94 f0a4 	rbit	r0, r4
 8004478:	fab0 f080 	clz	r0, r0
 800447c:	ea03 0304 	and.w	r3, r3, r4
 8004480:	fa23 f300 	lsr.w	r3, r3, r0
 8004484:	bf14      	ite	ne
 8004486:	480c      	ldrne	r0, [pc, #48]	; (80044b8 <HAL_RCC_GetSysClockFreq+0x70>)
 8004488:	480a      	ldreq	r0, [pc, #40]	; (80044b4 <HAL_RCC_GetSysClockFreq+0x6c>)
 800448a:	fbb0 f0f1 	udiv	r0, r0, r1
 800448e:	4358      	muls	r0, r3
 8004490:	4b07      	ldr	r3, [pc, #28]	; (80044b0 <HAL_RCC_GetSysClockFreq+0x68>)
 8004492:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 8004496:	685b      	ldr	r3, [r3, #4]
 8004498:	fa92 f2a2 	rbit	r2, r2
 800449c:	fab2 f282 	clz	r2, r2
 80044a0:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 80044a4:	40d3      	lsrs	r3, r2
 80044a6:	3301      	adds	r3, #1
 80044a8:	005b      	lsls	r3, r3, #1
 80044aa:	fbb0 f0f3 	udiv	r0, r0, r3
 80044ae:	bd10      	pop	{r4, pc}
 80044b0:	40023800 	.word	0x40023800
 80044b4:	00f42400 	.word	0x00f42400
 80044b8:	007a1200 	.word	0x007a1200

080044bc <HAL_RCC_ClockConfig>:
 80044bc:	4b56      	ldr	r3, [pc, #344]	; (8004618 <HAL_RCC_ClockConfig+0x15c>)
 80044be:	681a      	ldr	r2, [r3, #0]
 80044c0:	f002 020f 	and.w	r2, r2, #15
 80044c4:	428a      	cmp	r2, r1
 80044c6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80044ca:	4605      	mov	r5, r0
 80044cc:	460e      	mov	r6, r1
 80044ce:	d330      	bcc.n	8004532 <HAL_RCC_ClockConfig+0x76>
 80044d0:	682a      	ldr	r2, [r5, #0]
 80044d2:	0794      	lsls	r4, r2, #30
 80044d4:	d437      	bmi.n	8004546 <HAL_RCC_ClockConfig+0x8a>
 80044d6:	07d0      	lsls	r0, r2, #31
 80044d8:	d43d      	bmi.n	8004556 <HAL_RCC_ClockConfig+0x9a>
 80044da:	4b4f      	ldr	r3, [pc, #316]	; (8004618 <HAL_RCC_ClockConfig+0x15c>)
 80044dc:	681a      	ldr	r2, [r3, #0]
 80044de:	f002 020f 	and.w	r2, r2, #15
 80044e2:	4296      	cmp	r6, r2
 80044e4:	f0c0 8088 	bcc.w	80045f8 <HAL_RCC_ClockConfig+0x13c>
 80044e8:	682a      	ldr	r2, [r5, #0]
 80044ea:	0751      	lsls	r1, r2, #29
 80044ec:	f100 808c 	bmi.w	8004608 <HAL_RCC_ClockConfig+0x14c>
 80044f0:	0713      	lsls	r3, r2, #28
 80044f2:	d507      	bpl.n	8004504 <HAL_RCC_ClockConfig+0x48>
 80044f4:	4a49      	ldr	r2, [pc, #292]	; (800461c <HAL_RCC_ClockConfig+0x160>)
 80044f6:	6929      	ldr	r1, [r5, #16]
 80044f8:	6893      	ldr	r3, [r2, #8]
 80044fa:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 80044fe:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8004502:	6093      	str	r3, [r2, #8]
 8004504:	f7ff ffa0 	bl	8004448 <HAL_RCC_GetSysClockFreq>
 8004508:	4b44      	ldr	r3, [pc, #272]	; (800461c <HAL_RCC_ClockConfig+0x160>)
 800450a:	22f0      	movs	r2, #240	; 0xf0
 800450c:	689b      	ldr	r3, [r3, #8]
 800450e:	fa92 f2a2 	rbit	r2, r2
 8004512:	fab2 f282 	clz	r2, r2
 8004516:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 800451a:	40d3      	lsrs	r3, r2
 800451c:	4a40      	ldr	r2, [pc, #256]	; (8004620 <HAL_RCC_ClockConfig+0x164>)
 800451e:	5cd3      	ldrb	r3, [r2, r3]
 8004520:	40d8      	lsrs	r0, r3
 8004522:	4b40      	ldr	r3, [pc, #256]	; (8004624 <HAL_RCC_ClockConfig+0x168>)
 8004524:	6018      	str	r0, [r3, #0]
 8004526:	200f      	movs	r0, #15
 8004528:	f7fe fbb0 	bl	8002c8c <HAL_InitTick>
 800452c:	2000      	movs	r0, #0
 800452e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004532:	b2ca      	uxtb	r2, r1
 8004534:	701a      	strb	r2, [r3, #0]
 8004536:	681b      	ldr	r3, [r3, #0]
 8004538:	f003 030f 	and.w	r3, r3, #15
 800453c:	4299      	cmp	r1, r3
 800453e:	d0c7      	beq.n	80044d0 <HAL_RCC_ClockConfig+0x14>
 8004540:	2001      	movs	r0, #1
 8004542:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004546:	4935      	ldr	r1, [pc, #212]	; (800461c <HAL_RCC_ClockConfig+0x160>)
 8004548:	68a8      	ldr	r0, [r5, #8]
 800454a:	688b      	ldr	r3, [r1, #8]
 800454c:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8004550:	4303      	orrs	r3, r0
 8004552:	608b      	str	r3, [r1, #8]
 8004554:	e7bf      	b.n	80044d6 <HAL_RCC_ClockConfig+0x1a>
 8004556:	686a      	ldr	r2, [r5, #4]
 8004558:	4b30      	ldr	r3, [pc, #192]	; (800461c <HAL_RCC_ClockConfig+0x160>)
 800455a:	2a01      	cmp	r2, #1
 800455c:	d11e      	bne.n	800459c <HAL_RCC_ClockConfig+0xe0>
 800455e:	681b      	ldr	r3, [r3, #0]
 8004560:	f413 3f00 	tst.w	r3, #131072	; 0x20000
 8004564:	d0ec      	beq.n	8004540 <HAL_RCC_ClockConfig+0x84>
 8004566:	4c2d      	ldr	r4, [pc, #180]	; (800461c <HAL_RCC_ClockConfig+0x160>)
 8004568:	68a3      	ldr	r3, [r4, #8]
 800456a:	f023 0303 	bic.w	r3, r3, #3
 800456e:	4313      	orrs	r3, r2
 8004570:	60a3      	str	r3, [r4, #8]
 8004572:	f7ff faef 	bl	8003b54 <HAL_GetTick>
 8004576:	686b      	ldr	r3, [r5, #4]
 8004578:	2b01      	cmp	r3, #1
 800457a:	4607      	mov	r7, r0
 800457c:	f241 3888 	movw	r8, #5000	; 0x1388
 8004580:	d116      	bne.n	80045b0 <HAL_RCC_ClockConfig+0xf4>
 8004582:	68a3      	ldr	r3, [r4, #8]
 8004584:	f003 030c 	and.w	r3, r3, #12
 8004588:	2b04      	cmp	r3, #4
 800458a:	d0a6      	beq.n	80044da <HAL_RCC_ClockConfig+0x1e>
 800458c:	f7ff fae2 	bl	8003b54 <HAL_GetTick>
 8004590:	1bc0      	subs	r0, r0, r7
 8004592:	4540      	cmp	r0, r8
 8004594:	d9f5      	bls.n	8004582 <HAL_RCC_ClockConfig+0xc6>
 8004596:	2003      	movs	r0, #3
 8004598:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800459c:	1e91      	subs	r1, r2, #2
 800459e:	2901      	cmp	r1, #1
 80045a0:	681b      	ldr	r3, [r3, #0]
 80045a2:	d802      	bhi.n	80045aa <HAL_RCC_ClockConfig+0xee>
 80045a4:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 80045a8:	e7dc      	b.n	8004564 <HAL_RCC_ClockConfig+0xa8>
 80045aa:	f013 0f02 	tst.w	r3, #2
 80045ae:	e7d9      	b.n	8004564 <HAL_RCC_ClockConfig+0xa8>
 80045b0:	2b02      	cmp	r3, #2
 80045b2:	d10a      	bne.n	80045ca <HAL_RCC_ClockConfig+0x10e>
 80045b4:	68a3      	ldr	r3, [r4, #8]
 80045b6:	f003 030c 	and.w	r3, r3, #12
 80045ba:	2b08      	cmp	r3, #8
 80045bc:	d08d      	beq.n	80044da <HAL_RCC_ClockConfig+0x1e>
 80045be:	f7ff fac9 	bl	8003b54 <HAL_GetTick>
 80045c2:	1bc0      	subs	r0, r0, r7
 80045c4:	4540      	cmp	r0, r8
 80045c6:	d9f5      	bls.n	80045b4 <HAL_RCC_ClockConfig+0xf8>
 80045c8:	e7e5      	b.n	8004596 <HAL_RCC_ClockConfig+0xda>
 80045ca:	2b03      	cmp	r3, #3
 80045cc:	d10f      	bne.n	80045ee <HAL_RCC_ClockConfig+0x132>
 80045ce:	68a3      	ldr	r3, [r4, #8]
 80045d0:	f003 030c 	and.w	r3, r3, #12
 80045d4:	2b0c      	cmp	r3, #12
 80045d6:	d080      	beq.n	80044da <HAL_RCC_ClockConfig+0x1e>
 80045d8:	f7ff fabc 	bl	8003b54 <HAL_GetTick>
 80045dc:	1bc0      	subs	r0, r0, r7
 80045de:	4540      	cmp	r0, r8
 80045e0:	d9f5      	bls.n	80045ce <HAL_RCC_ClockConfig+0x112>
 80045e2:	e7d8      	b.n	8004596 <HAL_RCC_ClockConfig+0xda>
 80045e4:	f7ff fab6 	bl	8003b54 <HAL_GetTick>
 80045e8:	1bc0      	subs	r0, r0, r7
 80045ea:	4540      	cmp	r0, r8
 80045ec:	d8d3      	bhi.n	8004596 <HAL_RCC_ClockConfig+0xda>
 80045ee:	68a3      	ldr	r3, [r4, #8]
 80045f0:	f013 0f0c 	tst.w	r3, #12
 80045f4:	d1f6      	bne.n	80045e4 <HAL_RCC_ClockConfig+0x128>
 80045f6:	e770      	b.n	80044da <HAL_RCC_ClockConfig+0x1e>
 80045f8:	b2f2      	uxtb	r2, r6
 80045fa:	701a      	strb	r2, [r3, #0]
 80045fc:	681b      	ldr	r3, [r3, #0]
 80045fe:	f003 030f 	and.w	r3, r3, #15
 8004602:	429e      	cmp	r6, r3
 8004604:	d19c      	bne.n	8004540 <HAL_RCC_ClockConfig+0x84>
 8004606:	e76f      	b.n	80044e8 <HAL_RCC_ClockConfig+0x2c>
 8004608:	4904      	ldr	r1, [pc, #16]	; (800461c <HAL_RCC_ClockConfig+0x160>)
 800460a:	68e8      	ldr	r0, [r5, #12]
 800460c:	688b      	ldr	r3, [r1, #8]
 800460e:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8004612:	4303      	orrs	r3, r0
 8004614:	608b      	str	r3, [r1, #8]
 8004616:	e76b      	b.n	80044f0 <HAL_RCC_ClockConfig+0x34>
 8004618:	40023c00 	.word	0x40023c00
 800461c:	40023800 	.word	0x40023800
 8004620:	080066f4 	.word	0x080066f4
 8004624:	200001b0 	.word	0x200001b0

08004628 <HAL_RCC_GetPCLK1Freq>:
 8004628:	4b08      	ldr	r3, [pc, #32]	; (800464c <HAL_RCC_GetPCLK1Freq+0x24>)
 800462a:	f44f 52e0 	mov.w	r2, #7168	; 0x1c00
 800462e:	689b      	ldr	r3, [r3, #8]
 8004630:	fa92 f2a2 	rbit	r2, r2
 8004634:	fab2 f282 	clz	r2, r2
 8004638:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 800463c:	40d3      	lsrs	r3, r2
 800463e:	4a04      	ldr	r2, [pc, #16]	; (8004650 <HAL_RCC_GetPCLK1Freq+0x28>)
 8004640:	5cd3      	ldrb	r3, [r2, r3]
 8004642:	4a04      	ldr	r2, [pc, #16]	; (8004654 <HAL_RCC_GetPCLK1Freq+0x2c>)
 8004644:	6810      	ldr	r0, [r2, #0]
 8004646:	40d8      	lsrs	r0, r3
 8004648:	4770      	bx	lr
 800464a:	bf00      	nop
 800464c:	40023800 	.word	0x40023800
 8004650:	080066f4 	.word	0x080066f4
 8004654:	200001b0 	.word	0x200001b0

08004658 <HAL_RCC_GetPCLK2Freq>:
 8004658:	4b08      	ldr	r3, [pc, #32]	; (800467c <HAL_RCC_GetPCLK2Freq+0x24>)
 800465a:	f44f 4260 	mov.w	r2, #57344	; 0xe000
 800465e:	689b      	ldr	r3, [r3, #8]
 8004660:	fa92 f2a2 	rbit	r2, r2
 8004664:	fab2 f282 	clz	r2, r2
 8004668:	f403 4360 	and.w	r3, r3, #57344	; 0xe000
 800466c:	40d3      	lsrs	r3, r2
 800466e:	4a04      	ldr	r2, [pc, #16]	; (8004680 <HAL_RCC_GetPCLK2Freq+0x28>)
 8004670:	5cd3      	ldrb	r3, [r2, r3]
 8004672:	4a04      	ldr	r2, [pc, #16]	; (8004684 <HAL_RCC_GetPCLK2Freq+0x2c>)
 8004674:	6810      	ldr	r0, [r2, #0]
 8004676:	40d8      	lsrs	r0, r3
 8004678:	4770      	bx	lr
 800467a:	bf00      	nop
 800467c:	40023800 	.word	0x40023800
 8004680:	080066f4 	.word	0x080066f4
 8004684:	200001b0 	.word	0x200001b0

08004688 <HAL_RCC_GetClockConfig>:
 8004688:	230f      	movs	r3, #15
 800468a:	6003      	str	r3, [r0, #0]
 800468c:	4b0b      	ldr	r3, [pc, #44]	; (80046bc <HAL_RCC_GetClockConfig+0x34>)
 800468e:	689a      	ldr	r2, [r3, #8]
 8004690:	f002 0203 	and.w	r2, r2, #3
 8004694:	6042      	str	r2, [r0, #4]
 8004696:	689a      	ldr	r2, [r3, #8]
 8004698:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800469c:	6082      	str	r2, [r0, #8]
 800469e:	689a      	ldr	r2, [r3, #8]
 80046a0:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 80046a4:	60c2      	str	r2, [r0, #12]
 80046a6:	689b      	ldr	r3, [r3, #8]
 80046a8:	08db      	lsrs	r3, r3, #3
 80046aa:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 80046ae:	6103      	str	r3, [r0, #16]
 80046b0:	4b03      	ldr	r3, [pc, #12]	; (80046c0 <HAL_RCC_GetClockConfig+0x38>)
 80046b2:	681b      	ldr	r3, [r3, #0]
 80046b4:	f003 030f 	and.w	r3, r3, #15
 80046b8:	600b      	str	r3, [r1, #0]
 80046ba:	4770      	bx	lr
 80046bc:	40023800 	.word	0x40023800
 80046c0:	40023c00 	.word	0x40023c00

080046c4 <mbed::Timer::start()>:
 80046c4:	b510      	push	{r4, lr}
 80046c6:	4604      	mov	r4, r0
 80046c8:	f7fc fff4 	bl	80016b4 <core_util_critical_section_enter>
 80046cc:	6823      	ldr	r3, [r4, #0]
 80046ce:	b92b      	cbnz	r3, 80046dc <mbed::Timer::start()+0x18>
 80046d0:	68e0      	ldr	r0, [r4, #12]
 80046d2:	f7fc ff7e 	bl	80015d2 <ticker_read>
 80046d6:	2301      	movs	r3, #1
 80046d8:	6060      	str	r0, [r4, #4]
 80046da:	6023      	str	r3, [r4, #0]
 80046dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80046e0:	f7fc bffe 	b.w	80016e0 <core_util_critical_section_exit>

080046e4 <mbed::Timer::slicetime()>:
 80046e4:	b538      	push	{r3, r4, r5, lr}
 80046e6:	4605      	mov	r5, r0
 80046e8:	f7fc ffe4 	bl	80016b4 <core_util_critical_section_enter>
 80046ec:	682c      	ldr	r4, [r5, #0]
 80046ee:	b124      	cbz	r4, 80046fa <mbed::Timer::slicetime()+0x16>
 80046f0:	68e8      	ldr	r0, [r5, #12]
 80046f2:	f7fc ff6e 	bl	80015d2 <ticker_read>
 80046f6:	686c      	ldr	r4, [r5, #4]
 80046f8:	1b04      	subs	r4, r0, r4
 80046fa:	f7fc fff1 	bl	80016e0 <core_util_critical_section_exit>
 80046fe:	4620      	mov	r0, r4
 8004700:	bd38      	pop	{r3, r4, r5, pc}

08004702 <mbed::Timer::read_us()>:
 8004702:	b538      	push	{r3, r4, r5, lr}
 8004704:	4605      	mov	r5, r0
 8004706:	f7fc ffd5 	bl	80016b4 <core_util_critical_section_enter>
 800470a:	4628      	mov	r0, r5
 800470c:	68ac      	ldr	r4, [r5, #8]
 800470e:	f7ff ffe9 	bl	80046e4 <mbed::Timer::slicetime()>
 8004712:	4404      	add	r4, r0
 8004714:	f7fc ffe4 	bl	80016e0 <core_util_critical_section_exit>
 8004718:	4620      	mov	r0, r4
 800471a:	bd38      	pop	{r3, r4, r5, pc}

0800471c <mbed::Timer::read_ms()>:
 800471c:	b508      	push	{r3, lr}
 800471e:	f7ff fff0 	bl	8004702 <mbed::Timer::read_us()>
 8004722:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8004726:	fb90 f0f3 	sdiv	r0, r0, r3
 800472a:	bd08      	pop	{r3, pc}

0800472c <mbed::Timer::reset()>:
 800472c:	b510      	push	{r4, lr}
 800472e:	4604      	mov	r4, r0
 8004730:	f7fc ffc0 	bl	80016b4 <core_util_critical_section_enter>
 8004734:	68e0      	ldr	r0, [r4, #12]
 8004736:	f7fc ff4c 	bl	80015d2 <ticker_read>
 800473a:	2300      	movs	r3, #0
 800473c:	6060      	str	r0, [r4, #4]
 800473e:	60a3      	str	r3, [r4, #8]
 8004740:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004744:	f7fc bfcc 	b.w	80016e0 <core_util_critical_section_exit>

08004748 <mbed::Timer::Timer()>:
 8004748:	2300      	movs	r3, #0
 800474a:	b510      	push	{r4, lr}
 800474c:	6003      	str	r3, [r0, #0]
 800474e:	6043      	str	r3, [r0, #4]
 8004750:	6083      	str	r3, [r0, #8]
 8004752:	4604      	mov	r4, r0
 8004754:	f7fc ff10 	bl	8001578 <get_us_ticker_data>
 8004758:	60e0      	str	r0, [r4, #12]
 800475a:	4620      	mov	r0, r4
 800475c:	f7ff ffe6 	bl	800472c <mbed::Timer::reset()>
 8004760:	4620      	mov	r0, r4
 8004762:	bd10      	pop	{r4, pc}

08004764 <void mbed::Callback<void ()>::function_call<void (*)()>(void const*)>:
 8004764:	6803      	ldr	r3, [r0, #0]
 8004766:	4718      	bx	r3

08004768 <void mbed::Callback<void ()>::function_move<void (*)()>(void*, void const*)>:
 8004768:	b108      	cbz	r0, 800476e <void mbed::Callback<void ()>::function_move<void (*)()>(void*, void const*)+0x6>
 800476a:	680b      	ldr	r3, [r1, #0]
 800476c:	6003      	str	r3, [r0, #0]
 800476e:	4770      	bx	lr

08004770 <void mbed::Callback<void ()>::function_dtor<void (*)()>(void*)>:
 8004770:	4770      	bx	lr

08004772 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>:
 8004772:	4288      	cmp	r0, r1
 8004774:	b538      	push	{r3, r4, r5, lr}
 8004776:	4604      	mov	r4, r0
 8004778:	460d      	mov	r5, r1
 800477a:	d00a      	beq.n	8004792 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x20>
 800477c:	f7fc fcfd 	bl	800117a <mbed::Callback<void ()>::~Callback()>
 8004780:	b13c      	cbz	r4, 8004792 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x20>
 8004782:	68eb      	ldr	r3, [r5, #12]
 8004784:	b11b      	cbz	r3, 800478e <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x1c>
 8004786:	685b      	ldr	r3, [r3, #4]
 8004788:	4629      	mov	r1, r5
 800478a:	4620      	mov	r0, r4
 800478c:	4798      	blx	r3
 800478e:	68eb      	ldr	r3, [r5, #12]
 8004790:	60e3      	str	r3, [r4, #12]
 8004792:	4620      	mov	r0, r4
 8004794:	bd38      	pop	{r3, r4, r5, pc}

08004796 <mbed::RawSerial::lock()>:
 8004796:	4770      	bx	lr

08004798 <mbed::RawSerial::RawSerial(PinName, PinName, int)>:
 8004798:	b510      	push	{r4, lr}
 800479a:	4604      	mov	r4, r0
 800479c:	f000 f84e 	bl	800483c <mbed::SerialBase::SerialBase(PinName, PinName, int)>
 80047a0:	4b01      	ldr	r3, [pc, #4]	; (80047a8 <mbed::RawSerial::RawSerial(PinName, PinName, int)+0x10>)
 80047a2:	6023      	str	r3, [r4, #0]
 80047a4:	4620      	mov	r0, r4
 80047a6:	bd10      	pop	{r4, pc}
 80047a8:	08006718 	.word	0x08006718

080047ac <mbed::RawSerial::~RawSerial()>:
 80047ac:	b510      	push	{r4, lr}
 80047ae:	4b03      	ldr	r3, [pc, #12]	; (80047bc <mbed::RawSerial::~RawSerial()+0x10>)
 80047b0:	6003      	str	r3, [r0, #0]
 80047b2:	4604      	mov	r4, r0
 80047b4:	f7fc fd24 	bl	8001200 <mbed::SerialBase::~SerialBase()>
 80047b8:	4620      	mov	r0, r4
 80047ba:	bd10      	pop	{r4, pc}
 80047bc:	08006718 	.word	0x08006718

080047c0 <mbed::RawSerial::~RawSerial()>:
 80047c0:	b510      	push	{r4, lr}
 80047c2:	4604      	mov	r4, r0
 80047c4:	f7ff fff2 	bl	80047ac <mbed::RawSerial::~RawSerial()>
 80047c8:	4620      	mov	r0, r4
 80047ca:	f000 fa47 	bl	8004c5c <operator delete(void*)>
 80047ce:	4620      	mov	r0, r4
 80047d0:	bd10      	pop	{r4, pc}

080047d2 <mbed::donothing()>:
 80047d2:	4770      	bx	lr

080047d4 <mbed::SerialBase::lock()>:
 80047d4:	4770      	bx	lr

080047d6 <mbed::SerialBase::unlock()>:
 80047d6:	4770      	bx	lr

080047d8 <mbed::SerialBase::_irq_handler(unsigned long, SerialIrq)>:
 80047d8:	eb00 1201 	add.w	r2, r0, r1, lsl #4
 80047dc:	f102 0098 	add.w	r0, r2, #152	; 0x98
 80047e0:	f8d2 30a4 	ldr.w	r3, [r2, #164]	; 0xa4
 80047e4:	681b      	ldr	r3, [r3, #0]
 80047e6:	4718      	bx	r3

080047e8 <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))>:
 80047e8:	b410      	push	{r4}
 80047ea:	b180      	cbz	r0, 800480e <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))+0x26>
 80047ec:	6814      	ldr	r4, [r2, #0]
 80047ee:	6853      	ldr	r3, [r2, #4]
 80047f0:	b90c      	cbnz	r4, 80047f6 <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))+0xe>
 80047f2:	07da      	lsls	r2, r3, #31
 80047f4:	d50b      	bpl.n	800480e <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))+0x26>
 80047f6:	f013 0f01 	tst.w	r3, #1
 80047fa:	ea4f 0363 	mov.w	r3, r3, asr #1
 80047fe:	bf1c      	itt	ne
 8004800:	58c2      	ldrne	r2, [r0, r3]
 8004802:	5914      	ldrne	r4, [r2, r4]
 8004804:	4418      	add	r0, r3
 8004806:	4623      	mov	r3, r4
 8004808:	f85d 4b04 	ldr.w	r4, [sp], #4
 800480c:	4718      	bx	r3
 800480e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8004812:	4770      	bx	lr

08004814 <mbed::SerialBase::baud(int)>:
 8004814:	b570      	push	{r4, r5, r6, lr}
 8004816:	4605      	mov	r5, r0
 8004818:	4604      	mov	r4, r0
 800481a:	f855 3b4c 	ldr.w	r3, [r5], #76
 800481e:	460e      	mov	r6, r1
 8004820:	681b      	ldr	r3, [r3, #0]
 8004822:	4798      	blx	r3
 8004824:	4628      	mov	r0, r5
 8004826:	4631      	mov	r1, r6
 8004828:	f7fe ff8a 	bl	8003740 <serial_baud>
 800482c:	6823      	ldr	r3, [r4, #0]
 800482e:	f8c4 60b8 	str.w	r6, [r4, #184]	; 0xb8
 8004832:	4620      	mov	r0, r4
 8004834:	685b      	ldr	r3, [r3, #4]
 8004836:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800483a:	4718      	bx	r3

0800483c <mbed::SerialBase::SerialBase(PinName, PinName, int)>:
 800483c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004840:	b087      	sub	sp, #28
 8004842:	2500      	movs	r5, #0
 8004844:	4691      	mov	r9, r2
 8004846:	9500      	str	r5, [sp, #0]
 8004848:	4602      	mov	r2, r0
 800484a:	9501      	str	r5, [sp, #4]
 800484c:	4604      	mov	r4, r0
 800484e:	4688      	mov	r8, r1
 8004850:	461f      	mov	r7, r3
 8004852:	e89d 0003 	ldmia.w	sp, {r0, r1}
 8004856:	4b27      	ldr	r3, [pc, #156]	; (80048f4 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xb8>)
 8004858:	f842 3b08 	str.w	r3, [r2], #8
 800485c:	4b26      	ldr	r3, [pc, #152]	; (80048f8 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xbc>)
 800485e:	e882 0003 	stmia.w	r2, {r0, r1}
 8004862:	6123      	str	r3, [r4, #16]
 8004864:	f248 0307 	movw	r3, #32775	; 0x8007
 8004868:	6163      	str	r3, [r4, #20]
 800486a:	4b24      	ldr	r3, [pc, #144]	; (80048fc <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xc0>)
 800486c:	61e5      	str	r5, [r4, #28]
 800486e:	61a4      	str	r4, [r4, #24]
 8004870:	6222      	str	r2, [r4, #32]
 8004872:	6263      	str	r3, [r4, #36]	; 0x24
 8004874:	f3bf 8f6f 	isb	sy
 8004878:	f3bf 8f4f 	dsb	sy
 800487c:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8004880:	224c      	movs	r2, #76	; 0x4c
 8004882:	6365      	str	r5, [r4, #52]	; 0x34
 8004884:	6465      	str	r5, [r4, #68]	; 0x44
 8004886:	f884 5048 	strb.w	r5, [r4, #72]	; 0x48
 800488a:	f884 5049 	strb.w	r5, [r4, #73]	; 0x49
 800488e:	4630      	mov	r0, r6
 8004890:	f000 ff23 	bl	80056da <memset>
 8004894:	a902      	add	r1, sp, #8
 8004896:	f8c4 50a4 	str.w	r5, [r4, #164]	; 0xa4
 800489a:	f8c4 50b4 	str.w	r5, [r4, #180]	; 0xb4
 800489e:	f8c4 70b8 	str.w	r7, [r4, #184]	; 0xb8
 80048a2:	4d17      	ldr	r5, [pc, #92]	; (8004900 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xc4>)
 80048a4:	4f17      	ldr	r7, [pc, #92]	; (8004904 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xc8>)
 80048a6:	9702      	str	r7, [sp, #8]
 80048a8:	f104 0098 	add.w	r0, r4, #152	; 0x98
 80048ac:	9505      	str	r5, [sp, #20]
 80048ae:	f7ff ff60 	bl	8004772 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 80048b2:	a802      	add	r0, sp, #8
 80048b4:	f7fc fc61 	bl	800117a <mbed::Callback<void ()>::~Callback()>
 80048b8:	a902      	add	r1, sp, #8
 80048ba:	f104 00a8 	add.w	r0, r4, #168	; 0xa8
 80048be:	9702      	str	r7, [sp, #8]
 80048c0:	9505      	str	r5, [sp, #20]
 80048c2:	f7ff ff56 	bl	8004772 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 80048c6:	a802      	add	r0, sp, #8
 80048c8:	f7fc fc57 	bl	800117a <mbed::Callback<void ()>::~Callback()>
 80048cc:	464a      	mov	r2, r9
 80048ce:	4641      	mov	r1, r8
 80048d0:	4630      	mov	r0, r6
 80048d2:	f7fe fe97 	bl	8003604 <serial_init>
 80048d6:	f8d4 10b8 	ldr.w	r1, [r4, #184]	; 0xb8
 80048da:	4630      	mov	r0, r6
 80048dc:	f7fe ff30 	bl	8003740 <serial_baud>
 80048e0:	4630      	mov	r0, r6
 80048e2:	4622      	mov	r2, r4
 80048e4:	4908      	ldr	r1, [pc, #32]	; (8004908 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xcc>)
 80048e6:	f7fe ff2f 	bl	8003748 <serial_irq_handler>
 80048ea:	4620      	mov	r0, r4
 80048ec:	b007      	add	sp, #28
 80048ee:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80048f2:	bf00      	nop
 80048f4:	08006730 	.word	0x08006730
 80048f8:	e890a001 	.word	0xe890a001
 80048fc:	080047e9 	.word	0x080047e9
 8004900:	08006704 	.word	0x08006704
 8004904:	080047d3 	.word	0x080047d3
 8004908:	080047d9 	.word	0x080047d9

0800490c <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>:
 800490c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8004910:	4605      	mov	r5, r0
 8004912:	4688      	mov	r8, r1
 8004914:	f855 3b4c 	ldr.w	r3, [r5], #76
 8004918:	681b      	ldr	r3, [r3, #0]
 800491a:	4604      	mov	r4, r0
 800491c:	4616      	mov	r6, r2
 800491e:	4798      	blx	r3
 8004920:	f7fc fec8 	bl	80016b4 <core_util_critical_section_enter>
 8004924:	f8d8 700c 	ldr.w	r7, [r8, #12]
 8004928:	0130      	lsls	r0, r6, #4
 800492a:	b197      	cbz	r7, 8004952 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x46>
 800492c:	3098      	adds	r0, #152	; 0x98
 800492e:	4641      	mov	r1, r8
 8004930:	4420      	add	r0, r4
 8004932:	f7ff ff1e 	bl	8004772 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8004936:	2201      	movs	r2, #1
 8004938:	4631      	mov	r1, r6
 800493a:	4628      	mov	r0, r5
 800493c:	f7fe ff10 	bl	8003760 <serial_irq_set>
 8004940:	f7fc fece 	bl	80016e0 <core_util_critical_section_exit>
 8004944:	6823      	ldr	r3, [r4, #0]
 8004946:	4620      	mov	r0, r4
 8004948:	685b      	ldr	r3, [r3, #4]
 800494a:	4798      	blx	r3
 800494c:	b004      	add	sp, #16
 800494e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004952:	4b07      	ldr	r3, [pc, #28]	; (8004970 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x64>)
 8004954:	9300      	str	r3, [sp, #0]
 8004956:	3098      	adds	r0, #152	; 0x98
 8004958:	4b06      	ldr	r3, [pc, #24]	; (8004974 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x68>)
 800495a:	9303      	str	r3, [sp, #12]
 800495c:	4669      	mov	r1, sp
 800495e:	4420      	add	r0, r4
 8004960:	f7ff ff07 	bl	8004772 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8004964:	4668      	mov	r0, sp
 8004966:	f7fc fc08 	bl	800117a <mbed::Callback<void ()>::~Callback()>
 800496a:	463a      	mov	r2, r7
 800496c:	e7e4      	b.n	8004938 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x2c>
 800496e:	bf00      	nop
 8004970:	080047d3 	.word	0x080047d3
 8004974:	08006704 	.word	0x08006704

08004978 <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()>:
 8004978:	b538      	push	{r3, r4, r5, lr}
 800497a:	4604      	mov	r4, r0
 800497c:	b148      	cbz	r0, 8004992 <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x1a>
 800497e:	3058      	adds	r0, #88	; 0x58
 8004980:	42a0      	cmp	r0, r4
 8004982:	d006      	beq.n	8004992 <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x1a>
 8004984:	f1a0 052c 	sub.w	r5, r0, #44	; 0x2c
 8004988:	3814      	subs	r0, #20
 800498a:	f7fc fc30 	bl	80011ee <mbed::Callback<void (int)>::~Callback()>
 800498e:	4628      	mov	r0, r5
 8004990:	e7f6      	b.n	8004980 <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x8>
 8004992:	4620      	mov	r0, r4
 8004994:	bd38      	pop	{r3, r4, r5, pc}
	...

08004998 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE>:
 8004998:	b570      	push	{r4, r5, r6, lr}
 800499a:	4c0e      	ldr	r4, [pc, #56]	; (80049d4 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x3c>)
 800499c:	4620      	mov	r0, r4
 800499e:	2500      	movs	r5, #0
 80049a0:	2628      	movs	r6, #40	; 0x28
 80049a2:	4632      	mov	r2, r6
 80049a4:	4629      	mov	r1, r5
 80049a6:	f840 5b04 	str.w	r5, [r0], #4
 80049aa:	f000 fe96 	bl	80056da <memset>
 80049ae:	4632      	mov	r2, r6
 80049b0:	4629      	mov	r1, r5
 80049b2:	f104 0030 	add.w	r0, r4, #48	; 0x30
 80049b6:	62e5      	str	r5, [r4, #44]	; 0x2c
 80049b8:	f000 fe8f 	bl	80056da <memset>
 80049bc:	65a5      	str	r5, [r4, #88]	; 0x58
 80049be:	4620      	mov	r0, r4
 80049c0:	65e5      	str	r5, [r4, #92]	; 0x5c
 80049c2:	4a05      	ldr	r2, [pc, #20]	; (80049d8 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x40>)
 80049c4:	f884 5060 	strb.w	r5, [r4, #96]	; 0x60
 80049c8:	4904      	ldr	r1, [pc, #16]	; (80049dc <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x44>)
 80049ca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80049ce:	f000 b927 	b.w	8004c20 <__aeabi_atexit>
 80049d2:	bf00      	nop
 80049d4:	20001d38 	.word	0x20001d38
 80049d8:	20000194 	.word	0x20000194
 80049dc:	08004979 	.word	0x08004979

080049e0 <__wrap__malloc_r>:
 80049e0:	f000 bed2 	b.w	8005788 <_malloc_r>

080049e4 <__wrap__realloc_r>:
 80049e4:	f000 bf2e 	b.w	8005844 <_realloc_r>

080049e8 <__wrap__free_r>:
 80049e8:	f000 be80 	b.w	80056ec <_free_r>

080049ec <wait_us>:
 80049ec:	b570      	push	{r4, r5, r6, lr}
 80049ee:	4605      	mov	r5, r0
 80049f0:	f7fe faa8 	bl	8002f44 <us_ticker_read>
 80049f4:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 80049f8:	fb95 f4f4 	sdiv	r4, r5, r4
 80049fc:	2c00      	cmp	r4, #0
 80049fe:	4606      	mov	r6, r0
 8004a00:	dd02      	ble.n	8004a08 <wait_us+0x1c>
 8004a02:	f7fc fe51 	bl	80016a8 <core_util_are_interrupts_enabled>
 8004a06:	b928      	cbnz	r0, 8004a14 <wait_us+0x28>
 8004a08:	f7fe fa9c 	bl	8002f44 <us_ticker_read>
 8004a0c:	1b80      	subs	r0, r0, r6
 8004a0e:	42a8      	cmp	r0, r5
 8004a10:	d3fa      	bcc.n	8004a08 <wait_us+0x1c>
 8004a12:	bd70      	pop	{r4, r5, r6, pc}
 8004a14:	4620      	mov	r0, r4
 8004a16:	f000 f92b 	bl	8004c70 <rtos::Thread::wait(unsigned long)>
 8004a1a:	e7f5      	b.n	8004a08 <wait_us+0x1c>

08004a1c <wait_ms>:
 8004a1c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8004a20:	4358      	muls	r0, r3
 8004a22:	f7ff bfe3 	b.w	80049ec <wait_us>
	...

08004a28 <init_serial()>:
 8004a28:	b508      	push	{r3, lr}
 8004a2a:	4b08      	ldr	r3, [pc, #32]	; (8004a4c <init_serial()+0x24>)
 8004a2c:	681b      	ldr	r3, [r3, #0]
 8004a2e:	b95b      	cbnz	r3, 8004a48 <init_serial()+0x20>
 8004a30:	2102      	movs	r1, #2
 8004a32:	4807      	ldr	r0, [pc, #28]	; (8004a50 <init_serial()+0x28>)
 8004a34:	2203      	movs	r2, #3
 8004a36:	f7fe fde5 	bl	8003604 <serial_init>
 8004a3a:	f44f 5116 	mov.w	r1, #9600	; 0x2580
 8004a3e:	4804      	ldr	r0, [pc, #16]	; (8004a50 <init_serial()+0x28>)
 8004a40:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8004a44:	f7fe be7c 	b.w	8003740 <serial_baud>
 8004a48:	bd08      	pop	{r3, pc}
 8004a4a:	bf00      	nop
 8004a4c:	20001b34 	.word	0x20001b34
 8004a50:	2000294c 	.word	0x2000294c

08004a54 <_close>:
 8004a54:	2802      	cmp	r0, #2
 8004a56:	b510      	push	{r4, lr}
 8004a58:	4604      	mov	r4, r0
 8004a5a:	dc01      	bgt.n	8004a60 <_close+0xc>
 8004a5c:	2000      	movs	r0, #0
 8004a5e:	bd10      	pop	{r4, pc}
 8004a60:	f000 fbf8 	bl	8005254 <__errno>
 8004a64:	2309      	movs	r3, #9
 8004a66:	6003      	str	r3, [r0, #0]
 8004a68:	3c03      	subs	r4, #3
 8004a6a:	4b09      	ldr	r3, [pc, #36]	; (8004a90 <_close+0x3c>)
 8004a6c:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8004a70:	2200      	movs	r2, #0
 8004a72:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 8004a76:	b140      	cbz	r0, 8004a8a <_close+0x36>
 8004a78:	6803      	ldr	r3, [r0, #0]
 8004a7a:	691b      	ldr	r3, [r3, #16]
 8004a7c:	4798      	blx	r3
 8004a7e:	1e04      	subs	r4, r0, #0
 8004a80:	daec      	bge.n	8004a5c <_close+0x8>
 8004a82:	f000 fbe7 	bl	8005254 <__errno>
 8004a86:	4264      	negs	r4, r4
 8004a88:	6004      	str	r4, [r0, #0]
 8004a8a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004a8e:	bd10      	pop	{r4, pc}
 8004a90:	20001d9c 	.word	0x20001d9c

08004a94 <_write>:
 8004a94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004a96:	4605      	mov	r5, r0
 8004a98:	460e      	mov	r6, r1
 8004a9a:	4614      	mov	r4, r2
 8004a9c:	f000 fbda 	bl	8005254 <__errno>
 8004aa0:	2309      	movs	r3, #9
 8004aa2:	2d02      	cmp	r5, #2
 8004aa4:	6003      	str	r3, [r0, #0]
 8004aa6:	dc0f      	bgt.n	8004ac8 <_write+0x34>
 8004aa8:	4b12      	ldr	r3, [pc, #72]	; (8004af4 <_write+0x60>)
 8004aaa:	681b      	ldr	r3, [r3, #0]
 8004aac:	b90b      	cbnz	r3, 8004ab2 <_write+0x1e>
 8004aae:	f7ff ffbb 	bl	8004a28 <init_serial()>
 8004ab2:	4635      	mov	r5, r6
 8004ab4:	1937      	adds	r7, r6, r4
 8004ab6:	4e10      	ldr	r6, [pc, #64]	; (8004af8 <_write+0x64>)
 8004ab8:	42bd      	cmp	r5, r7
 8004aba:	d015      	beq.n	8004ae8 <_write+0x54>
 8004abc:	f815 1b01 	ldrb.w	r1, [r5], #1
 8004ac0:	4630      	mov	r0, r6
 8004ac2:	f7fe febf 	bl	8003844 <serial_putc>
 8004ac6:	e7f7      	b.n	8004ab8 <_write+0x24>
 8004ac8:	3d03      	subs	r5, #3
 8004aca:	4b0c      	ldr	r3, [pc, #48]	; (8004afc <_write+0x68>)
 8004acc:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8004ad0:	b160      	cbz	r0, 8004aec <_write+0x58>
 8004ad2:	6803      	ldr	r3, [r0, #0]
 8004ad4:	4622      	mov	r2, r4
 8004ad6:	68db      	ldr	r3, [r3, #12]
 8004ad8:	4631      	mov	r1, r6
 8004ada:	4798      	blx	r3
 8004adc:	1e04      	subs	r4, r0, #0
 8004ade:	da03      	bge.n	8004ae8 <_write+0x54>
 8004ae0:	f000 fbb8 	bl	8005254 <__errno>
 8004ae4:	4263      	negs	r3, r4
 8004ae6:	6003      	str	r3, [r0, #0]
 8004ae8:	4620      	mov	r0, r4
 8004aea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004aec:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8004af0:	e7fa      	b.n	8004ae8 <_write+0x54>
 8004af2:	bf00      	nop
 8004af4:	20001b34 	.word	0x20001b34
 8004af8:	2000294c 	.word	0x2000294c
 8004afc:	20001d9c 	.word	0x20001d9c

08004b00 <_read>:
 8004b00:	b570      	push	{r4, r5, r6, lr}
 8004b02:	4604      	mov	r4, r0
 8004b04:	460d      	mov	r5, r1
 8004b06:	4616      	mov	r6, r2
 8004b08:	f000 fba4 	bl	8005254 <__errno>
 8004b0c:	2309      	movs	r3, #9
 8004b0e:	2c02      	cmp	r4, #2
 8004b10:	6003      	str	r3, [r0, #0]
 8004b12:	dc0b      	bgt.n	8004b2c <_read+0x2c>
 8004b14:	4b0f      	ldr	r3, [pc, #60]	; (8004b54 <_read+0x54>)
 8004b16:	681b      	ldr	r3, [r3, #0]
 8004b18:	b90b      	cbnz	r3, 8004b1e <_read+0x1e>
 8004b1a:	f7ff ff85 	bl	8004a28 <init_serial()>
 8004b1e:	480e      	ldr	r0, [pc, #56]	; (8004b58 <_read+0x58>)
 8004b20:	f7fe fe74 	bl	800380c <serial_getc>
 8004b24:	2401      	movs	r4, #1
 8004b26:	7028      	strb	r0, [r5, #0]
 8004b28:	4620      	mov	r0, r4
 8004b2a:	bd70      	pop	{r4, r5, r6, pc}
 8004b2c:	3c03      	subs	r4, #3
 8004b2e:	4b0b      	ldr	r3, [pc, #44]	; (8004b5c <_read+0x5c>)
 8004b30:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8004b34:	b158      	cbz	r0, 8004b4e <_read+0x4e>
 8004b36:	6803      	ldr	r3, [r0, #0]
 8004b38:	4632      	mov	r2, r6
 8004b3a:	689b      	ldr	r3, [r3, #8]
 8004b3c:	4629      	mov	r1, r5
 8004b3e:	4798      	blx	r3
 8004b40:	1e04      	subs	r4, r0, #0
 8004b42:	daf1      	bge.n	8004b28 <_read+0x28>
 8004b44:	f000 fb86 	bl	8005254 <__errno>
 8004b48:	4263      	negs	r3, r4
 8004b4a:	6003      	str	r3, [r0, #0]
 8004b4c:	e7ec      	b.n	8004b28 <_read+0x28>
 8004b4e:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8004b52:	e7e9      	b.n	8004b28 <_read+0x28>
 8004b54:	20001b34 	.word	0x20001b34
 8004b58:	2000294c 	.word	0x2000294c
 8004b5c:	20001d9c 	.word	0x20001d9c

08004b60 <_lseek>:
 8004b60:	b570      	push	{r4, r5, r6, lr}
 8004b62:	4604      	mov	r4, r0
 8004b64:	460d      	mov	r5, r1
 8004b66:	4616      	mov	r6, r2
 8004b68:	f000 fb74 	bl	8005254 <__errno>
 8004b6c:	2309      	movs	r3, #9
 8004b6e:	2c02      	cmp	r4, #2
 8004b70:	6003      	str	r3, [r0, #0]
 8004b72:	dd0b      	ble.n	8004b8c <_lseek+0x2c>
 8004b74:	3c03      	subs	r4, #3
 8004b76:	4b08      	ldr	r3, [pc, #32]	; (8004b98 <_lseek+0x38>)
 8004b78:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8004b7c:	b140      	cbz	r0, 8004b90 <_lseek+0x30>
 8004b7e:	6803      	ldr	r3, [r0, #0]
 8004b80:	4632      	mov	r2, r6
 8004b82:	4629      	mov	r1, r5
 8004b84:	69db      	ldr	r3, [r3, #28]
 8004b86:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8004b8a:	4718      	bx	r3
 8004b8c:	2000      	movs	r0, #0
 8004b8e:	bd70      	pop	{r4, r5, r6, pc}
 8004b90:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004b94:	bd70      	pop	{r4, r5, r6, pc}
 8004b96:	bf00      	nop
 8004b98:	20001d9c 	.word	0x20001d9c

08004b9c <software_init_hook>:
 8004b9c:	b508      	push	{r3, lr}
 8004b9e:	f7fe fe63 	bl	8003868 <mbed_sdk_init>
 8004ba2:	f7fc fe2f 	bl	8001804 <software_init_hook_rtos>
 8004ba6:	bd08      	pop	{r3, pc}

08004ba8 <mbed_main>:
 8004ba8:	4770      	bx	lr

08004baa <__wrap_main>:
 8004baa:	b508      	push	{r3, lr}
 8004bac:	f7ff fffc 	bl	8004ba8 <mbed_main>
 8004bb0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8004bb4:	f7fc b9bc 	b.w	8000f30 <main>

08004bb8 <_sbrk>:
 8004bb8:	4a0c      	ldr	r2, [pc, #48]	; (8004bec <_sbrk+0x34>)
 8004bba:	6813      	ldr	r3, [r2, #0]
 8004bbc:	b510      	push	{r4, lr}
 8004bbe:	4418      	add	r0, r3
 8004bc0:	f3ef 8108 	mrs	r1, MSP
 8004bc4:	4288      	cmp	r0, r1
 8004bc6:	d305      	bcc.n	8004bd4 <_sbrk+0x1c>
 8004bc8:	4b09      	ldr	r3, [pc, #36]	; (8004bf0 <_sbrk+0x38>)
 8004bca:	220c      	movs	r2, #12
 8004bcc:	601a      	str	r2, [r3, #0]
 8004bce:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004bd2:	bd10      	pop	{r4, pc}
 8004bd4:	4907      	ldr	r1, [pc, #28]	; (8004bf4 <_sbrk+0x3c>)
 8004bd6:	680c      	ldr	r4, [r1, #0]
 8004bd8:	b124      	cbz	r4, 8004be4 <_sbrk+0x2c>
 8004bda:	4907      	ldr	r1, [pc, #28]	; (8004bf8 <_sbrk+0x40>)
 8004bdc:	6809      	ldr	r1, [r1, #0]
 8004bde:	4421      	add	r1, r4
 8004be0:	4288      	cmp	r0, r1
 8004be2:	d2f1      	bcs.n	8004bc8 <_sbrk+0x10>
 8004be4:	6010      	str	r0, [r2, #0]
 8004be6:	4618      	mov	r0, r3
 8004be8:	bd10      	pop	{r4, pc}
 8004bea:	bf00      	nop
 8004bec:	200001b4 	.word	0x200001b4
 8004bf0:	2000299c 	.word	0x2000299c
 8004bf4:	20001e9c 	.word	0x20001e9c
 8004bf8:	20001ea0 	.word	0x20001ea0

08004bfc <_exit>:
 8004bfc:	4c07      	ldr	r4, [pc, #28]	; (8004c1c <_exit+0x20>)
 8004bfe:	b508      	push	{r3, lr}
 8004c00:	6823      	ldr	r3, [r4, #0]
 8004c02:	4605      	mov	r5, r0
 8004c04:	6898      	ldr	r0, [r3, #8]
 8004c06:	f000 fbdd 	bl	80053c4 <fflush>
 8004c0a:	6823      	ldr	r3, [r4, #0]
 8004c0c:	68d8      	ldr	r0, [r3, #12]
 8004c0e:	f000 fbd9 	bl	80053c4 <fflush>
 8004c12:	b10d      	cbz	r5, 8004c18 <_exit+0x1c>
 8004c14:	f7fc fd7d 	bl	8001712 <mbed_die>
 8004c18:	e7fe      	b.n	8004c18 <_exit+0x1c>
 8004c1a:	bf00      	nop
 8004c1c:	200001b8 	.word	0x200001b8

08004c20 <__aeabi_atexit>:
 8004c20:	2001      	movs	r0, #1
 8004c22:	4770      	bx	lr

08004c24 <__wrap_exit>:
 8004c24:	b508      	push	{r3, lr}
 8004c26:	f7ff ffe9 	bl	8004bfc <_exit>

08004c2a <__malloc_lock>:
 8004c2a:	b508      	push	{r3, lr}
 8004c2c:	f7fc fdf8 	bl	8001820 <__rtos_malloc_lock>
 8004c30:	bd08      	pop	{r3, pc}

08004c32 <__malloc_unlock>:
 8004c32:	b508      	push	{r3, lr}
 8004c34:	f7fc fdfc 	bl	8001830 <__rtos_malloc_unlock>
 8004c38:	bd08      	pop	{r3, pc}
	...

08004c3c <operator new[](unsigned int)>:
 8004c3c:	b510      	push	{r4, lr}
 8004c3e:	f000 fcc1 	bl	80055c4 <malloc>
 8004c42:	4604      	mov	r4, r0
 8004c44:	b910      	cbnz	r0, 8004c4c <operator new[](unsigned int)+0x10>
 8004c46:	4802      	ldr	r0, [pc, #8]	; (8004c50 <operator new[](unsigned int)+0x14>)
 8004c48:	f7fc fd5e 	bl	8001708 <error>
 8004c4c:	4620      	mov	r0, r4
 8004c4e:	bd10      	pop	{r4, pc}
 8004c50:	08006740 	.word	0x08006740

08004c54 <operator delete[](void*)>:
 8004c54:	b108      	cbz	r0, 8004c5a <operator delete[](void*)+0x6>
 8004c56:	f000 bcbd 	b.w	80055d4 <free>
 8004c5a:	4770      	bx	lr

08004c5c <operator delete(void*)>:
 8004c5c:	f7ff bffa 	b.w	8004c54 <operator delete[](void*)>

08004c60 <thread_terminate_hook>:
 8004c60:	4b02      	ldr	r3, [pc, #8]	; (8004c6c <thread_terminate_hook+0xc>)
 8004c62:	681b      	ldr	r3, [r3, #0]
 8004c64:	b103      	cbz	r3, 8004c68 <thread_terminate_hook+0x8>
 8004c66:	4718      	bx	r3
 8004c68:	4770      	bx	lr
 8004c6a:	bf00      	nop
 8004c6c:	20001ea4 	.word	0x20001ea4

08004c70 <rtos::Thread::wait(unsigned long)>:
 8004c70:	f7fd bb52 	b.w	8002318 <osDelay>

08004c74 <rt_set_PSP>:
 8004c74:	f380 8809 	msr	PSP, r0
 8004c78:	4770      	bx	lr

08004c7a <rt_get_PSP>:
 8004c7a:	f3ef 8009 	mrs	r0, PSP
 8004c7e:	4770      	bx	lr

08004c80 <os_set_env>:
 8004c80:	4668      	mov	r0, sp
 8004c82:	f380 8809 	msr	PSP, r0
 8004c86:	485a      	ldr	r0, [pc, #360]	; (8004df0 <OS_Tick_Handler+0x10>)
 8004c88:	7800      	ldrb	r0, [r0, #0]
 8004c8a:	07c0      	lsls	r0, r0, #31
 8004c8c:	bf14      	ite	ne
 8004c8e:	2002      	movne	r0, #2
 8004c90:	2003      	moveq	r0, #3
 8004c92:	f380 8814 	msr	CONTROL, r0
 8004c96:	4770      	bx	lr

08004c98 <_alloc_box>:
 8004c98:	f8df c158 	ldr.w	r12, [pc, #344]	; 8004df4 <OS_Tick_Handler+0x14>
 8004c9c:	f3ef 8305 	mrs	r3, IPSR
 8004ca0:	061b      	lsls	r3, r3, #24
 8004ca2:	bf18      	it	ne
 8004ca4:	4760      	bxne	r12
 8004ca6:	f3ef 8314 	mrs	r3, CONTROL
 8004caa:	07db      	lsls	r3, r3, #31
 8004cac:	bf08      	it	eq
 8004cae:	4760      	bxeq	r12
 8004cb0:	df00      	svc	0
 8004cb2:	4770      	bx	lr

08004cb4 <_free_box>:
 8004cb4:	f8df c140 	ldr.w	r12, [pc, #320]	; 8004df8 <OS_Tick_Handler+0x18>
 8004cb8:	f3ef 8305 	mrs	r3, IPSR
 8004cbc:	061b      	lsls	r3, r3, #24
 8004cbe:	bf18      	it	ne
 8004cc0:	4760      	bxne	r12
 8004cc2:	f3ef 8314 	mrs	r3, CONTROL
 8004cc6:	07db      	lsls	r3, r3, #31
 8004cc8:	bf08      	it	eq
 8004cca:	4760      	bxeq	r12
 8004ccc:	df00      	svc	0
 8004cce:	4770      	bx	lr

08004cd0 <SVC_Handler>:
 8004cd0:	f3ef 8009 	mrs	r0, PSP
 8004cd4:	6981      	ldr	r1, [r0, #24]
 8004cd6:	f811 1c02 	ldrb.w	r1, [r1, #-2]
 8004cda:	bbe1      	cbnz	r1, 8004d56 <SVC_User>
 8004cdc:	e890 100f 	ldmia.w	r0, {r0, r1, r2, r3, r12}
 8004ce0:	b510      	push	{r4, lr}
 8004ce2:	47e0      	blx	r12
 8004ce4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004ce8:	f3ef 8c09 	mrs	r12, PSP
 8004cec:	e88c 0007 	stmia.w	r12, {r0, r1, r2}
 8004cf0:	4b42      	ldr	r3, [pc, #264]	; (8004dfc <OS_Tick_Handler+0x1c>)
 8004cf2:	e893 0006 	ldmia.w	r3, {r1, r2}
 8004cf6:	4291      	cmp	r1, r2
 8004cf8:	bf08      	it	eq
 8004cfa:	4770      	bxeq	lr
 8004cfc:	b941      	cbnz	r1, 8004d10 <SVC_ContextSave>
 8004cfe:	f01e 0f10 	tst.w	lr, #16
 8004d02:	d116      	bne.n	8004d32 <SVC_ContextRestore>
 8004d04:	493e      	ldr	r1, [pc, #248]	; (8004e00 <OS_Tick_Handler+0x20>)
 8004d06:	6808      	ldr	r0, [r1, #0]
 8004d08:	f020 0001 	bic.w	r0, r0, #1
 8004d0c:	6008      	str	r0, [r1, #0]
 8004d0e:	e010      	b.n	8004d32 <SVC_ContextRestore>

08004d10 <SVC_ContextSave>:
 8004d10:	f01e 0f10 	tst.w	lr, #16
 8004d14:	bf06      	itte	eq
 8004d16:	ed2c 8a10 	vstmdbeq	r12!, {s16-s31}
 8004d1a:	2001      	moveq	r0, #1
 8004d1c:	2000      	movne	r0, #0
 8004d1e:	f881 0025 	strb.w	r0, [r1, #37]	; 0x25
 8004d22:	e92c 0ff0 	stmdb	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 8004d26:	f8c1 c02c 	str.w	r12, [r1, #44]	; 0x2c
 8004d2a:	b40c      	push	{r2, r3}
 8004d2c:	f7fd f80a 	bl	8001d44 <rt_stk_check>
 8004d30:	bc0c      	pop	{r2, r3}

08004d32 <SVC_ContextRestore>:
 8004d32:	601a      	str	r2, [r3, #0]
 8004d34:	f8d2 c02c 	ldr.w	r12, [r2, #44]	; 0x2c
 8004d38:	e8bc 0ff0 	ldmia.w	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 8004d3c:	f892 0025 	ldrb.w	r0, [r2, #37]	; 0x25
 8004d40:	2800      	cmp	r0, #0
 8004d42:	bf0e      	itee	eq
 8004d44:	f06f 0e02 	mvneq.w	lr, #2
 8004d48:	f06f 0e12 	mvnne.w	lr, #18
 8004d4c:	ecbc 8a10 	vldmiane	r12!, {s16-s31}
 8004d50:	f38c 8809 	msr	PSP, r12

08004d54 <SVC_Exit>:
 8004d54:	4770      	bx	lr

08004d56 <SVC_User>:
 8004d56:	b510      	push	{r4, lr}
 8004d58:	4a2a      	ldr	r2, [pc, #168]	; (8004e04 <OS_Tick_Handler+0x24>)
 8004d5a:	6812      	ldr	r2, [r2, #0]
 8004d5c:	4291      	cmp	r1, r2
 8004d5e:	d809      	bhi.n	8004d74 <SVC_Done>
 8004d60:	4c29      	ldr	r4, [pc, #164]	; (8004e08 <OS_Tick_Handler+0x28>)
 8004d62:	f854 4021 	ldr.w	r4, [r4, r1, lsl #2]
 8004d66:	e890 100f 	ldmia.w	r0, {r0, r1, r2, r3, r12}
 8004d6a:	47a0      	blx	r4
 8004d6c:	f3ef 8c09 	mrs	r12, PSP
 8004d70:	e88c 000f 	stmia.w	r12, {r0, r1, r2, r3}

08004d74 <SVC_Done>:
 8004d74:	bd10      	pop	{r4, pc}

08004d76 <PendSV_Handler>:
 8004d76:	b510      	push	{r4, lr}
 8004d78:	f7fc ff70 	bl	8001c5c <rt_pop_req>

08004d7c <Sys_Switch>:
 8004d7c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004d80:	4b1e      	ldr	r3, [pc, #120]	; (8004dfc <OS_Tick_Handler+0x1c>)
 8004d82:	e893 0006 	ldmia.w	r3, {r1, r2}
 8004d86:	4291      	cmp	r1, r2
 8004d88:	bf08      	it	eq
 8004d8a:	4770      	bxeq	lr
 8004d8c:	f3ef 8c09 	mrs	r12, PSP
 8004d90:	f01e 0f10 	tst.w	lr, #16
 8004d94:	bf06      	itte	eq
 8004d96:	ed2c 8a10 	vstmdbeq	r12!, {s16-s31}
 8004d9a:	2001      	moveq	r0, #1
 8004d9c:	2000      	movne	r0, #0
 8004d9e:	f881 0025 	strb.w	r0, [r1, #37]	; 0x25
 8004da2:	e92c 0ff0 	stmdb	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 8004da6:	f8c1 c02c 	str.w	r12, [r1, #44]	; 0x2c
 8004daa:	b40c      	push	{r2, r3}
 8004dac:	f7fc ffca 	bl	8001d44 <rt_stk_check>
 8004db0:	bc0c      	pop	{r2, r3}
 8004db2:	601a      	str	r2, [r3, #0]
 8004db4:	f8d2 c02c 	ldr.w	r12, [r2, #44]	; 0x2c
 8004db8:	e8bc 0ff0 	ldmia.w	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 8004dbc:	f892 0025 	ldrb.w	r0, [r2, #37]	; 0x25
 8004dc0:	2800      	cmp	r0, #0
 8004dc2:	bf0e      	itee	eq
 8004dc4:	f06f 0e02 	mvneq.w	lr, #2
 8004dc8:	f06f 0e12 	mvnne.w	lr, #18
 8004dcc:	ecbc 8a10 	vldmiane	r12!, {s16-s31}
 8004dd0:	f38c 8809 	msr	PSP, r12

08004dd4 <Sys_Exit>:
 8004dd4:	4770      	bx	lr

08004dd6 <SysTick_Handler>:
 8004dd6:	b510      	push	{r4, lr}
 8004dd8:	f7fc ff96 	bl	8001d08 <rt_systick>
 8004ddc:	f7ff bfce 	b.w	8004d7c <Sys_Switch>

08004de0 <OS_Tick_Handler>:
 8004de0:	b510      	push	{r4, lr}
 8004de2:	f7fc ff8f 	bl	8001d04 <os_tick_irqack>
 8004de6:	f7fc ff8f 	bl	8001d08 <rt_systick>
 8004dea:	f7ff bfc7 	b.w	8004d7c <Sys_Switch>
 8004dee:	0000      	.short	0x0000
 8004df0:	080063d6 	.word	0x080063d6
 8004df4:	08001db3 	.word	0x08001db3
 8004df8:	08001dcd 	.word	0x08001dcd
 8004dfc:	200028c4 	.word	0x200028c4
 8004e00:	e000ef34 	.word	0xe000ef34
 8004e04:	00000000 	.word	0x00000000
 8004e08:	fffffffc 	.word	0xfffffffc

08004e0c <Reset_Handler>:
 8004e0c:	f8df d020 	ldr.w	sp, [pc, #32]	; 8004e30 <LoopCopyDataInit+0x14>
 8004e10:	2100      	movs	r1, #0
 8004e12:	e003      	b.n	8004e1c <LoopCopyDataInit>

08004e14 <CopyDataInit>:
 8004e14:	4b07      	ldr	r3, [pc, #28]	; (8004e34 <LoopCopyDataInit+0x18>)
 8004e16:	585b      	ldr	r3, [r3, r1]
 8004e18:	5043      	str	r3, [r0, r1]
 8004e1a:	3104      	adds	r1, #4

08004e1c <LoopCopyDataInit>:
 8004e1c:	4806      	ldr	r0, [pc, #24]	; (8004e38 <LoopCopyDataInit+0x1c>)
 8004e1e:	4b07      	ldr	r3, [pc, #28]	; (8004e3c <LoopCopyDataInit+0x20>)
 8004e20:	1842      	adds	r2, r0, r1
 8004e22:	429a      	cmp	r2, r3
 8004e24:	d3f6      	bcc.n	8004e14 <CopyDataInit>
 8004e26:	f7fe fdfd 	bl	8003a24 <SystemInit>
 8004e2a:	f7fc fb69 	bl	8001500 <_start>
 8004e2e:	4770      	bx	lr
 8004e30:	20018000 	.word	0x20018000
 8004e34:	08006804 	.word	0x08006804
 8004e38:	20000194 	.word	0x20000194
 8004e3c:	20000230 	.word	0x20000230

08004e40 <ADC_IRQHandler>:
 8004e40:	e7fe      	b.n	8004e40 <ADC_IRQHandler>
	...

08004e44 <__aeabi_drsub>:
 8004e44:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8004e48:	e002      	b.n	8004e50 <__adddf3>
 8004e4a:	bf00      	nop

08004e4c <__aeabi_dsub>:
 8004e4c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08004e50 <__adddf3>:
 8004e50:	b530      	push	{r4, r5, lr}
 8004e52:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8004e56:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8004e5a:	ea94 0f05 	teq	r4, r5
 8004e5e:	bf08      	it	eq
 8004e60:	ea90 0f02 	teqeq	r0, r2
 8004e64:	bf1f      	itttt	ne
 8004e66:	ea54 0c00 	orrsne.w	r12, r4, r0
 8004e6a:	ea55 0c02 	orrsne.w	r12, r5, r2
 8004e6e:	ea7f 5c64 	mvnsne.w	r12, r4, asr #21
 8004e72:	ea7f 5c65 	mvnsne.w	r12, r5, asr #21
 8004e76:	f000 80e2 	beq.w	800503e <__adddf3+0x1ee>
 8004e7a:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8004e7e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8004e82:	bfb8      	it	lt
 8004e84:	426d      	neglt	r5, r5
 8004e86:	dd0c      	ble.n	8004ea2 <__adddf3+0x52>
 8004e88:	442c      	add	r4, r5
 8004e8a:	ea80 0202 	eor.w	r2, r0, r2
 8004e8e:	ea81 0303 	eor.w	r3, r1, r3
 8004e92:	ea82 0000 	eor.w	r0, r2, r0
 8004e96:	ea83 0101 	eor.w	r1, r3, r1
 8004e9a:	ea80 0202 	eor.w	r2, r0, r2
 8004e9e:	ea81 0303 	eor.w	r3, r1, r3
 8004ea2:	2d36      	cmp	r5, #54	; 0x36
 8004ea4:	bf88      	it	hi
 8004ea6:	bd30      	pophi	{r4, r5, pc}
 8004ea8:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8004eac:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8004eb0:	f44f 1c80 	mov.w	r12, #1048576	; 0x100000
 8004eb4:	ea4c 3111 	orr.w	r1, r12, r1, lsr #12
 8004eb8:	d002      	beq.n	8004ec0 <__adddf3+0x70>
 8004eba:	4240      	negs	r0, r0
 8004ebc:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8004ec0:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8004ec4:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8004ec8:	ea4c 3313 	orr.w	r3, r12, r3, lsr #12
 8004ecc:	d002      	beq.n	8004ed4 <__adddf3+0x84>
 8004ece:	4252      	negs	r2, r2
 8004ed0:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8004ed4:	ea94 0f05 	teq	r4, r5
 8004ed8:	f000 80a7 	beq.w	800502a <__adddf3+0x1da>
 8004edc:	f1a4 0401 	sub.w	r4, r4, #1
 8004ee0:	f1d5 0e20 	rsbs	lr, r5, #32
 8004ee4:	db0d      	blt.n	8004f02 <__adddf3+0xb2>
 8004ee6:	fa02 fc0e 	lsl.w	r12, r2, lr
 8004eea:	fa22 f205 	lsr.w	r2, r2, r5
 8004eee:	1880      	adds	r0, r0, r2
 8004ef0:	f141 0100 	adc.w	r1, r1, #0
 8004ef4:	fa03 f20e 	lsl.w	r2, r3, lr
 8004ef8:	1880      	adds	r0, r0, r2
 8004efa:	fa43 f305 	asr.w	r3, r3, r5
 8004efe:	4159      	adcs	r1, r3
 8004f00:	e00e      	b.n	8004f20 <__adddf3+0xd0>
 8004f02:	f1a5 0520 	sub.w	r5, r5, #32
 8004f06:	f10e 0e20 	add.w	lr, lr, #32
 8004f0a:	2a01      	cmp	r2, #1
 8004f0c:	fa03 fc0e 	lsl.w	r12, r3, lr
 8004f10:	bf28      	it	cs
 8004f12:	f04c 0c02 	orrcs.w	r12, r12, #2
 8004f16:	fa43 f305 	asr.w	r3, r3, r5
 8004f1a:	18c0      	adds	r0, r0, r3
 8004f1c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8004f20:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8004f24:	d507      	bpl.n	8004f36 <__adddf3+0xe6>
 8004f26:	f04f 0e00 	mov.w	lr, #0
 8004f2a:	f1dc 0c00 	rsbs	r12, r12, #0
 8004f2e:	eb7e 0000 	sbcs.w	r0, lr, r0
 8004f32:	eb6e 0101 	sbc.w	r1, lr, r1
 8004f36:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8004f3a:	d31b      	bcc.n	8004f74 <__adddf3+0x124>
 8004f3c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8004f40:	d30c      	bcc.n	8004f5c <__adddf3+0x10c>
 8004f42:	0849      	lsrs	r1, r1, #1
 8004f44:	ea5f 0030 	movs.w	r0, r0, rrx
 8004f48:	ea4f 0c3c 	mov.w	r12, r12, rrx
 8004f4c:	f104 0401 	add.w	r4, r4, #1
 8004f50:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8004f54:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8004f58:	f080 809a 	bcs.w	8005090 <__adddf3+0x240>
 8004f5c:	f1bc 4f00 	cmp.w	r12, #2147483648	; 0x80000000
 8004f60:	bf08      	it	eq
 8004f62:	ea5f 0c50 	movseq.w	r12, r0, lsr #1
 8004f66:	f150 0000 	adcs.w	r0, r0, #0
 8004f6a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8004f6e:	ea41 0105 	orr.w	r1, r1, r5
 8004f72:	bd30      	pop	{r4, r5, pc}
 8004f74:	ea5f 0c4c 	movs.w	r12, r12, lsl #1
 8004f78:	4140      	adcs	r0, r0
 8004f7a:	eb41 0101 	adc.w	r1, r1, r1
 8004f7e:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8004f82:	f1a4 0401 	sub.w	r4, r4, #1
 8004f86:	d1e9      	bne.n	8004f5c <__adddf3+0x10c>
 8004f88:	f091 0f00 	teq	r1, #0
 8004f8c:	bf04      	itt	eq
 8004f8e:	4601      	moveq	r1, r0
 8004f90:	2000      	moveq	r0, #0
 8004f92:	fab1 f381 	clz	r3, r1
 8004f96:	bf08      	it	eq
 8004f98:	3320      	addeq	r3, #32
 8004f9a:	f1a3 030b 	sub.w	r3, r3, #11
 8004f9e:	f1b3 0220 	subs.w	r2, r3, #32
 8004fa2:	da0c      	bge.n	8004fbe <__adddf3+0x16e>
 8004fa4:	320c      	adds	r2, #12
 8004fa6:	dd08      	ble.n	8004fba <__adddf3+0x16a>
 8004fa8:	f102 0c14 	add.w	r12, r2, #20
 8004fac:	f1c2 020c 	rsb	r2, r2, #12
 8004fb0:	fa01 f00c 	lsl.w	r0, r1, r12
 8004fb4:	fa21 f102 	lsr.w	r1, r1, r2
 8004fb8:	e00c      	b.n	8004fd4 <__adddf3+0x184>
 8004fba:	f102 0214 	add.w	r2, r2, #20
 8004fbe:	bfd8      	it	le
 8004fc0:	f1c2 0c20 	rsble	r12, r2, #32
 8004fc4:	fa01 f102 	lsl.w	r1, r1, r2
 8004fc8:	fa20 fc0c 	lsr.w	r12, r0, r12
 8004fcc:	bfdc      	itt	le
 8004fce:	ea41 010c 	orrle.w	r1, r1, r12
 8004fd2:	4090      	lslle	r0, r2
 8004fd4:	1ae4      	subs	r4, r4, r3
 8004fd6:	bfa2      	ittt	ge
 8004fd8:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8004fdc:	4329      	orrge	r1, r5
 8004fde:	bd30      	popge	{r4, r5, pc}
 8004fe0:	ea6f 0404 	mvn.w	r4, r4
 8004fe4:	3c1f      	subs	r4, #31
 8004fe6:	da1c      	bge.n	8005022 <__adddf3+0x1d2>
 8004fe8:	340c      	adds	r4, #12
 8004fea:	dc0e      	bgt.n	800500a <__adddf3+0x1ba>
 8004fec:	f104 0414 	add.w	r4, r4, #20
 8004ff0:	f1c4 0220 	rsb	r2, r4, #32
 8004ff4:	fa20 f004 	lsr.w	r0, r0, r4
 8004ff8:	fa01 f302 	lsl.w	r3, r1, r2
 8004ffc:	ea40 0003 	orr.w	r0, r0, r3
 8005000:	fa21 f304 	lsr.w	r3, r1, r4
 8005004:	ea45 0103 	orr.w	r1, r5, r3
 8005008:	bd30      	pop	{r4, r5, pc}
 800500a:	f1c4 040c 	rsb	r4, r4, #12
 800500e:	f1c4 0220 	rsb	r2, r4, #32
 8005012:	fa20 f002 	lsr.w	r0, r0, r2
 8005016:	fa01 f304 	lsl.w	r3, r1, r4
 800501a:	ea40 0003 	orr.w	r0, r0, r3
 800501e:	4629      	mov	r1, r5
 8005020:	bd30      	pop	{r4, r5, pc}
 8005022:	fa21 f004 	lsr.w	r0, r1, r4
 8005026:	4629      	mov	r1, r5
 8005028:	bd30      	pop	{r4, r5, pc}
 800502a:	f094 0f00 	teq	r4, #0
 800502e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8005032:	bf06      	itte	eq
 8005034:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8005038:	3401      	addeq	r4, #1
 800503a:	3d01      	subne	r5, #1
 800503c:	e74e      	b.n	8004edc <__adddf3+0x8c>
 800503e:	ea7f 5c64 	mvns.w	r12, r4, asr #21
 8005042:	bf18      	it	ne
 8005044:	ea7f 5c65 	mvnsne.w	r12, r5, asr #21
 8005048:	d029      	beq.n	800509e <__adddf3+0x24e>
 800504a:	ea94 0f05 	teq	r4, r5
 800504e:	bf08      	it	eq
 8005050:	ea90 0f02 	teqeq	r0, r2
 8005054:	d005      	beq.n	8005062 <__adddf3+0x212>
 8005056:	ea54 0c00 	orrs.w	r12, r4, r0
 800505a:	bf04      	itt	eq
 800505c:	4619      	moveq	r1, r3
 800505e:	4610      	moveq	r0, r2
 8005060:	bd30      	pop	{r4, r5, pc}
 8005062:	ea91 0f03 	teq	r1, r3
 8005066:	bf1e      	ittt	ne
 8005068:	2100      	movne	r1, #0
 800506a:	2000      	movne	r0, #0
 800506c:	bd30      	popne	{r4, r5, pc}
 800506e:	ea5f 5c54 	movs.w	r12, r4, lsr #21
 8005072:	d105      	bne.n	8005080 <__adddf3+0x230>
 8005074:	0040      	lsls	r0, r0, #1
 8005076:	4149      	adcs	r1, r1
 8005078:	bf28      	it	cs
 800507a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800507e:	bd30      	pop	{r4, r5, pc}
 8005080:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8005084:	bf3c      	itt	cc
 8005086:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 800508a:	bd30      	popcc	{r4, r5, pc}
 800508c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8005090:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8005094:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8005098:	f04f 0000 	mov.w	r0, #0
 800509c:	bd30      	pop	{r4, r5, pc}
 800509e:	ea7f 5c64 	mvns.w	r12, r4, asr #21
 80050a2:	bf1a      	itte	ne
 80050a4:	4619      	movne	r1, r3
 80050a6:	4610      	movne	r0, r2
 80050a8:	ea7f 5c65 	mvnseq.w	r12, r5, asr #21
 80050ac:	bf1c      	itt	ne
 80050ae:	460b      	movne	r3, r1
 80050b0:	4602      	movne	r2, r0
 80050b2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80050b6:	bf06      	itte	eq
 80050b8:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80050bc:	ea91 0f03 	teqeq	r1, r3
 80050c0:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80050c4:	bd30      	pop	{r4, r5, pc}
 80050c6:	bf00      	nop

080050c8 <__aeabi_ui2d>:
 80050c8:	f090 0f00 	teq	r0, #0
 80050cc:	bf04      	itt	eq
 80050ce:	2100      	moveq	r1, #0
 80050d0:	4770      	bxeq	lr
 80050d2:	b530      	push	{r4, r5, lr}
 80050d4:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80050d8:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80050dc:	f04f 0500 	mov.w	r5, #0
 80050e0:	f04f 0100 	mov.w	r1, #0
 80050e4:	e750      	b.n	8004f88 <__adddf3+0x138>
 80050e6:	bf00      	nop

080050e8 <__aeabi_i2d>:
 80050e8:	f090 0f00 	teq	r0, #0
 80050ec:	bf04      	itt	eq
 80050ee:	2100      	moveq	r1, #0
 80050f0:	4770      	bxeq	lr
 80050f2:	b530      	push	{r4, r5, lr}
 80050f4:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80050f8:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80050fc:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8005100:	bf48      	it	mi
 8005102:	4240      	negmi	r0, r0
 8005104:	f04f 0100 	mov.w	r1, #0
 8005108:	e73e      	b.n	8004f88 <__adddf3+0x138>
 800510a:	bf00      	nop

0800510c <__aeabi_f2d>:
 800510c:	0042      	lsls	r2, r0, #1
 800510e:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8005112:	ea4f 0131 	mov.w	r1, r1, rrx
 8005116:	ea4f 7002 	mov.w	r0, r2, lsl #28
 800511a:	bf1f      	itttt	ne
 800511c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8005120:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8005124:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8005128:	4770      	bxne	lr
 800512a:	f092 0f00 	teq	r2, #0
 800512e:	bf14      	ite	ne
 8005130:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8005134:	4770      	bxeq	lr
 8005136:	b530      	push	{r4, r5, lr}
 8005138:	f44f 7460 	mov.w	r4, #896	; 0x380
 800513c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8005140:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8005144:	e720      	b.n	8004f88 <__adddf3+0x138>
 8005146:	bf00      	nop

08005148 <__aeabi_ul2d>:
 8005148:	ea50 0201 	orrs.w	r2, r0, r1
 800514c:	bf08      	it	eq
 800514e:	4770      	bxeq	lr
 8005150:	b530      	push	{r4, r5, lr}
 8005152:	f04f 0500 	mov.w	r5, #0
 8005156:	e00a      	b.n	800516e <__aeabi_l2d+0x16>

08005158 <__aeabi_l2d>:
 8005158:	ea50 0201 	orrs.w	r2, r0, r1
 800515c:	bf08      	it	eq
 800515e:	4770      	bxeq	lr
 8005160:	b530      	push	{r4, r5, lr}
 8005162:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8005166:	d502      	bpl.n	800516e <__aeabi_l2d+0x16>
 8005168:	4240      	negs	r0, r0
 800516a:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800516e:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8005172:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8005176:	ea5f 5c91 	movs.w	r12, r1, lsr #22
 800517a:	f43f aedc 	beq.w	8004f36 <__adddf3+0xe6>
 800517e:	f04f 0203 	mov.w	r2, #3
 8005182:	ea5f 0cdc 	movs.w	r12, r12, lsr #3
 8005186:	bf18      	it	ne
 8005188:	3203      	addne	r2, #3
 800518a:	ea5f 0cdc 	movs.w	r12, r12, lsr #3
 800518e:	bf18      	it	ne
 8005190:	3203      	addne	r2, #3
 8005192:	eb02 02dc 	add.w	r2, r2, r12, lsr #3
 8005196:	f1c2 0320 	rsb	r3, r2, #32
 800519a:	fa00 fc03 	lsl.w	r12, r0, r3
 800519e:	fa20 f002 	lsr.w	r0, r0, r2
 80051a2:	fa01 fe03 	lsl.w	lr, r1, r3
 80051a6:	ea40 000e 	orr.w	r0, r0, lr
 80051aa:	fa21 f102 	lsr.w	r1, r1, r2
 80051ae:	4414      	add	r4, r2
 80051b0:	e6c1      	b.n	8004f36 <__adddf3+0xe6>
 80051b2:	bf00      	nop

080051b4 <__aeabi_d2f>:
 80051b4:	ea4f 0241 	mov.w	r2, r1, lsl #1
 80051b8:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 80051bc:	bf24      	itt	cs
 80051be:	f5b3 1c00 	subscs.w	r12, r3, #2097152	; 0x200000
 80051c2:	f1dc 5cfe 	rsbscs	r12, r12, #532676608	; 0x1fc00000
 80051c6:	d90d      	bls.n	80051e4 <__aeabi_d2f+0x30>
 80051c8:	f001 4c00 	and.w	r12, r1, #2147483648	; 0x80000000
 80051cc:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 80051d0:	ea4c 7050 	orr.w	r0, r12, r0, lsr #29
 80051d4:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 80051d8:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 80051dc:	bf08      	it	eq
 80051de:	f020 0001 	biceq.w	r0, r0, #1
 80051e2:	4770      	bx	lr
 80051e4:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 80051e8:	d121      	bne.n	800522e <__aeabi_d2f+0x7a>
 80051ea:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 80051ee:	bfbc      	itt	lt
 80051f0:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 80051f4:	4770      	bxlt	lr
 80051f6:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80051fa:	ea4f 5252 	mov.w	r2, r2, lsr #21
 80051fe:	f1c2 0218 	rsb	r2, r2, #24
 8005202:	f1c2 0c20 	rsb	r12, r2, #32
 8005206:	fa10 f30c 	lsls.w	r3, r0, r12
 800520a:	fa20 f002 	lsr.w	r0, r0, r2
 800520e:	bf18      	it	ne
 8005210:	f040 0001 	orrne.w	r0, r0, #1
 8005214:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8005218:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 800521c:	fa03 fc0c 	lsl.w	r12, r3, r12
 8005220:	ea40 000c 	orr.w	r0, r0, r12
 8005224:	fa23 f302 	lsr.w	r3, r3, r2
 8005228:	ea4f 0343 	mov.w	r3, r3, lsl #1
 800522c:	e7cc      	b.n	80051c8 <__aeabi_d2f+0x14>
 800522e:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8005232:	d107      	bne.n	8005244 <__aeabi_d2f+0x90>
 8005234:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8005238:	bf1e      	ittt	ne
 800523a:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 800523e:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8005242:	4770      	bxne	lr
 8005244:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8005248:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 800524c:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8005250:	4770      	bx	lr
 8005252:	bf00      	nop

08005254 <__errno>:
 8005254:	4b01      	ldr	r3, [pc, #4]	; (800525c <__errno+0x8>)
 8005256:	6818      	ldr	r0, [r3, #0]
 8005258:	4770      	bx	lr
 800525a:	bf00      	nop
 800525c:	200001b8 	.word	0x200001b8

08005260 <__sflush_r>:
 8005260:	898a      	ldrh	r2, [r1, #12]
 8005262:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005266:	4605      	mov	r5, r0
 8005268:	0710      	lsls	r0, r2, #28
 800526a:	460c      	mov	r4, r1
 800526c:	d45a      	bmi.n	8005324 <__sflush_r+0xc4>
 800526e:	684b      	ldr	r3, [r1, #4]
 8005270:	2b00      	cmp	r3, #0
 8005272:	dc05      	bgt.n	8005280 <__sflush_r+0x20>
 8005274:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8005276:	2b00      	cmp	r3, #0
 8005278:	dc02      	bgt.n	8005280 <__sflush_r+0x20>
 800527a:	2000      	movs	r0, #0
 800527c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005280:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8005282:	2e00      	cmp	r6, #0
 8005284:	d0f9      	beq.n	800527a <__sflush_r+0x1a>
 8005286:	2300      	movs	r3, #0
 8005288:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800528c:	682f      	ldr	r7, [r5, #0]
 800528e:	602b      	str	r3, [r5, #0]
 8005290:	d033      	beq.n	80052fa <__sflush_r+0x9a>
 8005292:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8005294:	89a3      	ldrh	r3, [r4, #12]
 8005296:	075a      	lsls	r2, r3, #29
 8005298:	d505      	bpl.n	80052a6 <__sflush_r+0x46>
 800529a:	6863      	ldr	r3, [r4, #4]
 800529c:	1ac0      	subs	r0, r0, r3
 800529e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80052a0:	b10b      	cbz	r3, 80052a6 <__sflush_r+0x46>
 80052a2:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80052a4:	1ac0      	subs	r0, r0, r3
 80052a6:	2300      	movs	r3, #0
 80052a8:	4602      	mov	r2, r0
 80052aa:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80052ac:	6a21      	ldr	r1, [r4, #32]
 80052ae:	4628      	mov	r0, r5
 80052b0:	47b0      	blx	r6
 80052b2:	1c43      	adds	r3, r0, #1
 80052b4:	89a3      	ldrh	r3, [r4, #12]
 80052b6:	d106      	bne.n	80052c6 <__sflush_r+0x66>
 80052b8:	6829      	ldr	r1, [r5, #0]
 80052ba:	291d      	cmp	r1, #29
 80052bc:	d84b      	bhi.n	8005356 <__sflush_r+0xf6>
 80052be:	4a2b      	ldr	r2, [pc, #172]	; (800536c <__sflush_r+0x10c>)
 80052c0:	40ca      	lsrs	r2, r1
 80052c2:	07d6      	lsls	r6, r2, #31
 80052c4:	d547      	bpl.n	8005356 <__sflush_r+0xf6>
 80052c6:	2200      	movs	r2, #0
 80052c8:	6062      	str	r2, [r4, #4]
 80052ca:	04d9      	lsls	r1, r3, #19
 80052cc:	6922      	ldr	r2, [r4, #16]
 80052ce:	6022      	str	r2, [r4, #0]
 80052d0:	d504      	bpl.n	80052dc <__sflush_r+0x7c>
 80052d2:	1c42      	adds	r2, r0, #1
 80052d4:	d101      	bne.n	80052da <__sflush_r+0x7a>
 80052d6:	682b      	ldr	r3, [r5, #0]
 80052d8:	b903      	cbnz	r3, 80052dc <__sflush_r+0x7c>
 80052da:	6560      	str	r0, [r4, #84]	; 0x54
 80052dc:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80052de:	602f      	str	r7, [r5, #0]
 80052e0:	2900      	cmp	r1, #0
 80052e2:	d0ca      	beq.n	800527a <__sflush_r+0x1a>
 80052e4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80052e8:	4299      	cmp	r1, r3
 80052ea:	d002      	beq.n	80052f2 <__sflush_r+0x92>
 80052ec:	4628      	mov	r0, r5
 80052ee:	f7ff fb7b 	bl	80049e8 <__wrap__free_r>
 80052f2:	2000      	movs	r0, #0
 80052f4:	6360      	str	r0, [r4, #52]	; 0x34
 80052f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80052fa:	6a21      	ldr	r1, [r4, #32]
 80052fc:	2301      	movs	r3, #1
 80052fe:	4628      	mov	r0, r5
 8005300:	47b0      	blx	r6
 8005302:	1c41      	adds	r1, r0, #1
 8005304:	d1c6      	bne.n	8005294 <__sflush_r+0x34>
 8005306:	682b      	ldr	r3, [r5, #0]
 8005308:	2b00      	cmp	r3, #0
 800530a:	d0c3      	beq.n	8005294 <__sflush_r+0x34>
 800530c:	2b1d      	cmp	r3, #29
 800530e:	d001      	beq.n	8005314 <__sflush_r+0xb4>
 8005310:	2b16      	cmp	r3, #22
 8005312:	d101      	bne.n	8005318 <__sflush_r+0xb8>
 8005314:	602f      	str	r7, [r5, #0]
 8005316:	e7b0      	b.n	800527a <__sflush_r+0x1a>
 8005318:	89a3      	ldrh	r3, [r4, #12]
 800531a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800531e:	81a3      	strh	r3, [r4, #12]
 8005320:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005324:	690f      	ldr	r7, [r1, #16]
 8005326:	2f00      	cmp	r7, #0
 8005328:	d0a7      	beq.n	800527a <__sflush_r+0x1a>
 800532a:	0793      	lsls	r3, r2, #30
 800532c:	680e      	ldr	r6, [r1, #0]
 800532e:	bf08      	it	eq
 8005330:	694b      	ldreq	r3, [r1, #20]
 8005332:	600f      	str	r7, [r1, #0]
 8005334:	bf18      	it	ne
 8005336:	2300      	movne	r3, #0
 8005338:	eba6 0807 	sub.w	r8, r6, r7
 800533c:	608b      	str	r3, [r1, #8]
 800533e:	f1b8 0f00 	cmp.w	r8, #0
 8005342:	dd9a      	ble.n	800527a <__sflush_r+0x1a>
 8005344:	4643      	mov	r3, r8
 8005346:	463a      	mov	r2, r7
 8005348:	6a21      	ldr	r1, [r4, #32]
 800534a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800534c:	4628      	mov	r0, r5
 800534e:	47b0      	blx	r6
 8005350:	2800      	cmp	r0, #0
 8005352:	dc07      	bgt.n	8005364 <__sflush_r+0x104>
 8005354:	89a3      	ldrh	r3, [r4, #12]
 8005356:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800535a:	81a3      	strh	r3, [r4, #12]
 800535c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005360:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005364:	4407      	add	r7, r0
 8005366:	eba8 0800 	sub.w	r8, r8, r0
 800536a:	e7e8      	b.n	800533e <__sflush_r+0xde>
 800536c:	20400001 	.word	0x20400001

08005370 <_fflush_r>:
 8005370:	b538      	push	{r3, r4, r5, lr}
 8005372:	690b      	ldr	r3, [r1, #16]
 8005374:	4605      	mov	r5, r0
 8005376:	460c      	mov	r4, r1
 8005378:	b1db      	cbz	r3, 80053b2 <_fflush_r+0x42>
 800537a:	b118      	cbz	r0, 8005384 <_fflush_r+0x14>
 800537c:	6983      	ldr	r3, [r0, #24]
 800537e:	b90b      	cbnz	r3, 8005384 <_fflush_r+0x14>
 8005380:	f000 f872 	bl	8005468 <__sinit>
 8005384:	4b0c      	ldr	r3, [pc, #48]	; (80053b8 <_fflush_r+0x48>)
 8005386:	429c      	cmp	r4, r3
 8005388:	d109      	bne.n	800539e <_fflush_r+0x2e>
 800538a:	686c      	ldr	r4, [r5, #4]
 800538c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005390:	b17b      	cbz	r3, 80053b2 <_fflush_r+0x42>
 8005392:	4621      	mov	r1, r4
 8005394:	4628      	mov	r0, r5
 8005396:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800539a:	f7ff bf61 	b.w	8005260 <__sflush_r>
 800539e:	4b07      	ldr	r3, [pc, #28]	; (80053bc <_fflush_r+0x4c>)
 80053a0:	429c      	cmp	r4, r3
 80053a2:	d101      	bne.n	80053a8 <_fflush_r+0x38>
 80053a4:	68ac      	ldr	r4, [r5, #8]
 80053a6:	e7f1      	b.n	800538c <_fflush_r+0x1c>
 80053a8:	4b05      	ldr	r3, [pc, #20]	; (80053c0 <_fflush_r+0x50>)
 80053aa:	429c      	cmp	r4, r3
 80053ac:	bf08      	it	eq
 80053ae:	68ec      	ldreq	r4, [r5, #12]
 80053b0:	e7ec      	b.n	800538c <_fflush_r+0x1c>
 80053b2:	2000      	movs	r0, #0
 80053b4:	bd38      	pop	{r3, r4, r5, pc}
 80053b6:	bf00      	nop
 80053b8:	08006780 	.word	0x08006780
 80053bc:	080067a0 	.word	0x080067a0
 80053c0:	08006760 	.word	0x08006760

080053c4 <fflush>:
 80053c4:	4601      	mov	r1, r0
 80053c6:	b920      	cbnz	r0, 80053d2 <fflush+0xe>
 80053c8:	4b04      	ldr	r3, [pc, #16]	; (80053dc <fflush+0x18>)
 80053ca:	4905      	ldr	r1, [pc, #20]	; (80053e0 <fflush+0x1c>)
 80053cc:	6818      	ldr	r0, [r3, #0]
 80053ce:	f000 b8b7 	b.w	8005540 <_fwalk_reent>
 80053d2:	4b04      	ldr	r3, [pc, #16]	; (80053e4 <fflush+0x20>)
 80053d4:	6818      	ldr	r0, [r3, #0]
 80053d6:	f7ff bfcb 	b.w	8005370 <_fflush_r>
 80053da:	bf00      	nop
 80053dc:	080067c0 	.word	0x080067c0
 80053e0:	08005371 	.word	0x08005371
 80053e4:	200001b8 	.word	0x200001b8

080053e8 <_cleanup_r>:
 80053e8:	4901      	ldr	r1, [pc, #4]	; (80053f0 <_cleanup_r+0x8>)
 80053ea:	f000 b8a9 	b.w	8005540 <_fwalk_reent>
 80053ee:	bf00      	nop
 80053f0:	08005371 	.word	0x08005371

080053f4 <std.isra.0>:
 80053f4:	2300      	movs	r3, #0
 80053f6:	b510      	push	{r4, lr}
 80053f8:	4604      	mov	r4, r0
 80053fa:	6003      	str	r3, [r0, #0]
 80053fc:	6043      	str	r3, [r0, #4]
 80053fe:	6083      	str	r3, [r0, #8]
 8005400:	8181      	strh	r1, [r0, #12]
 8005402:	6643      	str	r3, [r0, #100]	; 0x64
 8005404:	81c2      	strh	r2, [r0, #14]
 8005406:	6103      	str	r3, [r0, #16]
 8005408:	6143      	str	r3, [r0, #20]
 800540a:	6183      	str	r3, [r0, #24]
 800540c:	4619      	mov	r1, r3
 800540e:	2208      	movs	r2, #8
 8005410:	305c      	adds	r0, #92	; 0x5c
 8005412:	f000 f962 	bl	80056da <memset>
 8005416:	4b05      	ldr	r3, [pc, #20]	; (800542c <std.isra.0+0x38>)
 8005418:	6263      	str	r3, [r4, #36]	; 0x24
 800541a:	4b05      	ldr	r3, [pc, #20]	; (8005430 <std.isra.0+0x3c>)
 800541c:	62a3      	str	r3, [r4, #40]	; 0x28
 800541e:	4b05      	ldr	r3, [pc, #20]	; (8005434 <std.isra.0+0x40>)
 8005420:	62e3      	str	r3, [r4, #44]	; 0x2c
 8005422:	4b05      	ldr	r3, [pc, #20]	; (8005438 <std.isra.0+0x44>)
 8005424:	6224      	str	r4, [r4, #32]
 8005426:	6323      	str	r3, [r4, #48]	; 0x30
 8005428:	bd10      	pop	{r4, pc}
 800542a:	bf00      	nop
 800542c:	08005bed 	.word	0x08005bed
 8005430:	08005c0f 	.word	0x08005c0f
 8005434:	08005c47 	.word	0x08005c47
 8005438:	08005c6b 	.word	0x08005c6b

0800543c <__sfmoreglue>:
 800543c:	b570      	push	{r4, r5, r6, lr}
 800543e:	1e4a      	subs	r2, r1, #1
 8005440:	2568      	movs	r5, #104	; 0x68
 8005442:	4355      	muls	r5, r2
 8005444:	460e      	mov	r6, r1
 8005446:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800544a:	f7ff fac9 	bl	80049e0 <__wrap__malloc_r>
 800544e:	4604      	mov	r4, r0
 8005450:	b140      	cbz	r0, 8005464 <__sfmoreglue+0x28>
 8005452:	2100      	movs	r1, #0
 8005454:	e880 0042 	stmia.w	r0, {r1, r6}
 8005458:	300c      	adds	r0, #12
 800545a:	60a0      	str	r0, [r4, #8]
 800545c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8005460:	f000 f93b 	bl	80056da <memset>
 8005464:	4620      	mov	r0, r4
 8005466:	bd70      	pop	{r4, r5, r6, pc}

08005468 <__sinit>:
 8005468:	6983      	ldr	r3, [r0, #24]
 800546a:	b510      	push	{r4, lr}
 800546c:	4604      	mov	r4, r0
 800546e:	bb33      	cbnz	r3, 80054be <__sinit+0x56>
 8005470:	6483      	str	r3, [r0, #72]	; 0x48
 8005472:	64c3      	str	r3, [r0, #76]	; 0x4c
 8005474:	6503      	str	r3, [r0, #80]	; 0x50
 8005476:	4b12      	ldr	r3, [pc, #72]	; (80054c0 <__sinit+0x58>)
 8005478:	4a12      	ldr	r2, [pc, #72]	; (80054c4 <__sinit+0x5c>)
 800547a:	681b      	ldr	r3, [r3, #0]
 800547c:	6282      	str	r2, [r0, #40]	; 0x28
 800547e:	4298      	cmp	r0, r3
 8005480:	bf04      	itt	eq
 8005482:	2301      	moveq	r3, #1
 8005484:	6183      	streq	r3, [r0, #24]
 8005486:	f000 f81f 	bl	80054c8 <__sfp>
 800548a:	6060      	str	r0, [r4, #4]
 800548c:	4620      	mov	r0, r4
 800548e:	f000 f81b 	bl	80054c8 <__sfp>
 8005492:	60a0      	str	r0, [r4, #8]
 8005494:	4620      	mov	r0, r4
 8005496:	f000 f817 	bl	80054c8 <__sfp>
 800549a:	2200      	movs	r2, #0
 800549c:	60e0      	str	r0, [r4, #12]
 800549e:	2104      	movs	r1, #4
 80054a0:	6860      	ldr	r0, [r4, #4]
 80054a2:	f7ff ffa7 	bl	80053f4 <std.isra.0>
 80054a6:	2201      	movs	r2, #1
 80054a8:	2109      	movs	r1, #9
 80054aa:	68a0      	ldr	r0, [r4, #8]
 80054ac:	f7ff ffa2 	bl	80053f4 <std.isra.0>
 80054b0:	2202      	movs	r2, #2
 80054b2:	2112      	movs	r1, #18
 80054b4:	68e0      	ldr	r0, [r4, #12]
 80054b6:	f7ff ff9d 	bl	80053f4 <std.isra.0>
 80054ba:	2301      	movs	r3, #1
 80054bc:	61a3      	str	r3, [r4, #24]
 80054be:	bd10      	pop	{r4, pc}
 80054c0:	080067c0 	.word	0x080067c0
 80054c4:	080053e9 	.word	0x080053e9

080054c8 <__sfp>:
 80054c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80054ca:	4b1c      	ldr	r3, [pc, #112]	; (800553c <__sfp+0x74>)
 80054cc:	681e      	ldr	r6, [r3, #0]
 80054ce:	69b3      	ldr	r3, [r6, #24]
 80054d0:	4607      	mov	r7, r0
 80054d2:	b913      	cbnz	r3, 80054da <__sfp+0x12>
 80054d4:	4630      	mov	r0, r6
 80054d6:	f7ff ffc7 	bl	8005468 <__sinit>
 80054da:	3648      	adds	r6, #72	; 0x48
 80054dc:	68b4      	ldr	r4, [r6, #8]
 80054de:	6873      	ldr	r3, [r6, #4]
 80054e0:	3b01      	subs	r3, #1
 80054e2:	d503      	bpl.n	80054ec <__sfp+0x24>
 80054e4:	6833      	ldr	r3, [r6, #0]
 80054e6:	b133      	cbz	r3, 80054f6 <__sfp+0x2e>
 80054e8:	6836      	ldr	r6, [r6, #0]
 80054ea:	e7f7      	b.n	80054dc <__sfp+0x14>
 80054ec:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80054f0:	b16d      	cbz	r5, 800550e <__sfp+0x46>
 80054f2:	3468      	adds	r4, #104	; 0x68
 80054f4:	e7f4      	b.n	80054e0 <__sfp+0x18>
 80054f6:	2104      	movs	r1, #4
 80054f8:	4638      	mov	r0, r7
 80054fa:	f7ff ff9f 	bl	800543c <__sfmoreglue>
 80054fe:	6030      	str	r0, [r6, #0]
 8005500:	2800      	cmp	r0, #0
 8005502:	d1f1      	bne.n	80054e8 <__sfp+0x20>
 8005504:	230c      	movs	r3, #12
 8005506:	603b      	str	r3, [r7, #0]
 8005508:	4604      	mov	r4, r0
 800550a:	4620      	mov	r0, r4
 800550c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800550e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8005512:	81e3      	strh	r3, [r4, #14]
 8005514:	2301      	movs	r3, #1
 8005516:	81a3      	strh	r3, [r4, #12]
 8005518:	6665      	str	r5, [r4, #100]	; 0x64
 800551a:	6025      	str	r5, [r4, #0]
 800551c:	60a5      	str	r5, [r4, #8]
 800551e:	6065      	str	r5, [r4, #4]
 8005520:	6125      	str	r5, [r4, #16]
 8005522:	6165      	str	r5, [r4, #20]
 8005524:	61a5      	str	r5, [r4, #24]
 8005526:	2208      	movs	r2, #8
 8005528:	4629      	mov	r1, r5
 800552a:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800552e:	f000 f8d4 	bl	80056da <memset>
 8005532:	6365      	str	r5, [r4, #52]	; 0x34
 8005534:	63a5      	str	r5, [r4, #56]	; 0x38
 8005536:	64a5      	str	r5, [r4, #72]	; 0x48
 8005538:	64e5      	str	r5, [r4, #76]	; 0x4c
 800553a:	e7e6      	b.n	800550a <__sfp+0x42>
 800553c:	080067c0 	.word	0x080067c0

08005540 <_fwalk_reent>:
 8005540:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005544:	4680      	mov	r8, r0
 8005546:	4689      	mov	r9, r1
 8005548:	f100 0448 	add.w	r4, r0, #72	; 0x48
 800554c:	2600      	movs	r6, #0
 800554e:	b914      	cbnz	r4, 8005556 <_fwalk_reent+0x16>
 8005550:	4630      	mov	r0, r6
 8005552:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005556:	68a5      	ldr	r5, [r4, #8]
 8005558:	6867      	ldr	r7, [r4, #4]
 800555a:	3f01      	subs	r7, #1
 800555c:	d501      	bpl.n	8005562 <_fwalk_reent+0x22>
 800555e:	6824      	ldr	r4, [r4, #0]
 8005560:	e7f5      	b.n	800554e <_fwalk_reent+0xe>
 8005562:	89ab      	ldrh	r3, [r5, #12]
 8005564:	2b01      	cmp	r3, #1
 8005566:	d907      	bls.n	8005578 <_fwalk_reent+0x38>
 8005568:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800556c:	3301      	adds	r3, #1
 800556e:	d003      	beq.n	8005578 <_fwalk_reent+0x38>
 8005570:	4629      	mov	r1, r5
 8005572:	4640      	mov	r0, r8
 8005574:	47c8      	blx	r9
 8005576:	4306      	orrs	r6, r0
 8005578:	3568      	adds	r5, #104	; 0x68
 800557a:	e7ee      	b.n	800555a <_fwalk_reent+0x1a>

0800557c <__libc_init_array>:
 800557c:	b570      	push	{r4, r5, r6, lr}
 800557e:	4e0d      	ldr	r6, [pc, #52]	; (80055b4 <__libc_init_array+0x38>)
 8005580:	4c0d      	ldr	r4, [pc, #52]	; (80055b8 <__libc_init_array+0x3c>)
 8005582:	1ba4      	subs	r4, r4, r6
 8005584:	10a4      	asrs	r4, r4, #2
 8005586:	2500      	movs	r5, #0
 8005588:	42a5      	cmp	r5, r4
 800558a:	d109      	bne.n	80055a0 <__libc_init_array+0x24>
 800558c:	4e0b      	ldr	r6, [pc, #44]	; (80055bc <__libc_init_array+0x40>)
 800558e:	4c0c      	ldr	r4, [pc, #48]	; (80055c0 <__libc_init_array+0x44>)
 8005590:	f000 fd38 	bl	8006004 <_init>
 8005594:	1ba4      	subs	r4, r4, r6
 8005596:	10a4      	asrs	r4, r4, #2
 8005598:	2500      	movs	r5, #0
 800559a:	42a5      	cmp	r5, r4
 800559c:	d105      	bne.n	80055aa <__libc_init_array+0x2e>
 800559e:	bd70      	pop	{r4, r5, r6, pc}
 80055a0:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80055a4:	4798      	blx	r3
 80055a6:	3501      	adds	r5, #1
 80055a8:	e7ee      	b.n	8005588 <__libc_init_array+0xc>
 80055aa:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80055ae:	4798      	blx	r3
 80055b0:	3501      	adds	r5, #1
 80055b2:	e7f2      	b.n	800559a <__libc_init_array+0x1e>
 80055b4:	2000021c 	.word	0x2000021c
 80055b8:	2000021c 	.word	0x2000021c
 80055bc:	2000021c 	.word	0x2000021c
 80055c0:	20000228 	.word	0x20000228

080055c4 <malloc>:
 80055c4:	4b02      	ldr	r3, [pc, #8]	; (80055d0 <malloc+0xc>)
 80055c6:	4601      	mov	r1, r0
 80055c8:	6818      	ldr	r0, [r3, #0]
 80055ca:	f7ff ba09 	b.w	80049e0 <__wrap__malloc_r>
 80055ce:	bf00      	nop
 80055d0:	200001b8 	.word	0x200001b8

080055d4 <free>:
 80055d4:	4b02      	ldr	r3, [pc, #8]	; (80055e0 <free+0xc>)
 80055d6:	4601      	mov	r1, r0
 80055d8:	6818      	ldr	r0, [r3, #0]
 80055da:	f7ff ba05 	b.w	80049e8 <__wrap__free_r>
 80055de:	bf00      	nop
 80055e0:	200001b8 	.word	0x200001b8
	...

080055f0 <memchr>:
 80055f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80055f4:	2a10      	cmp	r2, #16
 80055f6:	db2b      	blt.n	8005650 <memchr+0x60>
 80055f8:	f010 0f07 	tst.w	r0, #7
 80055fc:	d008      	beq.n	8005610 <memchr+0x20>
 80055fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8005602:	3a01      	subs	r2, #1
 8005604:	428b      	cmp	r3, r1
 8005606:	d02d      	beq.n	8005664 <memchr+0x74>
 8005608:	f010 0f07 	tst.w	r0, #7
 800560c:	b342      	cbz	r2, 8005660 <memchr+0x70>
 800560e:	d1f6      	bne.n	80055fe <memchr+0xe>
 8005610:	b4f0      	push	{r4, r5, r6, r7}
 8005612:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8005616:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800561a:	f022 0407 	bic.w	r4, r2, #7
 800561e:	f07f 0700 	mvns.w	r7, #0
 8005622:	2300      	movs	r3, #0
 8005624:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8005628:	3c08      	subs	r4, #8
 800562a:	ea85 0501 	eor.w	r5, r5, r1
 800562e:	ea86 0601 	eor.w	r6, r6, r1
 8005632:	fa85 f547 	uadd8	r5, r5, r7
 8005636:	faa3 f587 	sel	r5, r3, r7
 800563a:	fa86 f647 	uadd8	r6, r6, r7
 800563e:	faa5 f687 	sel	r6, r5, r7
 8005642:	b98e      	cbnz	r6, 8005668 <memchr+0x78>
 8005644:	d1ee      	bne.n	8005624 <memchr+0x34>
 8005646:	bcf0      	pop	{r4, r5, r6, r7}
 8005648:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800564c:	f002 0207 	and.w	r2, r2, #7
 8005650:	b132      	cbz	r2, 8005660 <memchr+0x70>
 8005652:	f810 3b01 	ldrb.w	r3, [r0], #1
 8005656:	3a01      	subs	r2, #1
 8005658:	ea83 0301 	eor.w	r3, r3, r1
 800565c:	b113      	cbz	r3, 8005664 <memchr+0x74>
 800565e:	d1f8      	bne.n	8005652 <memchr+0x62>
 8005660:	2000      	movs	r0, #0
 8005662:	4770      	bx	lr
 8005664:	3801      	subs	r0, #1
 8005666:	4770      	bx	lr
 8005668:	2d00      	cmp	r5, #0
 800566a:	bf06      	itte	eq
 800566c:	4635      	moveq	r5, r6
 800566e:	3803      	subeq	r0, #3
 8005670:	3807      	subne	r0, #7
 8005672:	f015 0f01 	tst.w	r5, #1
 8005676:	d107      	bne.n	8005688 <memchr+0x98>
 8005678:	3001      	adds	r0, #1
 800567a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800567e:	bf02      	ittt	eq
 8005680:	3001      	addeq	r0, #1
 8005682:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8005686:	3001      	addeq	r0, #1
 8005688:	bcf0      	pop	{r4, r5, r6, r7}
 800568a:	3801      	subs	r0, #1
 800568c:	4770      	bx	lr
 800568e:	bf00      	nop

08005690 <memcpy>:
 8005690:	b510      	push	{r4, lr}
 8005692:	1e43      	subs	r3, r0, #1
 8005694:	440a      	add	r2, r1
 8005696:	4291      	cmp	r1, r2
 8005698:	d100      	bne.n	800569c <memcpy+0xc>
 800569a:	bd10      	pop	{r4, pc}
 800569c:	f811 4b01 	ldrb.w	r4, [r1], #1
 80056a0:	f803 4f01 	strb.w	r4, [r3, #1]!
 80056a4:	e7f7      	b.n	8005696 <memcpy+0x6>

080056a6 <memmove>:
 80056a6:	4288      	cmp	r0, r1
 80056a8:	b510      	push	{r4, lr}
 80056aa:	eb01 0302 	add.w	r3, r1, r2
 80056ae:	d803      	bhi.n	80056b8 <memmove+0x12>
 80056b0:	1e42      	subs	r2, r0, #1
 80056b2:	4299      	cmp	r1, r3
 80056b4:	d10c      	bne.n	80056d0 <memmove+0x2a>
 80056b6:	bd10      	pop	{r4, pc}
 80056b8:	4298      	cmp	r0, r3
 80056ba:	d2f9      	bcs.n	80056b0 <memmove+0xa>
 80056bc:	1881      	adds	r1, r0, r2
 80056be:	1ad2      	subs	r2, r2, r3
 80056c0:	42d3      	cmn	r3, r2
 80056c2:	d100      	bne.n	80056c6 <memmove+0x20>
 80056c4:	bd10      	pop	{r4, pc}
 80056c6:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80056ca:	f801 4d01 	strb.w	r4, [r1, #-1]!
 80056ce:	e7f7      	b.n	80056c0 <memmove+0x1a>
 80056d0:	f811 4b01 	ldrb.w	r4, [r1], #1
 80056d4:	f802 4f01 	strb.w	r4, [r2, #1]!
 80056d8:	e7eb      	b.n	80056b2 <memmove+0xc>

080056da <memset>:
 80056da:	4402      	add	r2, r0
 80056dc:	4603      	mov	r3, r0
 80056de:	4293      	cmp	r3, r2
 80056e0:	d100      	bne.n	80056e4 <memset+0xa>
 80056e2:	4770      	bx	lr
 80056e4:	f803 1b01 	strb.w	r1, [r3], #1
 80056e8:	e7f9      	b.n	80056de <memset+0x4>
	...

080056ec <_free_r>:
 80056ec:	b538      	push	{r3, r4, r5, lr}
 80056ee:	4605      	mov	r5, r0
 80056f0:	2900      	cmp	r1, #0
 80056f2:	d045      	beq.n	8005780 <_free_r+0x94>
 80056f4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80056f8:	1f0c      	subs	r4, r1, #4
 80056fa:	2b00      	cmp	r3, #0
 80056fc:	bfb8      	it	lt
 80056fe:	18e4      	addlt	r4, r4, r3
 8005700:	f7ff fa93 	bl	8004c2a <__malloc_lock>
 8005704:	4a1f      	ldr	r2, [pc, #124]	; (8005784 <_free_r+0x98>)
 8005706:	6813      	ldr	r3, [r2, #0]
 8005708:	4610      	mov	r0, r2
 800570a:	b933      	cbnz	r3, 800571a <_free_r+0x2e>
 800570c:	6063      	str	r3, [r4, #4]
 800570e:	6014      	str	r4, [r2, #0]
 8005710:	4628      	mov	r0, r5
 8005712:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005716:	f7ff ba8c 	b.w	8004c32 <__malloc_unlock>
 800571a:	42a3      	cmp	r3, r4
 800571c:	d90c      	bls.n	8005738 <_free_r+0x4c>
 800571e:	6821      	ldr	r1, [r4, #0]
 8005720:	1862      	adds	r2, r4, r1
 8005722:	4293      	cmp	r3, r2
 8005724:	bf04      	itt	eq
 8005726:	681a      	ldreq	r2, [r3, #0]
 8005728:	685b      	ldreq	r3, [r3, #4]
 800572a:	6063      	str	r3, [r4, #4]
 800572c:	bf04      	itt	eq
 800572e:	1852      	addeq	r2, r2, r1
 8005730:	6022      	streq	r2, [r4, #0]
 8005732:	6004      	str	r4, [r0, #0]
 8005734:	e7ec      	b.n	8005710 <_free_r+0x24>
 8005736:	4613      	mov	r3, r2
 8005738:	685a      	ldr	r2, [r3, #4]
 800573a:	b10a      	cbz	r2, 8005740 <_free_r+0x54>
 800573c:	42a2      	cmp	r2, r4
 800573e:	d9fa      	bls.n	8005736 <_free_r+0x4a>
 8005740:	6819      	ldr	r1, [r3, #0]
 8005742:	1858      	adds	r0, r3, r1
 8005744:	42a0      	cmp	r0, r4
 8005746:	d10b      	bne.n	8005760 <_free_r+0x74>
 8005748:	6820      	ldr	r0, [r4, #0]
 800574a:	4401      	add	r1, r0
 800574c:	1858      	adds	r0, r3, r1
 800574e:	4282      	cmp	r2, r0
 8005750:	6019      	str	r1, [r3, #0]
 8005752:	d1dd      	bne.n	8005710 <_free_r+0x24>
 8005754:	6810      	ldr	r0, [r2, #0]
 8005756:	6852      	ldr	r2, [r2, #4]
 8005758:	605a      	str	r2, [r3, #4]
 800575a:	4401      	add	r1, r0
 800575c:	6019      	str	r1, [r3, #0]
 800575e:	e7d7      	b.n	8005710 <_free_r+0x24>
 8005760:	d902      	bls.n	8005768 <_free_r+0x7c>
 8005762:	230c      	movs	r3, #12
 8005764:	602b      	str	r3, [r5, #0]
 8005766:	e7d3      	b.n	8005710 <_free_r+0x24>
 8005768:	6820      	ldr	r0, [r4, #0]
 800576a:	1821      	adds	r1, r4, r0
 800576c:	428a      	cmp	r2, r1
 800576e:	bf04      	itt	eq
 8005770:	6811      	ldreq	r1, [r2, #0]
 8005772:	6852      	ldreq	r2, [r2, #4]
 8005774:	6062      	str	r2, [r4, #4]
 8005776:	bf04      	itt	eq
 8005778:	1809      	addeq	r1, r1, r0
 800577a:	6021      	streq	r1, [r4, #0]
 800577c:	605c      	str	r4, [r3, #4]
 800577e:	e7c7      	b.n	8005710 <_free_r+0x24>
 8005780:	bd38      	pop	{r3, r4, r5, pc}
 8005782:	bf00      	nop
 8005784:	20001ea8 	.word	0x20001ea8

08005788 <_malloc_r>:
 8005788:	b570      	push	{r4, r5, r6, lr}
 800578a:	1ccd      	adds	r5, r1, #3
 800578c:	f025 0503 	bic.w	r5, r5, #3
 8005790:	3508      	adds	r5, #8
 8005792:	2d0c      	cmp	r5, #12
 8005794:	bf38      	it	cc
 8005796:	250c      	movcc	r5, #12
 8005798:	2d00      	cmp	r5, #0
 800579a:	4606      	mov	r6, r0
 800579c:	db01      	blt.n	80057a2 <_malloc_r+0x1a>
 800579e:	42a9      	cmp	r1, r5
 80057a0:	d903      	bls.n	80057aa <_malloc_r+0x22>
 80057a2:	230c      	movs	r3, #12
 80057a4:	6033      	str	r3, [r6, #0]
 80057a6:	2000      	movs	r0, #0
 80057a8:	bd70      	pop	{r4, r5, r6, pc}
 80057aa:	f7ff fa3e 	bl	8004c2a <__malloc_lock>
 80057ae:	4a23      	ldr	r2, [pc, #140]	; (800583c <_malloc_r+0xb4>)
 80057b0:	6814      	ldr	r4, [r2, #0]
 80057b2:	4621      	mov	r1, r4
 80057b4:	b991      	cbnz	r1, 80057dc <_malloc_r+0x54>
 80057b6:	4c22      	ldr	r4, [pc, #136]	; (8005840 <_malloc_r+0xb8>)
 80057b8:	6823      	ldr	r3, [r4, #0]
 80057ba:	b91b      	cbnz	r3, 80057c4 <_malloc_r+0x3c>
 80057bc:	4630      	mov	r0, r6
 80057be:	f000 fa05 	bl	8005bcc <_sbrk_r>
 80057c2:	6020      	str	r0, [r4, #0]
 80057c4:	4629      	mov	r1, r5
 80057c6:	4630      	mov	r0, r6
 80057c8:	f000 fa00 	bl	8005bcc <_sbrk_r>
 80057cc:	1c43      	adds	r3, r0, #1
 80057ce:	d126      	bne.n	800581e <_malloc_r+0x96>
 80057d0:	230c      	movs	r3, #12
 80057d2:	6033      	str	r3, [r6, #0]
 80057d4:	4630      	mov	r0, r6
 80057d6:	f7ff fa2c 	bl	8004c32 <__malloc_unlock>
 80057da:	e7e4      	b.n	80057a6 <_malloc_r+0x1e>
 80057dc:	680b      	ldr	r3, [r1, #0]
 80057de:	1b5b      	subs	r3, r3, r5
 80057e0:	d41a      	bmi.n	8005818 <_malloc_r+0x90>
 80057e2:	2b0b      	cmp	r3, #11
 80057e4:	d90f      	bls.n	8005806 <_malloc_r+0x7e>
 80057e6:	600b      	str	r3, [r1, #0]
 80057e8:	50cd      	str	r5, [r1, r3]
 80057ea:	18cc      	adds	r4, r1, r3
 80057ec:	4630      	mov	r0, r6
 80057ee:	f7ff fa20 	bl	8004c32 <__malloc_unlock>
 80057f2:	f104 000b 	add.w	r0, r4, #11
 80057f6:	1d23      	adds	r3, r4, #4
 80057f8:	f020 0007 	bic.w	r0, r0, #7
 80057fc:	1ac3      	subs	r3, r0, r3
 80057fe:	d01b      	beq.n	8005838 <_malloc_r+0xb0>
 8005800:	425a      	negs	r2, r3
 8005802:	50e2      	str	r2, [r4, r3]
 8005804:	bd70      	pop	{r4, r5, r6, pc}
 8005806:	428c      	cmp	r4, r1
 8005808:	bf0d      	iteet	eq
 800580a:	6863      	ldreq	r3, [r4, #4]
 800580c:	684b      	ldrne	r3, [r1, #4]
 800580e:	6063      	strne	r3, [r4, #4]
 8005810:	6013      	streq	r3, [r2, #0]
 8005812:	bf18      	it	ne
 8005814:	460c      	movne	r4, r1
 8005816:	e7e9      	b.n	80057ec <_malloc_r+0x64>
 8005818:	460c      	mov	r4, r1
 800581a:	6849      	ldr	r1, [r1, #4]
 800581c:	e7ca      	b.n	80057b4 <_malloc_r+0x2c>
 800581e:	1cc4      	adds	r4, r0, #3
 8005820:	f024 0403 	bic.w	r4, r4, #3
 8005824:	42a0      	cmp	r0, r4
 8005826:	d005      	beq.n	8005834 <_malloc_r+0xac>
 8005828:	1a21      	subs	r1, r4, r0
 800582a:	4630      	mov	r0, r6
 800582c:	f000 f9ce 	bl	8005bcc <_sbrk_r>
 8005830:	3001      	adds	r0, #1
 8005832:	d0cd      	beq.n	80057d0 <_malloc_r+0x48>
 8005834:	6025      	str	r5, [r4, #0]
 8005836:	e7d9      	b.n	80057ec <_malloc_r+0x64>
 8005838:	bd70      	pop	{r4, r5, r6, pc}
 800583a:	bf00      	nop
 800583c:	20001ea8 	.word	0x20001ea8
 8005840:	20001eac 	.word	0x20001eac

08005844 <_realloc_r>:
 8005844:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005846:	4607      	mov	r7, r0
 8005848:	4614      	mov	r4, r2
 800584a:	460e      	mov	r6, r1
 800584c:	b921      	cbnz	r1, 8005858 <_realloc_r+0x14>
 800584e:	4611      	mov	r1, r2
 8005850:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8005854:	f7ff b8c4 	b.w	80049e0 <__wrap__malloc_r>
 8005858:	b922      	cbnz	r2, 8005864 <_realloc_r+0x20>
 800585a:	f7ff f8c5 	bl	80049e8 <__wrap__free_r>
 800585e:	4625      	mov	r5, r4
 8005860:	4628      	mov	r0, r5
 8005862:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005864:	f000 fa64 	bl	8005d30 <_malloc_usable_size_r>
 8005868:	4284      	cmp	r4, r0
 800586a:	d90f      	bls.n	800588c <_realloc_r+0x48>
 800586c:	4621      	mov	r1, r4
 800586e:	4638      	mov	r0, r7
 8005870:	f7ff f8b6 	bl	80049e0 <__wrap__malloc_r>
 8005874:	4605      	mov	r5, r0
 8005876:	2800      	cmp	r0, #0
 8005878:	d0f2      	beq.n	8005860 <_realloc_r+0x1c>
 800587a:	4631      	mov	r1, r6
 800587c:	4622      	mov	r2, r4
 800587e:	f7ff ff07 	bl	8005690 <memcpy>
 8005882:	4631      	mov	r1, r6
 8005884:	4638      	mov	r0, r7
 8005886:	f7ff f8af 	bl	80049e8 <__wrap__free_r>
 800588a:	e7e9      	b.n	8005860 <_realloc_r+0x1c>
 800588c:	4635      	mov	r5, r6
 800588e:	e7e7      	b.n	8005860 <_realloc_r+0x1c>

08005890 <_printf_common>:
 8005890:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8005894:	4691      	mov	r9, r2
 8005896:	461f      	mov	r7, r3
 8005898:	688a      	ldr	r2, [r1, #8]
 800589a:	690b      	ldr	r3, [r1, #16]
 800589c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80058a0:	4293      	cmp	r3, r2
 80058a2:	bfb8      	it	lt
 80058a4:	4613      	movlt	r3, r2
 80058a6:	f8c9 3000 	str.w	r3, [r9]
 80058aa:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80058ae:	4606      	mov	r6, r0
 80058b0:	460c      	mov	r4, r1
 80058b2:	b112      	cbz	r2, 80058ba <_printf_common+0x2a>
 80058b4:	3301      	adds	r3, #1
 80058b6:	f8c9 3000 	str.w	r3, [r9]
 80058ba:	6823      	ldr	r3, [r4, #0]
 80058bc:	0699      	lsls	r1, r3, #26
 80058be:	bf42      	ittt	mi
 80058c0:	f8d9 3000 	ldrmi.w	r3, [r9]
 80058c4:	3302      	addmi	r3, #2
 80058c6:	f8c9 3000 	strmi.w	r3, [r9]
 80058ca:	6825      	ldr	r5, [r4, #0]
 80058cc:	f015 0506 	ands.w	r5, r5, #6
 80058d0:	d107      	bne.n	80058e2 <_printf_common+0x52>
 80058d2:	f104 0a19 	add.w	r10, r4, #25
 80058d6:	68e3      	ldr	r3, [r4, #12]
 80058d8:	f8d9 2000 	ldr.w	r2, [r9]
 80058dc:	1a9b      	subs	r3, r3, r2
 80058de:	429d      	cmp	r5, r3
 80058e0:	db29      	blt.n	8005936 <_printf_common+0xa6>
 80058e2:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 80058e6:	6822      	ldr	r2, [r4, #0]
 80058e8:	3300      	adds	r3, #0
 80058ea:	bf18      	it	ne
 80058ec:	2301      	movne	r3, #1
 80058ee:	0692      	lsls	r2, r2, #26
 80058f0:	d42e      	bmi.n	8005950 <_printf_common+0xc0>
 80058f2:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80058f6:	4639      	mov	r1, r7
 80058f8:	4630      	mov	r0, r6
 80058fa:	47c0      	blx	r8
 80058fc:	3001      	adds	r0, #1
 80058fe:	d021      	beq.n	8005944 <_printf_common+0xb4>
 8005900:	6823      	ldr	r3, [r4, #0]
 8005902:	68e5      	ldr	r5, [r4, #12]
 8005904:	f8d9 2000 	ldr.w	r2, [r9]
 8005908:	f003 0306 	and.w	r3, r3, #6
 800590c:	2b04      	cmp	r3, #4
 800590e:	bf08      	it	eq
 8005910:	1aad      	subeq	r5, r5, r2
 8005912:	68a3      	ldr	r3, [r4, #8]
 8005914:	6922      	ldr	r2, [r4, #16]
 8005916:	bf0c      	ite	eq
 8005918:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800591c:	2500      	movne	r5, #0
 800591e:	4293      	cmp	r3, r2
 8005920:	bfc4      	itt	gt
 8005922:	1a9b      	subgt	r3, r3, r2
 8005924:	18ed      	addgt	r5, r5, r3
 8005926:	f04f 0900 	mov.w	r9, #0
 800592a:	341a      	adds	r4, #26
 800592c:	454d      	cmp	r5, r9
 800592e:	d11b      	bne.n	8005968 <_printf_common+0xd8>
 8005930:	2000      	movs	r0, #0
 8005932:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8005936:	2301      	movs	r3, #1
 8005938:	4652      	mov	r2, r10
 800593a:	4639      	mov	r1, r7
 800593c:	4630      	mov	r0, r6
 800593e:	47c0      	blx	r8
 8005940:	3001      	adds	r0, #1
 8005942:	d103      	bne.n	800594c <_printf_common+0xbc>
 8005944:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005948:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 800594c:	3501      	adds	r5, #1
 800594e:	e7c2      	b.n	80058d6 <_printf_common+0x46>
 8005950:	18e1      	adds	r1, r4, r3
 8005952:	1c5a      	adds	r2, r3, #1
 8005954:	2030      	movs	r0, #48	; 0x30
 8005956:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800595a:	4422      	add	r2, r4
 800595c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8005960:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8005964:	3302      	adds	r3, #2
 8005966:	e7c4      	b.n	80058f2 <_printf_common+0x62>
 8005968:	2301      	movs	r3, #1
 800596a:	4622      	mov	r2, r4
 800596c:	4639      	mov	r1, r7
 800596e:	4630      	mov	r0, r6
 8005970:	47c0      	blx	r8
 8005972:	3001      	adds	r0, #1
 8005974:	d0e6      	beq.n	8005944 <_printf_common+0xb4>
 8005976:	f109 0901 	add.w	r9, r9, #1
 800597a:	e7d7      	b.n	800592c <_printf_common+0x9c>

0800597c <_printf_i>:
 800597c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8005980:	4617      	mov	r7, r2
 8005982:	7e0a      	ldrb	r2, [r1, #24]
 8005984:	b085      	sub	sp, #20
 8005986:	2a6e      	cmp	r2, #110	; 0x6e
 8005988:	4698      	mov	r8, r3
 800598a:	4606      	mov	r6, r0
 800598c:	460c      	mov	r4, r1
 800598e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8005990:	f101 0e43 	add.w	lr, r1, #67	; 0x43
 8005994:	f000 80bc 	beq.w	8005b10 <_printf_i+0x194>
 8005998:	d81a      	bhi.n	80059d0 <_printf_i+0x54>
 800599a:	2a63      	cmp	r2, #99	; 0x63
 800599c:	d02e      	beq.n	80059fc <_printf_i+0x80>
 800599e:	d80a      	bhi.n	80059b6 <_printf_i+0x3a>
 80059a0:	2a00      	cmp	r2, #0
 80059a2:	f000 80c8 	beq.w	8005b36 <_printf_i+0x1ba>
 80059a6:	2a58      	cmp	r2, #88	; 0x58
 80059a8:	f000 808a 	beq.w	8005ac0 <_printf_i+0x144>
 80059ac:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80059b0:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
 80059b4:	e02a      	b.n	8005a0c <_printf_i+0x90>
 80059b6:	2a64      	cmp	r2, #100	; 0x64
 80059b8:	d001      	beq.n	80059be <_printf_i+0x42>
 80059ba:	2a69      	cmp	r2, #105	; 0x69
 80059bc:	d1f6      	bne.n	80059ac <_printf_i+0x30>
 80059be:	6821      	ldr	r1, [r4, #0]
 80059c0:	681a      	ldr	r2, [r3, #0]
 80059c2:	f011 0f80 	tst.w	r1, #128	; 0x80
 80059c6:	d023      	beq.n	8005a10 <_printf_i+0x94>
 80059c8:	1d11      	adds	r1, r2, #4
 80059ca:	6019      	str	r1, [r3, #0]
 80059cc:	6813      	ldr	r3, [r2, #0]
 80059ce:	e027      	b.n	8005a20 <_printf_i+0xa4>
 80059d0:	2a73      	cmp	r2, #115	; 0x73
 80059d2:	f000 80b4 	beq.w	8005b3e <_printf_i+0x1c2>
 80059d6:	d808      	bhi.n	80059ea <_printf_i+0x6e>
 80059d8:	2a6f      	cmp	r2, #111	; 0x6f
 80059da:	d02a      	beq.n	8005a32 <_printf_i+0xb6>
 80059dc:	2a70      	cmp	r2, #112	; 0x70
 80059de:	d1e5      	bne.n	80059ac <_printf_i+0x30>
 80059e0:	680a      	ldr	r2, [r1, #0]
 80059e2:	f042 0220 	orr.w	r2, r2, #32
 80059e6:	600a      	str	r2, [r1, #0]
 80059e8:	e003      	b.n	80059f2 <_printf_i+0x76>
 80059ea:	2a75      	cmp	r2, #117	; 0x75
 80059ec:	d021      	beq.n	8005a32 <_printf_i+0xb6>
 80059ee:	2a78      	cmp	r2, #120	; 0x78
 80059f0:	d1dc      	bne.n	80059ac <_printf_i+0x30>
 80059f2:	2278      	movs	r2, #120	; 0x78
 80059f4:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
 80059f8:	496e      	ldr	r1, [pc, #440]	; (8005bb4 <_printf_i+0x238>)
 80059fa:	e064      	b.n	8005ac6 <_printf_i+0x14a>
 80059fc:	681a      	ldr	r2, [r3, #0]
 80059fe:	f101 0542 	add.w	r5, r1, #66	; 0x42
 8005a02:	1d11      	adds	r1, r2, #4
 8005a04:	6019      	str	r1, [r3, #0]
 8005a06:	6813      	ldr	r3, [r2, #0]
 8005a08:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8005a0c:	2301      	movs	r3, #1
 8005a0e:	e0a3      	b.n	8005b58 <_printf_i+0x1dc>
 8005a10:	f011 0f40 	tst.w	r1, #64	; 0x40
 8005a14:	f102 0104 	add.w	r1, r2, #4
 8005a18:	6019      	str	r1, [r3, #0]
 8005a1a:	d0d7      	beq.n	80059cc <_printf_i+0x50>
 8005a1c:	f9b2 3000 	ldrsh.w	r3, [r2]
 8005a20:	2b00      	cmp	r3, #0
 8005a22:	da03      	bge.n	8005a2c <_printf_i+0xb0>
 8005a24:	222d      	movs	r2, #45	; 0x2d
 8005a26:	425b      	negs	r3, r3
 8005a28:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 8005a2c:	4962      	ldr	r1, [pc, #392]	; (8005bb8 <_printf_i+0x23c>)
 8005a2e:	220a      	movs	r2, #10
 8005a30:	e017      	b.n	8005a62 <_printf_i+0xe6>
 8005a32:	6820      	ldr	r0, [r4, #0]
 8005a34:	6819      	ldr	r1, [r3, #0]
 8005a36:	f010 0f80 	tst.w	r0, #128	; 0x80
 8005a3a:	d003      	beq.n	8005a44 <_printf_i+0xc8>
 8005a3c:	1d08      	adds	r0, r1, #4
 8005a3e:	6018      	str	r0, [r3, #0]
 8005a40:	680b      	ldr	r3, [r1, #0]
 8005a42:	e006      	b.n	8005a52 <_printf_i+0xd6>
 8005a44:	f010 0f40 	tst.w	r0, #64	; 0x40
 8005a48:	f101 0004 	add.w	r0, r1, #4
 8005a4c:	6018      	str	r0, [r3, #0]
 8005a4e:	d0f7      	beq.n	8005a40 <_printf_i+0xc4>
 8005a50:	880b      	ldrh	r3, [r1, #0]
 8005a52:	4959      	ldr	r1, [pc, #356]	; (8005bb8 <_printf_i+0x23c>)
 8005a54:	2a6f      	cmp	r2, #111	; 0x6f
 8005a56:	bf14      	ite	ne
 8005a58:	220a      	movne	r2, #10
 8005a5a:	2208      	moveq	r2, #8
 8005a5c:	2000      	movs	r0, #0
 8005a5e:	f884 0043 	strb.w	r0, [r4, #67]	; 0x43
 8005a62:	6865      	ldr	r5, [r4, #4]
 8005a64:	60a5      	str	r5, [r4, #8]
 8005a66:	2d00      	cmp	r5, #0
 8005a68:	f2c0 809c 	blt.w	8005ba4 <_printf_i+0x228>
 8005a6c:	6820      	ldr	r0, [r4, #0]
 8005a6e:	f020 0004 	bic.w	r0, r0, #4
 8005a72:	6020      	str	r0, [r4, #0]
 8005a74:	2b00      	cmp	r3, #0
 8005a76:	d13f      	bne.n	8005af8 <_printf_i+0x17c>
 8005a78:	2d00      	cmp	r5, #0
 8005a7a:	f040 8095 	bne.w	8005ba8 <_printf_i+0x22c>
 8005a7e:	4675      	mov	r5, lr
 8005a80:	2a08      	cmp	r2, #8
 8005a82:	d10b      	bne.n	8005a9c <_printf_i+0x120>
 8005a84:	6823      	ldr	r3, [r4, #0]
 8005a86:	07da      	lsls	r2, r3, #31
 8005a88:	d508      	bpl.n	8005a9c <_printf_i+0x120>
 8005a8a:	6923      	ldr	r3, [r4, #16]
 8005a8c:	6862      	ldr	r2, [r4, #4]
 8005a8e:	429a      	cmp	r2, r3
 8005a90:	bfde      	ittt	le
 8005a92:	2330      	movle	r3, #48	; 0x30
 8005a94:	f805 3c01 	strble.w	r3, [r5, #-1]
 8005a98:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 8005a9c:	ebae 0305 	sub.w	r3, lr, r5
 8005aa0:	6123      	str	r3, [r4, #16]
 8005aa2:	f8cd 8000 	str.w	r8, [sp]
 8005aa6:	463b      	mov	r3, r7
 8005aa8:	aa03      	add	r2, sp, #12
 8005aaa:	4621      	mov	r1, r4
 8005aac:	4630      	mov	r0, r6
 8005aae:	f7ff feef 	bl	8005890 <_printf_common>
 8005ab2:	3001      	adds	r0, #1
 8005ab4:	d155      	bne.n	8005b62 <_printf_i+0x1e6>
 8005ab6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005aba:	b005      	add	sp, #20
 8005abc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8005ac0:	f881 2045 	strb.w	r2, [r1, #69]	; 0x45
 8005ac4:	493c      	ldr	r1, [pc, #240]	; (8005bb8 <_printf_i+0x23c>)
 8005ac6:	6822      	ldr	r2, [r4, #0]
 8005ac8:	6818      	ldr	r0, [r3, #0]
 8005aca:	f012 0f80 	tst.w	r2, #128	; 0x80
 8005ace:	f100 0504 	add.w	r5, r0, #4
 8005ad2:	601d      	str	r5, [r3, #0]
 8005ad4:	d001      	beq.n	8005ada <_printf_i+0x15e>
 8005ad6:	6803      	ldr	r3, [r0, #0]
 8005ad8:	e002      	b.n	8005ae0 <_printf_i+0x164>
 8005ada:	0655      	lsls	r5, r2, #25
 8005adc:	d5fb      	bpl.n	8005ad6 <_printf_i+0x15a>
 8005ade:	8803      	ldrh	r3, [r0, #0]
 8005ae0:	07d0      	lsls	r0, r2, #31
 8005ae2:	bf44      	itt	mi
 8005ae4:	f042 0220 	orrmi.w	r2, r2, #32
 8005ae8:	6022      	strmi	r2, [r4, #0]
 8005aea:	b91b      	cbnz	r3, 8005af4 <_printf_i+0x178>
 8005aec:	6822      	ldr	r2, [r4, #0]
 8005aee:	f022 0220 	bic.w	r2, r2, #32
 8005af2:	6022      	str	r2, [r4, #0]
 8005af4:	2210      	movs	r2, #16
 8005af6:	e7b1      	b.n	8005a5c <_printf_i+0xe0>
 8005af8:	4675      	mov	r5, lr
 8005afa:	fbb3 f0f2 	udiv	r0, r3, r2
 8005afe:	fb02 3310 	mls	r3, r2, r0, r3
 8005b02:	5ccb      	ldrb	r3, [r1, r3]
 8005b04:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8005b08:	4603      	mov	r3, r0
 8005b0a:	2800      	cmp	r0, #0
 8005b0c:	d1f5      	bne.n	8005afa <_printf_i+0x17e>
 8005b0e:	e7b7      	b.n	8005a80 <_printf_i+0x104>
 8005b10:	6808      	ldr	r0, [r1, #0]
 8005b12:	681a      	ldr	r2, [r3, #0]
 8005b14:	6949      	ldr	r1, [r1, #20]
 8005b16:	f010 0f80 	tst.w	r0, #128	; 0x80
 8005b1a:	d004      	beq.n	8005b26 <_printf_i+0x1aa>
 8005b1c:	1d10      	adds	r0, r2, #4
 8005b1e:	6018      	str	r0, [r3, #0]
 8005b20:	6813      	ldr	r3, [r2, #0]
 8005b22:	6019      	str	r1, [r3, #0]
 8005b24:	e007      	b.n	8005b36 <_printf_i+0x1ba>
 8005b26:	f010 0f40 	tst.w	r0, #64	; 0x40
 8005b2a:	f102 0004 	add.w	r0, r2, #4
 8005b2e:	6018      	str	r0, [r3, #0]
 8005b30:	6813      	ldr	r3, [r2, #0]
 8005b32:	d0f6      	beq.n	8005b22 <_printf_i+0x1a6>
 8005b34:	8019      	strh	r1, [r3, #0]
 8005b36:	2300      	movs	r3, #0
 8005b38:	6123      	str	r3, [r4, #16]
 8005b3a:	4675      	mov	r5, lr
 8005b3c:	e7b1      	b.n	8005aa2 <_printf_i+0x126>
 8005b3e:	681a      	ldr	r2, [r3, #0]
 8005b40:	1d11      	adds	r1, r2, #4
 8005b42:	6019      	str	r1, [r3, #0]
 8005b44:	6815      	ldr	r5, [r2, #0]
 8005b46:	6862      	ldr	r2, [r4, #4]
 8005b48:	2100      	movs	r1, #0
 8005b4a:	4628      	mov	r0, r5
 8005b4c:	f7ff fd50 	bl	80055f0 <memchr>
 8005b50:	b108      	cbz	r0, 8005b56 <_printf_i+0x1da>
 8005b52:	1b40      	subs	r0, r0, r5
 8005b54:	6060      	str	r0, [r4, #4]
 8005b56:	6863      	ldr	r3, [r4, #4]
 8005b58:	6123      	str	r3, [r4, #16]
 8005b5a:	2300      	movs	r3, #0
 8005b5c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8005b60:	e79f      	b.n	8005aa2 <_printf_i+0x126>
 8005b62:	6923      	ldr	r3, [r4, #16]
 8005b64:	462a      	mov	r2, r5
 8005b66:	4639      	mov	r1, r7
 8005b68:	4630      	mov	r0, r6
 8005b6a:	47c0      	blx	r8
 8005b6c:	3001      	adds	r0, #1
 8005b6e:	d0a2      	beq.n	8005ab6 <_printf_i+0x13a>
 8005b70:	6823      	ldr	r3, [r4, #0]
 8005b72:	079b      	lsls	r3, r3, #30
 8005b74:	d507      	bpl.n	8005b86 <_printf_i+0x20a>
 8005b76:	2500      	movs	r5, #0
 8005b78:	f104 0919 	add.w	r9, r4, #25
 8005b7c:	68e3      	ldr	r3, [r4, #12]
 8005b7e:	9a03      	ldr	r2, [sp, #12]
 8005b80:	1a9b      	subs	r3, r3, r2
 8005b82:	429d      	cmp	r5, r3
 8005b84:	db05      	blt.n	8005b92 <_printf_i+0x216>
 8005b86:	68e0      	ldr	r0, [r4, #12]
 8005b88:	9b03      	ldr	r3, [sp, #12]
 8005b8a:	4298      	cmp	r0, r3
 8005b8c:	bfb8      	it	lt
 8005b8e:	4618      	movlt	r0, r3
 8005b90:	e793      	b.n	8005aba <_printf_i+0x13e>
 8005b92:	2301      	movs	r3, #1
 8005b94:	464a      	mov	r2, r9
 8005b96:	4639      	mov	r1, r7
 8005b98:	4630      	mov	r0, r6
 8005b9a:	47c0      	blx	r8
 8005b9c:	3001      	adds	r0, #1
 8005b9e:	d08a      	beq.n	8005ab6 <_printf_i+0x13a>
 8005ba0:	3501      	adds	r5, #1
 8005ba2:	e7eb      	b.n	8005b7c <_printf_i+0x200>
 8005ba4:	2b00      	cmp	r3, #0
 8005ba6:	d1a7      	bne.n	8005af8 <_printf_i+0x17c>
 8005ba8:	780b      	ldrb	r3, [r1, #0]
 8005baa:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8005bae:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8005bb2:	e765      	b.n	8005a80 <_printf_i+0x104>
 8005bb4:	080067d5 	.word	0x080067d5
 8005bb8:	080067c4 	.word	0x080067c4

08005bbc <realloc>:
 8005bbc:	4b02      	ldr	r3, [pc, #8]	; (8005bc8 <realloc+0xc>)
 8005bbe:	460a      	mov	r2, r1
 8005bc0:	4601      	mov	r1, r0
 8005bc2:	6818      	ldr	r0, [r3, #0]
 8005bc4:	f7fe bf0e 	b.w	80049e4 <__wrap__realloc_r>
 8005bc8:	200001b8 	.word	0x200001b8

08005bcc <_sbrk_r>:
 8005bcc:	b538      	push	{r3, r4, r5, lr}
 8005bce:	4c06      	ldr	r4, [pc, #24]	; (8005be8 <_sbrk_r+0x1c>)
 8005bd0:	2300      	movs	r3, #0
 8005bd2:	4605      	mov	r5, r0
 8005bd4:	4608      	mov	r0, r1
 8005bd6:	6023      	str	r3, [r4, #0]
 8005bd8:	f7fe ffee 	bl	8004bb8 <_sbrk>
 8005bdc:	1c43      	adds	r3, r0, #1
 8005bde:	d102      	bne.n	8005be6 <_sbrk_r+0x1a>
 8005be0:	6823      	ldr	r3, [r4, #0]
 8005be2:	b103      	cbz	r3, 8005be6 <_sbrk_r+0x1a>
 8005be4:	602b      	str	r3, [r5, #0]
 8005be6:	bd38      	pop	{r3, r4, r5, pc}
 8005be8:	2000299c 	.word	0x2000299c

08005bec <__sread>:
 8005bec:	b510      	push	{r4, lr}
 8005bee:	460c      	mov	r4, r1
 8005bf0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005bf4:	f000 f9f4 	bl	8005fe0 <_read_r>
 8005bf8:	2800      	cmp	r0, #0
 8005bfa:	bfab      	itete	ge
 8005bfc:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8005bfe:	89a3      	ldrhlt	r3, [r4, #12]
 8005c00:	181b      	addge	r3, r3, r0
 8005c02:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8005c06:	bfac      	ite	ge
 8005c08:	6563      	strge	r3, [r4, #84]	; 0x54
 8005c0a:	81a3      	strhlt	r3, [r4, #12]
 8005c0c:	bd10      	pop	{r4, pc}

08005c0e <__swrite>:
 8005c0e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005c12:	461f      	mov	r7, r3
 8005c14:	898b      	ldrh	r3, [r1, #12]
 8005c16:	05db      	lsls	r3, r3, #23
 8005c18:	4605      	mov	r5, r0
 8005c1a:	460c      	mov	r4, r1
 8005c1c:	4616      	mov	r6, r2
 8005c1e:	d505      	bpl.n	8005c2c <__swrite+0x1e>
 8005c20:	2302      	movs	r3, #2
 8005c22:	2200      	movs	r2, #0
 8005c24:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005c28:	f000 f870 	bl	8005d0c <_lseek_r>
 8005c2c:	89a3      	ldrh	r3, [r4, #12]
 8005c2e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8005c32:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8005c36:	81a3      	strh	r3, [r4, #12]
 8005c38:	4632      	mov	r2, r6
 8005c3a:	463b      	mov	r3, r7
 8005c3c:	4628      	mov	r0, r5
 8005c3e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005c42:	f000 b841 	b.w	8005cc8 <_write_r>

08005c46 <__sseek>:
 8005c46:	b510      	push	{r4, lr}
 8005c48:	460c      	mov	r4, r1
 8005c4a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005c4e:	f000 f85d 	bl	8005d0c <_lseek_r>
 8005c52:	1c43      	adds	r3, r0, #1
 8005c54:	89a3      	ldrh	r3, [r4, #12]
 8005c56:	bf15      	itete	ne
 8005c58:	6560      	strne	r0, [r4, #84]	; 0x54
 8005c5a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8005c5e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8005c62:	81a3      	strheq	r3, [r4, #12]
 8005c64:	bf18      	it	ne
 8005c66:	81a3      	strhne	r3, [r4, #12]
 8005c68:	bd10      	pop	{r4, pc}

08005c6a <__sclose>:
 8005c6a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005c6e:	f000 b83d 	b.w	8005cec <_close_r>

08005c72 <strlen>:
 8005c72:	4603      	mov	r3, r0
 8005c74:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005c78:	2a00      	cmp	r2, #0
 8005c7a:	d1fb      	bne.n	8005c74 <strlen+0x2>
 8005c7c:	1a18      	subs	r0, r3, r0
 8005c7e:	3801      	subs	r0, #1
 8005c80:	4770      	bx	lr

08005c82 <_vsiprintf_r>:
 8005c82:	b510      	push	{r4, lr}
 8005c84:	b09a      	sub	sp, #104	; 0x68
 8005c86:	f44f 7402 	mov.w	r4, #520	; 0x208
 8005c8a:	9100      	str	r1, [sp, #0]
 8005c8c:	9104      	str	r1, [sp, #16]
 8005c8e:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8005c92:	9102      	str	r1, [sp, #8]
 8005c94:	9105      	str	r1, [sp, #20]
 8005c96:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8005c9a:	f8ad 100e 	strh.w	r1, [sp, #14]
 8005c9e:	4669      	mov	r1, sp
 8005ca0:	f8ad 400c 	strh.w	r4, [sp, #12]
 8005ca4:	f000 f8a8 	bl	8005df8 <_svfiprintf_r>
 8005ca8:	9b00      	ldr	r3, [sp, #0]
 8005caa:	2200      	movs	r2, #0
 8005cac:	701a      	strb	r2, [r3, #0]
 8005cae:	b01a      	add	sp, #104	; 0x68
 8005cb0:	bd10      	pop	{r4, pc}
	...

08005cb4 <vsiprintf>:
 8005cb4:	4613      	mov	r3, r2
 8005cb6:	460a      	mov	r2, r1
 8005cb8:	4601      	mov	r1, r0
 8005cba:	4802      	ldr	r0, [pc, #8]	; (8005cc4 <vsiprintf+0x10>)
 8005cbc:	6800      	ldr	r0, [r0, #0]
 8005cbe:	f7ff bfe0 	b.w	8005c82 <_vsiprintf_r>
 8005cc2:	bf00      	nop
 8005cc4:	200001b8 	.word	0x200001b8

08005cc8 <_write_r>:
 8005cc8:	b538      	push	{r3, r4, r5, lr}
 8005cca:	4c07      	ldr	r4, [pc, #28]	; (8005ce8 <_write_r+0x20>)
 8005ccc:	4605      	mov	r5, r0
 8005cce:	4608      	mov	r0, r1
 8005cd0:	4611      	mov	r1, r2
 8005cd2:	2200      	movs	r2, #0
 8005cd4:	6022      	str	r2, [r4, #0]
 8005cd6:	461a      	mov	r2, r3
 8005cd8:	f7fe fedc 	bl	8004a94 <_write>
 8005cdc:	1c43      	adds	r3, r0, #1
 8005cde:	d102      	bne.n	8005ce6 <_write_r+0x1e>
 8005ce0:	6823      	ldr	r3, [r4, #0]
 8005ce2:	b103      	cbz	r3, 8005ce6 <_write_r+0x1e>
 8005ce4:	602b      	str	r3, [r5, #0]
 8005ce6:	bd38      	pop	{r3, r4, r5, pc}
 8005ce8:	2000299c 	.word	0x2000299c

08005cec <_close_r>:
 8005cec:	b538      	push	{r3, r4, r5, lr}
 8005cee:	4c06      	ldr	r4, [pc, #24]	; (8005d08 <_close_r+0x1c>)
 8005cf0:	2300      	movs	r3, #0
 8005cf2:	4605      	mov	r5, r0
 8005cf4:	4608      	mov	r0, r1
 8005cf6:	6023      	str	r3, [r4, #0]
 8005cf8:	f7fe feac 	bl	8004a54 <_close>
 8005cfc:	1c43      	adds	r3, r0, #1
 8005cfe:	d102      	bne.n	8005d06 <_close_r+0x1a>
 8005d00:	6823      	ldr	r3, [r4, #0]
 8005d02:	b103      	cbz	r3, 8005d06 <_close_r+0x1a>
 8005d04:	602b      	str	r3, [r5, #0]
 8005d06:	bd38      	pop	{r3, r4, r5, pc}
 8005d08:	2000299c 	.word	0x2000299c

08005d0c <_lseek_r>:
 8005d0c:	b538      	push	{r3, r4, r5, lr}
 8005d0e:	4c07      	ldr	r4, [pc, #28]	; (8005d2c <_lseek_r+0x20>)
 8005d10:	4605      	mov	r5, r0
 8005d12:	4608      	mov	r0, r1
 8005d14:	4611      	mov	r1, r2
 8005d16:	2200      	movs	r2, #0
 8005d18:	6022      	str	r2, [r4, #0]
 8005d1a:	461a      	mov	r2, r3
 8005d1c:	f7fe ff20 	bl	8004b60 <_lseek>
 8005d20:	1c43      	adds	r3, r0, #1
 8005d22:	d102      	bne.n	8005d2a <_lseek_r+0x1e>
 8005d24:	6823      	ldr	r3, [r4, #0]
 8005d26:	b103      	cbz	r3, 8005d2a <_lseek_r+0x1e>
 8005d28:	602b      	str	r3, [r5, #0]
 8005d2a:	bd38      	pop	{r3, r4, r5, pc}
 8005d2c:	2000299c 	.word	0x2000299c

08005d30 <_malloc_usable_size_r>:
 8005d30:	f851 0c04 	ldr.w	r0, [r1, #-4]
 8005d34:	2800      	cmp	r0, #0
 8005d36:	f1a0 0004 	sub.w	r0, r0, #4
 8005d3a:	bfbc      	itt	lt
 8005d3c:	580b      	ldrlt	r3, [r1, r0]
 8005d3e:	18c0      	addlt	r0, r0, r3
 8005d40:	4770      	bx	lr

08005d42 <__ssputs_r>:
 8005d42:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8005d46:	688e      	ldr	r6, [r1, #8]
 8005d48:	429e      	cmp	r6, r3
 8005d4a:	4682      	mov	r10, r0
 8005d4c:	460c      	mov	r4, r1
 8005d4e:	4691      	mov	r9, r2
 8005d50:	4698      	mov	r8, r3
 8005d52:	d835      	bhi.n	8005dc0 <__ssputs_r+0x7e>
 8005d54:	898a      	ldrh	r2, [r1, #12]
 8005d56:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8005d5a:	d031      	beq.n	8005dc0 <__ssputs_r+0x7e>
 8005d5c:	6825      	ldr	r5, [r4, #0]
 8005d5e:	6909      	ldr	r1, [r1, #16]
 8005d60:	1a6f      	subs	r7, r5, r1
 8005d62:	6965      	ldr	r5, [r4, #20]
 8005d64:	2302      	movs	r3, #2
 8005d66:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8005d6a:	fb95 f5f3 	sdiv	r5, r5, r3
 8005d6e:	f108 0301 	add.w	r3, r8, #1
 8005d72:	443b      	add	r3, r7
 8005d74:	429d      	cmp	r5, r3
 8005d76:	bf38      	it	cc
 8005d78:	461d      	movcc	r5, r3
 8005d7a:	0553      	lsls	r3, r2, #21
 8005d7c:	d531      	bpl.n	8005de2 <__ssputs_r+0xa0>
 8005d7e:	4629      	mov	r1, r5
 8005d80:	f7fe fe2e 	bl	80049e0 <__wrap__malloc_r>
 8005d84:	4606      	mov	r6, r0
 8005d86:	b950      	cbnz	r0, 8005d9e <__ssputs_r+0x5c>
 8005d88:	230c      	movs	r3, #12
 8005d8a:	f8ca 3000 	str.w	r3, [r10]
 8005d8e:	89a3      	ldrh	r3, [r4, #12]
 8005d90:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005d94:	81a3      	strh	r3, [r4, #12]
 8005d96:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005d9a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8005d9e:	463a      	mov	r2, r7
 8005da0:	6921      	ldr	r1, [r4, #16]
 8005da2:	f7ff fc75 	bl	8005690 <memcpy>
 8005da6:	89a3      	ldrh	r3, [r4, #12]
 8005da8:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8005dac:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8005db0:	81a3      	strh	r3, [r4, #12]
 8005db2:	6126      	str	r6, [r4, #16]
 8005db4:	6165      	str	r5, [r4, #20]
 8005db6:	443e      	add	r6, r7
 8005db8:	1bed      	subs	r5, r5, r7
 8005dba:	6026      	str	r6, [r4, #0]
 8005dbc:	60a5      	str	r5, [r4, #8]
 8005dbe:	4646      	mov	r6, r8
 8005dc0:	4546      	cmp	r6, r8
 8005dc2:	bf28      	it	cs
 8005dc4:	4646      	movcs	r6, r8
 8005dc6:	4632      	mov	r2, r6
 8005dc8:	4649      	mov	r1, r9
 8005dca:	6820      	ldr	r0, [r4, #0]
 8005dcc:	f7ff fc6b 	bl	80056a6 <memmove>
 8005dd0:	68a3      	ldr	r3, [r4, #8]
 8005dd2:	1b9b      	subs	r3, r3, r6
 8005dd4:	60a3      	str	r3, [r4, #8]
 8005dd6:	6823      	ldr	r3, [r4, #0]
 8005dd8:	441e      	add	r6, r3
 8005dda:	6026      	str	r6, [r4, #0]
 8005ddc:	2000      	movs	r0, #0
 8005dde:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8005de2:	462a      	mov	r2, r5
 8005de4:	f7fe fdfe 	bl	80049e4 <__wrap__realloc_r>
 8005de8:	4606      	mov	r6, r0
 8005dea:	2800      	cmp	r0, #0
 8005dec:	d1e1      	bne.n	8005db2 <__ssputs_r+0x70>
 8005dee:	6921      	ldr	r1, [r4, #16]
 8005df0:	4650      	mov	r0, r10
 8005df2:	f7fe fdf9 	bl	80049e8 <__wrap__free_r>
 8005df6:	e7c7      	b.n	8005d88 <__ssputs_r+0x46>

08005df8 <_svfiprintf_r>:
 8005df8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
 8005dfc:	b09d      	sub	sp, #116	; 0x74
 8005dfe:	4680      	mov	r8, r0
 8005e00:	9303      	str	r3, [sp, #12]
 8005e02:	898b      	ldrh	r3, [r1, #12]
 8005e04:	061c      	lsls	r4, r3, #24
 8005e06:	460d      	mov	r5, r1
 8005e08:	4616      	mov	r6, r2
 8005e0a:	d50f      	bpl.n	8005e2c <_svfiprintf_r+0x34>
 8005e0c:	690b      	ldr	r3, [r1, #16]
 8005e0e:	b96b      	cbnz	r3, 8005e2c <_svfiprintf_r+0x34>
 8005e10:	2140      	movs	r1, #64	; 0x40
 8005e12:	f7fe fde5 	bl	80049e0 <__wrap__malloc_r>
 8005e16:	6028      	str	r0, [r5, #0]
 8005e18:	6128      	str	r0, [r5, #16]
 8005e1a:	b928      	cbnz	r0, 8005e28 <_svfiprintf_r+0x30>
 8005e1c:	230c      	movs	r3, #12
 8005e1e:	f8c8 3000 	str.w	r3, [r8]
 8005e22:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005e26:	e0c5      	b.n	8005fb4 <_svfiprintf_r+0x1bc>
 8005e28:	2340      	movs	r3, #64	; 0x40
 8005e2a:	616b      	str	r3, [r5, #20]
 8005e2c:	2300      	movs	r3, #0
 8005e2e:	9309      	str	r3, [sp, #36]	; 0x24
 8005e30:	2320      	movs	r3, #32
 8005e32:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8005e36:	2330      	movs	r3, #48	; 0x30
 8005e38:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8005e3c:	f04f 0b01 	mov.w	r11, #1
 8005e40:	4637      	mov	r7, r6
 8005e42:	463c      	mov	r4, r7
 8005e44:	f814 3b01 	ldrb.w	r3, [r4], #1
 8005e48:	2b00      	cmp	r3, #0
 8005e4a:	d13c      	bne.n	8005ec6 <_svfiprintf_r+0xce>
 8005e4c:	ebb7 0a06 	subs.w	r10, r7, r6
 8005e50:	d00b      	beq.n	8005e6a <_svfiprintf_r+0x72>
 8005e52:	4653      	mov	r3, r10
 8005e54:	4632      	mov	r2, r6
 8005e56:	4629      	mov	r1, r5
 8005e58:	4640      	mov	r0, r8
 8005e5a:	f7ff ff72 	bl	8005d42 <__ssputs_r>
 8005e5e:	3001      	adds	r0, #1
 8005e60:	f000 80a3 	beq.w	8005faa <_svfiprintf_r+0x1b2>
 8005e64:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005e66:	4453      	add	r3, r10
 8005e68:	9309      	str	r3, [sp, #36]	; 0x24
 8005e6a:	783b      	ldrb	r3, [r7, #0]
 8005e6c:	2b00      	cmp	r3, #0
 8005e6e:	f000 809c 	beq.w	8005faa <_svfiprintf_r+0x1b2>
 8005e72:	2300      	movs	r3, #0
 8005e74:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8005e78:	9304      	str	r3, [sp, #16]
 8005e7a:	9307      	str	r3, [sp, #28]
 8005e7c:	9205      	str	r2, [sp, #20]
 8005e7e:	9306      	str	r3, [sp, #24]
 8005e80:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8005e84:	931a      	str	r3, [sp, #104]	; 0x68
 8005e86:	2205      	movs	r2, #5
 8005e88:	7821      	ldrb	r1, [r4, #0]
 8005e8a:	4850      	ldr	r0, [pc, #320]	; (8005fcc <_svfiprintf_r+0x1d4>)
 8005e8c:	f7ff fbb0 	bl	80055f0 <memchr>
 8005e90:	1c67      	adds	r7, r4, #1
 8005e92:	9b04      	ldr	r3, [sp, #16]
 8005e94:	b9d8      	cbnz	r0, 8005ece <_svfiprintf_r+0xd6>
 8005e96:	06d9      	lsls	r1, r3, #27
 8005e98:	bf44      	itt	mi
 8005e9a:	2220      	movmi	r2, #32
 8005e9c:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8005ea0:	071a      	lsls	r2, r3, #28
 8005ea2:	bf44      	itt	mi
 8005ea4:	222b      	movmi	r2, #43	; 0x2b
 8005ea6:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8005eaa:	7822      	ldrb	r2, [r4, #0]
 8005eac:	2a2a      	cmp	r2, #42	; 0x2a
 8005eae:	d016      	beq.n	8005ede <_svfiprintf_r+0xe6>
 8005eb0:	9a07      	ldr	r2, [sp, #28]
 8005eb2:	2100      	movs	r1, #0
 8005eb4:	200a      	movs	r0, #10
 8005eb6:	4627      	mov	r7, r4
 8005eb8:	3401      	adds	r4, #1
 8005eba:	783b      	ldrb	r3, [r7, #0]
 8005ebc:	3b30      	subs	r3, #48	; 0x30
 8005ebe:	2b09      	cmp	r3, #9
 8005ec0:	d951      	bls.n	8005f66 <_svfiprintf_r+0x16e>
 8005ec2:	b1c9      	cbz	r1, 8005ef8 <_svfiprintf_r+0x100>
 8005ec4:	e011      	b.n	8005eea <_svfiprintf_r+0xf2>
 8005ec6:	2b25      	cmp	r3, #37	; 0x25
 8005ec8:	d0c0      	beq.n	8005e4c <_svfiprintf_r+0x54>
 8005eca:	4627      	mov	r7, r4
 8005ecc:	e7b9      	b.n	8005e42 <_svfiprintf_r+0x4a>
 8005ece:	4a3f      	ldr	r2, [pc, #252]	; (8005fcc <_svfiprintf_r+0x1d4>)
 8005ed0:	1a80      	subs	r0, r0, r2
 8005ed2:	fa0b f000 	lsl.w	r0, r11, r0
 8005ed6:	4318      	orrs	r0, r3
 8005ed8:	9004      	str	r0, [sp, #16]
 8005eda:	463c      	mov	r4, r7
 8005edc:	e7d3      	b.n	8005e86 <_svfiprintf_r+0x8e>
 8005ede:	9a03      	ldr	r2, [sp, #12]
 8005ee0:	1d11      	adds	r1, r2, #4
 8005ee2:	6812      	ldr	r2, [r2, #0]
 8005ee4:	9103      	str	r1, [sp, #12]
 8005ee6:	2a00      	cmp	r2, #0
 8005ee8:	db01      	blt.n	8005eee <_svfiprintf_r+0xf6>
 8005eea:	9207      	str	r2, [sp, #28]
 8005eec:	e004      	b.n	8005ef8 <_svfiprintf_r+0x100>
 8005eee:	4252      	negs	r2, r2
 8005ef0:	f043 0302 	orr.w	r3, r3, #2
 8005ef4:	9207      	str	r2, [sp, #28]
 8005ef6:	9304      	str	r3, [sp, #16]
 8005ef8:	783b      	ldrb	r3, [r7, #0]
 8005efa:	2b2e      	cmp	r3, #46	; 0x2e
 8005efc:	d10e      	bne.n	8005f1c <_svfiprintf_r+0x124>
 8005efe:	787b      	ldrb	r3, [r7, #1]
 8005f00:	2b2a      	cmp	r3, #42	; 0x2a
 8005f02:	f107 0101 	add.w	r1, r7, #1
 8005f06:	d132      	bne.n	8005f6e <_svfiprintf_r+0x176>
 8005f08:	9b03      	ldr	r3, [sp, #12]
 8005f0a:	1d1a      	adds	r2, r3, #4
 8005f0c:	681b      	ldr	r3, [r3, #0]
 8005f0e:	9203      	str	r2, [sp, #12]
 8005f10:	2b00      	cmp	r3, #0
 8005f12:	bfb8      	it	lt
 8005f14:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8005f18:	3702      	adds	r7, #2
 8005f1a:	9305      	str	r3, [sp, #20]
 8005f1c:	4c2c      	ldr	r4, [pc, #176]	; (8005fd0 <_svfiprintf_r+0x1d8>)
 8005f1e:	7839      	ldrb	r1, [r7, #0]
 8005f20:	2203      	movs	r2, #3
 8005f22:	4620      	mov	r0, r4
 8005f24:	f7ff fb64 	bl	80055f0 <memchr>
 8005f28:	b138      	cbz	r0, 8005f3a <_svfiprintf_r+0x142>
 8005f2a:	2340      	movs	r3, #64	; 0x40
 8005f2c:	1b00      	subs	r0, r0, r4
 8005f2e:	fa03 f000 	lsl.w	r0, r3, r0
 8005f32:	9b04      	ldr	r3, [sp, #16]
 8005f34:	4303      	orrs	r3, r0
 8005f36:	9304      	str	r3, [sp, #16]
 8005f38:	3701      	adds	r7, #1
 8005f3a:	7839      	ldrb	r1, [r7, #0]
 8005f3c:	4825      	ldr	r0, [pc, #148]	; (8005fd4 <_svfiprintf_r+0x1dc>)
 8005f3e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8005f42:	2206      	movs	r2, #6
 8005f44:	1c7e      	adds	r6, r7, #1
 8005f46:	f7ff fb53 	bl	80055f0 <memchr>
 8005f4a:	2800      	cmp	r0, #0
 8005f4c:	d035      	beq.n	8005fba <_svfiprintf_r+0x1c2>
 8005f4e:	4b22      	ldr	r3, [pc, #136]	; (8005fd8 <_svfiprintf_r+0x1e0>)
 8005f50:	b9fb      	cbnz	r3, 8005f92 <_svfiprintf_r+0x19a>
 8005f52:	9b03      	ldr	r3, [sp, #12]
 8005f54:	3307      	adds	r3, #7
 8005f56:	f023 0307 	bic.w	r3, r3, #7
 8005f5a:	3308      	adds	r3, #8
 8005f5c:	9303      	str	r3, [sp, #12]
 8005f5e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005f60:	444b      	add	r3, r9
 8005f62:	9309      	str	r3, [sp, #36]	; 0x24
 8005f64:	e76c      	b.n	8005e40 <_svfiprintf_r+0x48>
 8005f66:	fb00 3202 	mla	r2, r0, r2, r3
 8005f6a:	2101      	movs	r1, #1
 8005f6c:	e7a3      	b.n	8005eb6 <_svfiprintf_r+0xbe>
 8005f6e:	2300      	movs	r3, #0
 8005f70:	9305      	str	r3, [sp, #20]
 8005f72:	4618      	mov	r0, r3
 8005f74:	240a      	movs	r4, #10
 8005f76:	460f      	mov	r7, r1
 8005f78:	3101      	adds	r1, #1
 8005f7a:	783a      	ldrb	r2, [r7, #0]
 8005f7c:	3a30      	subs	r2, #48	; 0x30
 8005f7e:	2a09      	cmp	r2, #9
 8005f80:	d903      	bls.n	8005f8a <_svfiprintf_r+0x192>
 8005f82:	2b00      	cmp	r3, #0
 8005f84:	d0ca      	beq.n	8005f1c <_svfiprintf_r+0x124>
 8005f86:	9005      	str	r0, [sp, #20]
 8005f88:	e7c8      	b.n	8005f1c <_svfiprintf_r+0x124>
 8005f8a:	fb04 2000 	mla	r0, r4, r0, r2
 8005f8e:	2301      	movs	r3, #1
 8005f90:	e7f1      	b.n	8005f76 <_svfiprintf_r+0x17e>
 8005f92:	ab03      	add	r3, sp, #12
 8005f94:	9300      	str	r3, [sp, #0]
 8005f96:	462a      	mov	r2, r5
 8005f98:	4b10      	ldr	r3, [pc, #64]	; (8005fdc <_svfiprintf_r+0x1e4>)
 8005f9a:	a904      	add	r1, sp, #16
 8005f9c:	4640      	mov	r0, r8
 8005f9e:	f3af 8000 	nop.w
 8005fa2:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
 8005fa6:	4681      	mov	r9, r0
 8005fa8:	d1d9      	bne.n	8005f5e <_svfiprintf_r+0x166>
 8005faa:	89ab      	ldrh	r3, [r5, #12]
 8005fac:	065b      	lsls	r3, r3, #25
 8005fae:	f53f af38 	bmi.w	8005e22 <_svfiprintf_r+0x2a>
 8005fb2:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005fb4:	b01d      	add	sp, #116	; 0x74
 8005fb6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
 8005fba:	ab03      	add	r3, sp, #12
 8005fbc:	9300      	str	r3, [sp, #0]
 8005fbe:	462a      	mov	r2, r5
 8005fc0:	4b06      	ldr	r3, [pc, #24]	; (8005fdc <_svfiprintf_r+0x1e4>)
 8005fc2:	a904      	add	r1, sp, #16
 8005fc4:	4640      	mov	r0, r8
 8005fc6:	f7ff fcd9 	bl	800597c <_printf_i>
 8005fca:	e7ea      	b.n	8005fa2 <_svfiprintf_r+0x1aa>
 8005fcc:	080067e6 	.word	0x080067e6
 8005fd0:	080067ec 	.word	0x080067ec
 8005fd4:	080067f0 	.word	0x080067f0
 8005fd8:	00000000 	.word	0x00000000
 8005fdc:	08005d43 	.word	0x08005d43

08005fe0 <_read_r>:
 8005fe0:	b538      	push	{r3, r4, r5, lr}
 8005fe2:	4c07      	ldr	r4, [pc, #28]	; (8006000 <_read_r+0x20>)
 8005fe4:	4605      	mov	r5, r0
 8005fe6:	4608      	mov	r0, r1
 8005fe8:	4611      	mov	r1, r2
 8005fea:	2200      	movs	r2, #0
 8005fec:	6022      	str	r2, [r4, #0]
 8005fee:	461a      	mov	r2, r3
 8005ff0:	f7fe fd86 	bl	8004b00 <_read>
 8005ff4:	1c43      	adds	r3, r0, #1
 8005ff6:	d102      	bne.n	8005ffe <_read_r+0x1e>
 8005ff8:	6823      	ldr	r3, [r4, #0]
 8005ffa:	b103      	cbz	r3, 8005ffe <_read_r+0x1e>
 8005ffc:	602b      	str	r3, [r5, #0]
 8005ffe:	bd38      	pop	{r3, r4, r5, pc}
 8006000:	2000299c 	.word	0x2000299c

08006004 <_init>:
 8006004:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006006:	bf00      	nop
 8006008:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800600a:	bc08      	pop	{r3}
 800600c:	469e      	mov	lr, r3
 800600e:	4770      	bx	lr

08006010 <_fini>:
 8006010:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006012:	bf00      	nop
 8006014:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006016:	bc08      	pop	{r3}
 8006018:	469e      	mov	lr, r3
 800601a:	4770      	bx	lr

0800601c <vtable for std_msgs::Time>:
	...
 8006024:	0201 0800 0229 0800 0265 0800 026d 0800     ....)...e...m...

08006034 <vtable for rosserial_msgs::TopicInfo>:
	...
 800603c:	063f 0800 0719 0800 0275 0800 027d 0800     ?.......u...}...

0800604c <vtable for rosserial_msgs::Log>:
	...
 8006054:	0613 0800 06e3 0800 0285 0800 028d 0800     ................

08006064 <vtable for rosserial_msgs::RequestParamResponse>:
	...
 800606c:	0531 0800 07cf 0800 0295 0800 029d 0800     1...............

0800607c <vtable for control::HardwareCommand>:
	...
 8006084:	02a5 0800 02e9 0800 02fd 0800 0305 0800     ................

08006094 <vtable for control::EncoderData>:
	...
 800609c:	030d 0800 0381 0800 03a1 0800 03a9 0800     ................

080060ac <vtable for ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>>:
	...
 80060b4:	0c3d 0800 0cfd 0800 03dd 0800               =...........

080060c0 <vtable for ros::Subscriber<control::HardwareCommand, void>>:
	...
 80060c8:	03b1 0800 03c9 0800 03cd 0800 03d5 0800     ................
 80060d8:	6f63 746e 6f72 2f6c 6f63 6d6d 6e61 2f64     control/command/
 80060e8:	6168 6472 6177 6572 6500 636e 635f 6168     hardware.enc_cha
 80060f8:	7474 7265 3900 3066 3965 6238 6164 3536     tter.9f0e98bda65
 8006108:	3839 3931 3638 6464 3566 6133 6166 6137     981986ddf53afa7a
 8006118:	3034 3465 0039 3131 6261 3764 3133 3263     40e49.11abd731c2
 8006128:	3935 3333 3632 6331 3664 3831 6233 3164     5933261cd6183bd1
 8006138:	6432 3236 3539 7200 736f 6573 6972 6c61     2d6295.rosserial
 8006148:	6d5f 6773 2f73 6f4c 0067 6130 3564 6631     _msgs/Log.0ad51f
 8006158:	3838 6366 3434 3938 6632 6338 3031 3836     88fc44892f8c1068
 8006168:	3034 3737 3436 3036 3530 7200 736f 6573     4077646005.rosse
 8006178:	6972 6c61 6d5f 6773 2f73 6f54 6970 4963     rial_msgs/TopicI
 8006188:	666e 006f                                   nfo.

0800618c <rosserial_msgs::REQUESTPARAM>:
 800618c:	6f72 7373 7265 6169 5f6c 736d 7367 522f     rosserial_msgs/R
 800619c:	7165 6575 7473 6150 6172 006d 654d 7373     equestParam.Mess
 80061ac:	6761 2065 7266 6d6f 6420 7665 6369 2065     age from device 
 80061bc:	7264 706f 6570 3a64 6d20 7365 6173 6567     dropped: message
 80061cc:	6c20 7261 6567 2072 6874 6e61 6220 6675      larger than buf
 80061dc:	6566 2e72 3200 6533 3161 6561 3363 3362     fer..23ea1aec3b3
 80061ec:	6561 3564 6164 3439 3338 6235 6238 6564     aed5da94835b8bde
 80061fc:	3431 3836 0063 6f63 746e 6f72 2f6c 6e45     1468c.control/En
 800620c:	6f63 6564 4472 7461 0061 3837 3037 3962     coderData.7870b9
 800621c:	3935 3362 6433 3835 6466 3766 6132 3961     59b33d58fdf72aa9
 800622c:	6132 6163 6334 3538 3032 6300 6e6f 7274     2aca4c8520.contr
 800623c:	6c6f 482f 7261 7764 7261 4365 6d6f 616d     ol/HardwareComma
 800624c:	646e 6300 3764 3631 6336 3437 3563 3235     nd.cd7166c74c552
 800625c:	3363 3131 6266 6363 6632 3565 3761 6362     c311fbcc2fe5a7bc
 800626c:	3832 0039 7473 5f64 736d 7367 542f 6d69     289.std_msgs/Tim
 800627c:	0065 0000                                   e...

08006280 <void mbed::Callback<void ()>::generate<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> const&)::ops>:
 8006280:	1163 0800 1155 0800 1161 0800 6f72 5f73     c...U...a...ros_
 8006290:	696c 2f62 7542 6666 7265 6465 6553 6972     lib/BufferedSeri
 80062a0:	6c61 422f 6675 6566 6572 5364 7265 6169     al/BufferedSeria
 80062b0:	2e6c 7063 0070 7325 2520 2064 7562 6666     l.cpp.%s %d buff
 80062c0:	7265 6f20 6576 7772 6972 6574 2820 616d     er overwrite (ma
 80062d0:	5f78 7562 5f66 6973 657a 203a 6425 6520     x_buf_size: %d e
 80062e0:	6378 6565 6564 3a64 2520 2964 0d21 000a     xceeded: %d)!...

080062f0 <vtable for BufferedSerial>:
	...
 80062f8:	4797 0800 4797 0800 124d 0800 12a5 0800     .G...G..M.......
 8006308:	1115 0800 1125 0800 1129 0800 13c5 0800     ....%...).......
 8006318:	13dd 0800 1459 0800 141b 0800               ....Y.......

08006324 <us_data>:
 8006324:	632c 0800 0a44 2000                         ,c..D.. 

0800632c <us_interface>:
 800632c:	2f21 0800 2f45 0800 2f7d 0800 2f95 0800     !/..E/..}/.../..
 800633c:	2f61 0800 6970 6d6e 7061 6e20 746f 6620     a/..pinmap not f
 800634c:	756f 646e 6620 726f 6620 6e75 7463 6f69     ound for functio
 800635c:	006e 6970 6d6e 7061 6d20 7369 6d2d 7461     n.pinmap mis-mat
 800636c:	6863 7000 6e69 616d 2070 6f6e 2074 6f66     ch.pinmap not fo
 800637c:	6e75 2064 6f66 2072 6570 6972 6870 7265     und for peripher
 800638c:	6c61 6300 756f 646c 6e20 746f 7020 6e69     al.could not pin
 800639c:	756f 0074                                   out.

080063a0 <mp_stk_size>:
 80063a0:	0210 0000                                   ....

080063a4 <mp_tcb_size>:
 80063a4:	03cc                                        ..

080063a6 <mp_tmr_size>:
	...

080063a8 <os_clockrate>:
 80063a8:	03e8 0000 5452 2058 7265 6f72 2072 6f63     ....RTX error co
 80063b8:	6564 203a 7830 3025 5838 202c 6174 6b73     de: 0x%08X, task
 80063c8:	4920 3a44 3020 2578 3830 0a58 1000                ID: 0x%08X..

080063d5 <os_fifo_size>:
 80063d5:	0110                                             .

080063d6 <os_flags>:
 80063d6:	0001                                        ..

080063d8 <os_maxtaskrun>:
 80063d8:	000f 0000                                   ....

080063dc <os_messageQ_def_osTimerMessageQ>:
 80063dc:	0004 0000 0a68 2000                         ....h.. 

080063e4 <os_mutex_def_env_mutex>:
 80063e4:	0a88 2000                                   ... 

080063e8 <os_mutex_def_malloc_mutex>:
 80063e8:	0a98 2000                                   ... 

080063ec <os_mutex_def_singleton_mutex>:
 80063ec:	0aa8 2000                                   ... 

080063f0 <os_rrobin>:
 80063f0:	0005 0001                                   ....

080063f4 <os_stackinfo>:
 80063f4:	0200 0100                                   ....

080063f8 <os_thread_def_osTimerThread>:
 80063f8:	270d 0800 0002 0000 0001 0000 0320 0000     .'.......... ...
 8006408:	2188 2000                                   .!. 

0800640c <os_trv>:
 800640c:	481f 0001                                   .H..

08006410 <os_mutex_def_osThreadMutex>:
 8006410:	1abc 2000 6950 6d6e 7061 6520 7272 726f     ... Pinmap error
 8006420:	203a 7277 6e6f 2067 6f70 7472 6e20 6d75     : wrong port num
 8006430:	6562 2e72 5500 6b6e 6f6e 6e77 5020 4d57     ber..Unknown PWM
 8006440:	6920 736e 6174 636e 0065 6143 6e6e 746f      instance.Cannot
 8006450:	6920 696e 6974 6c61 7a69 2065 5750 0a4d      initialize PWM.
 8006460:	0000 0000                                   ....

08006464 <ll_pin_defines>:
 8006464:	0001 0000 0002 0000 0004 0000 0008 0000     ................
 8006474:	0010 0000 0020 0000 0040 0000 0080 0000     .... ...@.......
 8006484:	0100 0000 0200 0000 0400 0000 0800 0000     ................
 8006494:	1000 0000 2000 0000 4000 0000 8000 0000     ..... ...@......

080064a4 <pwm_apb_map_table>:
 80064a4:	0000 4000 0000 0000 0400 4000 0000 0000     ...@.......@....
 80064b4:	0800 4000 0000 0000 0c00 4000 0000 0000     ...@.......@....
 80064c4:	0000 4001 0001 0000 4000 4001 0001 0000     ...@.....@.@....
 80064d4:	4400 4001 0001 0000 4800 4001 0001 0000     .D.@.....H.@....
 80064e4:	0000 0000 0002 0000 6143 6e6e 746f 6920     ........Cannot i
 80064f4:	696e 6974 6c61 7a69 2065 4155 5452 000a     nitialize UART..

08006504 <PinMap_PWM>:
 8006504:	0000 0000 0000 4000 1112 0000 0001 0000     .......@........
 8006514:	0000 4000 2112 0000 0005 0000 0000 4000     ...@.!.........@
 8006524:	1112 0000 0006 0000 0400 4000 1212 0000     ...........@....
 8006534:	0007 0000 0000 4001 1112 0002 0008 0000     .......@........
 8006544:	0000 4001 1112 0000 0009 0000 0000 4001     ...@...........@
 8006554:	2112 0000 000a 0000 0000 4001 3112 0000     .!.........@.1..
 8006564:	000b 0000 0000 4001 4112 0000 000f 0000     .......@.A......
 8006574:	0000 4000 1112 0000 0010 0000 0000 4001     ...@...........@
 8006584:	2112 0002 0011 0000 0000 4001 3112 0002     .!.........@.1..
 8006594:	0013 0000 0000 4000 2112 0000 0014 0000     .......@.!......
 80065a4:	0400 4000 1212 0000 0015 0000 0400 4000     ...@...........@
 80065b4:	2212 0000 0016 0000 0800 4000 1212 0000     .".........@....
 80065c4:	0017 0000 0800 4000 2212 0000 0018 0000     .......@."......
 80065d4:	0800 4000 3212 0000 0019 0000 0800 4000     ...@.2.........@
 80065e4:	4212 0000 001a 0000 0000 4000 3112 0000     .B.........@.1..
 80065f4:	001d 0000 0000 4001 1112 0002 001e 0000     .......@........
 8006604:	0000 4001 2112 0002 001f 0000 0000 4001     ...@.!.........@
 8006614:	3112 0002 0026 0000 0400 4000 1212 0000     .1..&......@....
 8006624:	0027 0000 0400 4000 2212 0000 0028 0000     '......@."..(...
 8006634:	0400 4000 3212 0000 0029 0000 0400 4000     ...@.2..)......@
 8006644:	4212 0000 ffff 0000 ffff ffff 0000 0000     .B..............

08006654 <PinMap_UART_RX>:
 8006654:	0003 0000 4400 4000 0712 0000 000a 0000     .....D.@........
 8006664:	1000 4001 0712 0000 000c 0000 1400 4001     ...@...........@
 8006674:	0812 0000 0017 0000 1000 4001 0712 0000     ...........@....
 8006684:	0027 0000 1400 4001 0812 0000 ffff 0000     '......@........
 8006694:	ffff ffff 0000 0000                         ........

0800669c <PinMap_UART_TX>:
 800669c:	0002 0000 4400 4000 0712 0000 0009 0000     .....D.@........
 80066ac:	1000 4001 0712 0000 000b 0000 1400 4001     ...@...........@
 80066bc:	0812 0000 0016 0000 1000 4001 0712 0000     ...........@....
 80066cc:	0026 0000 1400 4001 0812 0000 ffff 0000     &......@........
 80066dc:	ffff ffff 0000 0000                         ........

080066e4 <AHBPrescTable>:
	...
 80066ec:	0201 0403 0706 0908                         ........

080066f4 <APBAHBPrescTable>:
 80066f4:	0000 0000 0201 0403 0201 0403 0706 0908     ................

08006704 <void mbed::Callback<void ()>::generate<void (*)()>(void (* const&)())::ops>:
 8006704:	4765 0800 4769 0800 4771 0800               eG..iG..qG..

08006710 <vtable for mbed::RawSerial>:
	...
 8006718:	4797 0800 4797 0800 47ad 0800 47c1 0800     .G...G...G...G..

08006728 <vtable for mbed::SerialBase>:
	...
 8006730:	47d5 0800 47d7 0800 1201 0800 1239 0800     .G...G......9...
 8006740:	704f 7265 7461 726f 6e20 7765 5d5b 6f20     Operator new[] o
 8006750:	7475 6f20 2066 656d 6f6d 7972 0a0d 0000     ut of memory....

08006760 <__sf_fake_stderr>:
	...

08006780 <__sf_fake_stdin>:
	...

080067a0 <__sf_fake_stdout>:
	...

080067c0 <_global_impure_ptr>:
 80067c0:	01bc 2000 3130 3332 3534 3736 3938 4241     ... 0123456789AB
 80067d0:	4443 4645 3000 3231 3433 3635 3837 6139     CDEF.0123456789a
 80067e0:	6362 6564 0066 2d23 2b30 0020 6c68 004c     bcdef.#-0+ .hlL.
 80067f0:	6665 4567 4746 0000                         efgEFG..

080067f8 <__EH_FRAME_BEGIN__>:
 80067f8:	0000 0000                                   ....
