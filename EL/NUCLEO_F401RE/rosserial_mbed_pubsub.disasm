
NUCLEO_F401RE/rosserial_mbed_pubsub.elf:     file format elf32-littlearm
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08004671


Disassembly of section .text:

08000000 <g_pfnVectors>:
 8000000:	00 80 01 20 71 46 00 08 a5 46 00 08 a5 46 00 08     ... qF...F...F..
 8000010:	a5 46 00 08 a5 46 00 08 a5 46 00 08 00 00 00 00     .F...F...F......
	...
 800002c:	35 45 00 08 a5 46 00 08 00 00 00 00 db 45 00 08     5E...F.......E..
 800003c:	3b 46 00 08 a5 46 00 08 a5 46 00 08 a5 46 00 08     ;F...F...F...F..
 800004c:	a5 46 00 08 a5 46 00 08 a5 46 00 08 a5 46 00 08     .F...F...F...F..
 800005c:	a5 46 00 08 a5 46 00 08 a5 46 00 08 a5 46 00 08     .F...F...F...F..
 800006c:	a5 46 00 08 a5 46 00 08 a5 46 00 08 a5 46 00 08     .F...F...F...F..
 800007c:	a5 46 00 08 a5 46 00 08 a5 46 00 08 a5 46 00 08     .F...F...F...F..
	...
 800009c:	a5 46 00 08 a5 46 00 08 a5 46 00 08 a5 46 00 08     .F...F...F...F..
 80000ac:	a5 46 00 08 a5 46 00 08 a5 46 00 08 a5 46 00 08     .F...F...F...F..
 80000bc:	a5 46 00 08 a5 46 00 08 a5 46 00 08 a5 46 00 08     .F...F...F...F..
 80000cc:	a5 46 00 08 a5 46 00 08 a5 46 00 08 a5 46 00 08     .F...F...F...F..
 80000dc:	00 00 00 00 a5 46 00 08 a5 46 00 08 a5 46 00 08     .....F...F...F..
	...
 80000fc:	a5 46 00 08 00 00 00 00 a5 46 00 08 a5 46 00 08     .F.......F...F..
 800010c:	a5 46 00 08 00 00 00 00 00 00 00 00 00 00 00 00     .F..............
 800011c:	00 00 00 00 a5 46 00 08 a5 46 00 08 a5 46 00 08     .....F...F...F..
 800012c:	a5 46 00 08 a5 46 00 08 00 00 00 00 00 00 00 00     .F...F..........
	...
 800014c:	a5 46 00 08 a5 46 00 08 a5 46 00 08 a5 46 00 08     .F...F...F...F..
 800015c:	a5 46 00 08 a5 46 00 08 a5 46 00 08 00 00 00 00     .F...F...F......
	...
 8000184:	a5 46 00 08 00 00 00 00 00 00 00 00 a5 46 00 08     .F...........F..

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000230 	.word	0x20000230
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08005e78 	.word	0x08005e78

080001b8 <frame_dummy>:
 80001b8:	4b0c      	ldr	r3, [pc, #48]	; (80001ec <frame_dummy+0x34>)
 80001ba:	b143      	cbz	r3, 80001ce <frame_dummy+0x16>
 80001bc:	480c      	ldr	r0, [pc, #48]	; (80001f0 <frame_dummy+0x38>)
 80001be:	490d      	ldr	r1, [pc, #52]	; (80001f4 <frame_dummy+0x3c>)
 80001c0:	b510      	push	{r4, lr}
 80001c2:	f3af 8000 	nop.w
 80001c6:	480c      	ldr	r0, [pc, #48]	; (80001f8 <frame_dummy+0x40>)
 80001c8:	6803      	ldr	r3, [r0, #0]
 80001ca:	b923      	cbnz	r3, 80001d6 <frame_dummy+0x1e>
 80001cc:	bd10      	pop	{r4, pc}
 80001ce:	480a      	ldr	r0, [pc, #40]	; (80001f8 <frame_dummy+0x40>)
 80001d0:	6803      	ldr	r3, [r0, #0]
 80001d2:	b933      	cbnz	r3, 80001e2 <frame_dummy+0x2a>
 80001d4:	4770      	bx	lr
 80001d6:	4b09      	ldr	r3, [pc, #36]	; (80001fc <frame_dummy+0x44>)
 80001d8:	2b00      	cmp	r3, #0
 80001da:	d0f7      	beq.n	80001cc <frame_dummy+0x14>
 80001dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80001e0:	4718      	bx	r3
 80001e2:	4b06      	ldr	r3, [pc, #24]	; (80001fc <frame_dummy+0x44>)
 80001e4:	2b00      	cmp	r3, #0
 80001e6:	d0f5      	beq.n	80001d4 <frame_dummy+0x1c>
 80001e8:	4718      	bx	r3
 80001ea:	bf00      	nop
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08005e78 	.word	0x08005e78
 80001f4:	20000234 	.word	0x20000234
 80001f8:	2000022c 	.word	0x2000022c
 80001fc:	00000000 	.word	0x00000000

08000200 <std_msgs::Time::serialize(unsigned char*) const>:
 8000200:	6843      	ldr	r3, [r0, #4]
 8000202:	700b      	strb	r3, [r1, #0]
 8000204:	6843      	ldr	r3, [r0, #4]
 8000206:	0a1b      	lsrs	r3, r3, #8
 8000208:	704b      	strb	r3, [r1, #1]
 800020a:	88c3      	ldrh	r3, [r0, #6]
 800020c:	708b      	strb	r3, [r1, #2]
 800020e:	79c3      	ldrb	r3, [r0, #7]
 8000210:	70cb      	strb	r3, [r1, #3]
 8000212:	6883      	ldr	r3, [r0, #8]
 8000214:	710b      	strb	r3, [r1, #4]
 8000216:	6883      	ldr	r3, [r0, #8]
 8000218:	0a1b      	lsrs	r3, r3, #8
 800021a:	714b      	strb	r3, [r1, #5]
 800021c:	8943      	ldrh	r3, [r0, #10]
 800021e:	718b      	strb	r3, [r1, #6]
 8000220:	7ac3      	ldrb	r3, [r0, #11]
 8000222:	71cb      	strb	r3, [r1, #7]
 8000224:	2008      	movs	r0, #8
 8000226:	4770      	bx	lr

08000228 <std_msgs::Time::deserialize(unsigned char*)>:
 8000228:	780b      	ldrb	r3, [r1, #0]
 800022a:	6043      	str	r3, [r0, #4]
 800022c:	784a      	ldrb	r2, [r1, #1]
 800022e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8000232:	6043      	str	r3, [r0, #4]
 8000234:	788a      	ldrb	r2, [r1, #2]
 8000236:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800023a:	6043      	str	r3, [r0, #4]
 800023c:	78ca      	ldrb	r2, [r1, #3]
 800023e:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8000242:	6043      	str	r3, [r0, #4]
 8000244:	790b      	ldrb	r3, [r1, #4]
 8000246:	6083      	str	r3, [r0, #8]
 8000248:	794a      	ldrb	r2, [r1, #5]
 800024a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800024e:	6083      	str	r3, [r0, #8]
 8000250:	798a      	ldrb	r2, [r1, #6]
 8000252:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000256:	6083      	str	r3, [r0, #8]
 8000258:	79ca      	ldrb	r2, [r1, #7]
 800025a:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800025e:	6083      	str	r3, [r0, #8]
 8000260:	2008      	movs	r0, #8
 8000262:	4770      	bx	lr

08000264 <std_msgs::Time::getType()>:
 8000264:	4800      	ldr	r0, [pc, #0]	; (8000268 <std_msgs::Time::getType()+0x4>)
 8000266:	4770      	bx	lr
 8000268:	08005ad0 	.word	0x08005ad0

0800026c <std_msgs::Time::getMD5()>:
 800026c:	4800      	ldr	r0, [pc, #0]	; (8000270 <std_msgs::Time::getMD5()+0x4>)
 800026e:	4770      	bx	lr
 8000270:	08005aaf 	.word	0x08005aaf

08000274 <rosserial_msgs::TopicInfo::getType()>:
 8000274:	4800      	ldr	r0, [pc, #0]	; (8000278 <rosserial_msgs::TopicInfo::getType()+0x4>)
 8000276:	4770      	bx	lr
 8000278:	080059d3 	.word	0x080059d3

0800027c <rosserial_msgs::TopicInfo::getMD5()>:
 800027c:	4800      	ldr	r0, [pc, #0]	; (8000280 <rosserial_msgs::TopicInfo::getMD5()+0x4>)
 800027e:	4770      	bx	lr
 8000280:	080059b2 	.word	0x080059b2

08000284 <rosserial_msgs::Log::getType()>:
 8000284:	4800      	ldr	r0, [pc, #0]	; (8000288 <rosserial_msgs::Log::getType()+0x4>)
 8000286:	4770      	bx	lr
 8000288:	0800599f 	.word	0x0800599f

0800028c <rosserial_msgs::Log::getMD5()>:
 800028c:	4800      	ldr	r0, [pc, #0]	; (8000290 <rosserial_msgs::Log::getMD5()+0x4>)
 800028e:	4770      	bx	lr
 8000290:	0800597e 	.word	0x0800597e

08000294 <rosserial_msgs::RequestParamResponse::getType()>:
 8000294:	4800      	ldr	r0, [pc, #0]	; (8000298 <rosserial_msgs::RequestParamResponse::getType()+0x4>)
 8000296:	4770      	bx	lr
 8000298:	080059ec 	.word	0x080059ec

0800029c <rosserial_msgs::RequestParamResponse::getMD5()>:
 800029c:	4800      	ldr	r0, [pc, #0]	; (80002a0 <rosserial_msgs::RequestParamResponse::getMD5()+0x4>)
 800029e:	4770      	bx	lr
 80002a0:	0800595d 	.word	0x0800595d

080002a4 <control::HardwareCommand::serialize(unsigned char*) const>:
 80002a4:	6843      	ldr	r3, [r0, #4]
 80002a6:	700b      	strb	r3, [r1, #0]
 80002a8:	0a1a      	lsrs	r2, r3, #8
 80002aa:	704a      	strb	r2, [r1, #1]
 80002ac:	0c1a      	lsrs	r2, r3, #16
 80002ae:	0e1b      	lsrs	r3, r3, #24
 80002b0:	708a      	strb	r2, [r1, #2]
 80002b2:	70cb      	strb	r3, [r1, #3]
 80002b4:	6883      	ldr	r3, [r0, #8]
 80002b6:	710b      	strb	r3, [r1, #4]
 80002b8:	0a1a      	lsrs	r2, r3, #8
 80002ba:	714a      	strb	r2, [r1, #5]
 80002bc:	0c1a      	lsrs	r2, r3, #16
 80002be:	0e1b      	lsrs	r3, r3, #24
 80002c0:	718a      	strb	r2, [r1, #6]
 80002c2:	71cb      	strb	r3, [r1, #7]
 80002c4:	68c3      	ldr	r3, [r0, #12]
 80002c6:	720b      	strb	r3, [r1, #8]
 80002c8:	0a1a      	lsrs	r2, r3, #8
 80002ca:	724a      	strb	r2, [r1, #9]
 80002cc:	0c1a      	lsrs	r2, r3, #16
 80002ce:	0e1b      	lsrs	r3, r3, #24
 80002d0:	728a      	strb	r2, [r1, #10]
 80002d2:	72cb      	strb	r3, [r1, #11]
 80002d4:	6903      	ldr	r3, [r0, #16]
 80002d6:	730b      	strb	r3, [r1, #12]
 80002d8:	0a1a      	lsrs	r2, r3, #8
 80002da:	734a      	strb	r2, [r1, #13]
 80002dc:	0c1a      	lsrs	r2, r3, #16
 80002de:	0e1b      	lsrs	r3, r3, #24
 80002e0:	738a      	strb	r2, [r1, #14]
 80002e2:	73cb      	strb	r3, [r1, #15]
 80002e4:	2010      	movs	r0, #16
 80002e6:	4770      	bx	lr

080002e8 <control::HardwareCommand::deserialize(unsigned char*)>:
 80002e8:	680b      	ldr	r3, [r1, #0]
 80002ea:	6043      	str	r3, [r0, #4]
 80002ec:	684b      	ldr	r3, [r1, #4]
 80002ee:	6083      	str	r3, [r0, #8]
 80002f0:	688b      	ldr	r3, [r1, #8]
 80002f2:	60c3      	str	r3, [r0, #12]
 80002f4:	68cb      	ldr	r3, [r1, #12]
 80002f6:	6103      	str	r3, [r0, #16]
 80002f8:	2010      	movs	r0, #16
 80002fa:	4770      	bx	lr

080002fc <control::HardwareCommand::getType()>:
 80002fc:	4800      	ldr	r0, [pc, #0]	; (8000300 <control::HardwareCommand::getType()+0x4>)
 80002fe:	4770      	bx	lr
 8000300:	08005a97 	.word	0x08005a97

08000304 <control::HardwareCommand::getMD5()>:
 8000304:	4800      	ldr	r0, [pc, #0]	; (8000308 <control::HardwareCommand::getMD5()+0x4>)
 8000306:	4770      	bx	lr
 8000308:	08005a76 	.word	0x08005a76

0800030c <control::EncoderData::serialize(unsigned char*) const>:
 800030c:	6843      	ldr	r3, [r0, #4]
 800030e:	700b      	strb	r3, [r1, #0]
 8000310:	0a1a      	lsrs	r2, r3, #8
 8000312:	704a      	strb	r2, [r1, #1]
 8000314:	0c1a      	lsrs	r2, r3, #16
 8000316:	0e1b      	lsrs	r3, r3, #24
 8000318:	708a      	strb	r2, [r1, #2]
 800031a:	70cb      	strb	r3, [r1, #3]
 800031c:	6883      	ldr	r3, [r0, #8]
 800031e:	710b      	strb	r3, [r1, #4]
 8000320:	0a1a      	lsrs	r2, r3, #8
 8000322:	714a      	strb	r2, [r1, #5]
 8000324:	0c1a      	lsrs	r2, r3, #16
 8000326:	0e1b      	lsrs	r3, r3, #24
 8000328:	718a      	strb	r2, [r1, #6]
 800032a:	71cb      	strb	r3, [r1, #7]
 800032c:	68c3      	ldr	r3, [r0, #12]
 800032e:	720b      	strb	r3, [r1, #8]
 8000330:	0a1a      	lsrs	r2, r3, #8
 8000332:	724a      	strb	r2, [r1, #9]
 8000334:	0c1a      	lsrs	r2, r3, #16
 8000336:	0e1b      	lsrs	r3, r3, #24
 8000338:	728a      	strb	r2, [r1, #10]
 800033a:	72cb      	strb	r3, [r1, #11]
 800033c:	6903      	ldr	r3, [r0, #16]
 800033e:	730b      	strb	r3, [r1, #12]
 8000340:	0a1a      	lsrs	r2, r3, #8
 8000342:	734a      	strb	r2, [r1, #13]
 8000344:	0c1a      	lsrs	r2, r3, #16
 8000346:	0e1b      	lsrs	r3, r3, #24
 8000348:	738a      	strb	r2, [r1, #14]
 800034a:	73cb      	strb	r3, [r1, #15]
 800034c:	6943      	ldr	r3, [r0, #20]
 800034e:	740b      	strb	r3, [r1, #16]
 8000350:	0a1a      	lsrs	r2, r3, #8
 8000352:	744a      	strb	r2, [r1, #17]
 8000354:	0c1a      	lsrs	r2, r3, #16
 8000356:	0e1b      	lsrs	r3, r3, #24
 8000358:	748a      	strb	r2, [r1, #18]
 800035a:	74cb      	strb	r3, [r1, #19]
 800035c:	6983      	ldr	r3, [r0, #24]
 800035e:	750b      	strb	r3, [r1, #20]
 8000360:	0a1a      	lsrs	r2, r3, #8
 8000362:	754a      	strb	r2, [r1, #21]
 8000364:	0c1a      	lsrs	r2, r3, #16
 8000366:	0e1b      	lsrs	r3, r3, #24
 8000368:	758a      	strb	r2, [r1, #22]
 800036a:	75cb      	strb	r3, [r1, #23]
 800036c:	69c3      	ldr	r3, [r0, #28]
 800036e:	760b      	strb	r3, [r1, #24]
 8000370:	0a1a      	lsrs	r2, r3, #8
 8000372:	764a      	strb	r2, [r1, #25]
 8000374:	0c1a      	lsrs	r2, r3, #16
 8000376:	0e1b      	lsrs	r3, r3, #24
 8000378:	768a      	strb	r2, [r1, #26]
 800037a:	76cb      	strb	r3, [r1, #27]
 800037c:	201c      	movs	r0, #28
 800037e:	4770      	bx	lr

08000380 <control::EncoderData::deserialize(unsigned char*)>:
 8000380:	680b      	ldr	r3, [r1, #0]
 8000382:	6043      	str	r3, [r0, #4]
 8000384:	684b      	ldr	r3, [r1, #4]
 8000386:	6083      	str	r3, [r0, #8]
 8000388:	688b      	ldr	r3, [r1, #8]
 800038a:	60c3      	str	r3, [r0, #12]
 800038c:	68cb      	ldr	r3, [r1, #12]
 800038e:	6103      	str	r3, [r0, #16]
 8000390:	690b      	ldr	r3, [r1, #16]
 8000392:	6143      	str	r3, [r0, #20]
 8000394:	694b      	ldr	r3, [r1, #20]
 8000396:	6183      	str	r3, [r0, #24]
 8000398:	698b      	ldr	r3, [r1, #24]
 800039a:	61c3      	str	r3, [r0, #28]
 800039c:	201c      	movs	r0, #28
 800039e:	4770      	bx	lr

080003a0 <control::EncoderData::getType()>:
 80003a0:	4800      	ldr	r0, [pc, #0]	; (80003a4 <control::EncoderData::getType()+0x4>)
 80003a2:	4770      	bx	lr
 80003a4:	08005a62 	.word	0x08005a62

080003a8 <control::EncoderData::getMD5()>:
 80003a8:	4800      	ldr	r0, [pc, #0]	; (80003ac <control::EncoderData::getMD5()+0x4>)
 80003aa:	4770      	bx	lr
 80003ac:	08005a41 	.word	0x08005a41

080003b0 <messageCb(control::HardwareCommand const&)>:
 80003b0:	4b04      	ldr	r3, [pc, #16]	; (80003c4 <messageCb(control::HardwareCommand const&)+0x14>)
 80003b2:	6842      	ldr	r2, [r0, #4]
 80003b4:	605a      	str	r2, [r3, #4]
 80003b6:	6882      	ldr	r2, [r0, #8]
 80003b8:	609a      	str	r2, [r3, #8]
 80003ba:	68c2      	ldr	r2, [r0, #12]
 80003bc:	60da      	str	r2, [r3, #12]
 80003be:	6902      	ldr	r2, [r0, #16]
 80003c0:	611a      	str	r2, [r3, #16]
 80003c2:	4770      	bx	lr
 80003c4:	20000294 	.word	0x20000294

080003c8 <ros::Subscriber<control::HardwareCommand, void>::callback(unsigned char*)>:
 80003c8:	b570      	push	{r4, r5, r6, lr}
 80003ca:	4605      	mov	r5, r0
 80003cc:	f100 040c 	add.w	r4, r0, #12
 80003d0:	4620      	mov	r0, r4
 80003d2:	f7ff ff89 	bl	80002e8 <control::HardwareCommand::deserialize(unsigned char*)>
 80003d6:	6a2b      	ldr	r3, [r5, #32]
 80003d8:	4620      	mov	r0, r4
 80003da:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80003de:	4718      	bx	r3

080003e0 <ros::Subscriber<control::HardwareCommand, void>::getEndpointType()>:
 80003e0:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80003e2:	4770      	bx	lr

080003e4 <ros::Subscriber<control::HardwareCommand, void>::getMsgType()>:
 80003e4:	4800      	ldr	r0, [pc, #0]	; (80003e8 <ros::Subscriber<control::HardwareCommand, void>::getMsgType()+0x4>)
 80003e6:	4770      	bx	lr
 80003e8:	08005a97 	.word	0x08005a97

080003ec <ros::Subscriber<control::HardwareCommand, void>::getMsgMD5()>:
 80003ec:	4800      	ldr	r0, [pc, #0]	; (80003f0 <ros::Subscriber<control::HardwareCommand, void>::getMsgMD5()+0x4>)
 80003ee:	4770      	bx	lr
 80003f0:	08005a76 	.word	0x08005a76

080003f4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::connected()>:
 80003f4:	f890 05e8 	ldrb.w	r0, [r0, #1512]	; 0x5e8
 80003f8:	4770      	bx	lr

080003fa <ros::Publisher::publish(ros::Msg const*)>:
 80003fa:	68c3      	ldr	r3, [r0, #12]
 80003fc:	681a      	ldr	r2, [r3, #0]
 80003fe:	b410      	push	{r4}
 8000400:	6814      	ldr	r4, [r2, #0]
 8000402:	460a      	mov	r2, r1
 8000404:	6881      	ldr	r1, [r0, #8]
 8000406:	4618      	mov	r0, r3
 8000408:	4623      	mov	r3, r4
 800040a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800040e:	4718      	bx	r3

08000410 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>:
 8000410:	3801      	subs	r0, #1
 8000412:	2300      	movs	r3, #0
 8000414:	fa21 f203 	lsr.w	r2, r1, r3
 8000418:	3308      	adds	r3, #8
 800041a:	2b20      	cmp	r3, #32
 800041c:	f800 2f01 	strb.w	r2, [r0, #1]!
 8000420:	d1f8      	bne.n	8000414 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)+0x4>
 8000422:	4770      	bx	lr

08000424 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const>:
 8000424:	6843      	ldr	r3, [r0, #4]
 8000426:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800042a:	700b      	strb	r3, [r1, #0]
 800042c:	6843      	ldr	r3, [r0, #4]
 800042e:	0a1b      	lsrs	r3, r3, #8
 8000430:	704b      	strb	r3, [r1, #1]
 8000432:	88c3      	ldrh	r3, [r0, #6]
 8000434:	708b      	strb	r3, [r1, #2]
 8000436:	79c3      	ldrb	r3, [r0, #7]
 8000438:	70cb      	strb	r3, [r1, #3]
 800043a:	460d      	mov	r5, r1
 800043c:	1d0a      	adds	r2, r1, #4
 800043e:	4604      	mov	r4, r0
 8000440:	2100      	movs	r1, #0
 8000442:	6860      	ldr	r0, [r4, #4]
 8000444:	4281      	cmp	r1, r0
 8000446:	eba2 0305 	sub.w	r3, r2, r5
 800044a:	f102 0204 	add.w	r2, r2, #4
 800044e:	d20f      	bcs.n	8000470 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x4c>
 8000450:	68e3      	ldr	r3, [r4, #12]
 8000452:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8000456:	f802 3c04 	strb.w	r3, [r2, #-4]
 800045a:	0a18      	lsrs	r0, r3, #8
 800045c:	f802 0c03 	strb.w	r0, [r2, #-3]
 8000460:	0c18      	lsrs	r0, r3, #16
 8000462:	0e1b      	lsrs	r3, r3, #24
 8000464:	f802 0c02 	strb.w	r0, [r2, #-2]
 8000468:	f802 3c01 	strb.w	r3, [r2, #-1]
 800046c:	3101      	adds	r1, #1
 800046e:	e7e8      	b.n	8000442 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x1e>
 8000470:	6922      	ldr	r2, [r4, #16]
 8000472:	54ea      	strb	r2, [r5, r3]
 8000474:	6921      	ldr	r1, [r4, #16]
 8000476:	18ea      	adds	r2, r5, r3
 8000478:	0a09      	lsrs	r1, r1, #8
 800047a:	7051      	strb	r1, [r2, #1]
 800047c:	8a61      	ldrh	r1, [r4, #18]
 800047e:	7091      	strb	r1, [r2, #2]
 8000480:	7ce1      	ldrb	r1, [r4, #19]
 8000482:	70d1      	strb	r1, [r2, #3]
 8000484:	3304      	adds	r3, #4
 8000486:	442b      	add	r3, r5
 8000488:	2100      	movs	r1, #0
 800048a:	6922      	ldr	r2, [r4, #16]
 800048c:	4291      	cmp	r1, r2
 800048e:	eba3 0605 	sub.w	r6, r3, r5
 8000492:	f103 0304 	add.w	r3, r3, #4
 8000496:	d20f      	bcs.n	80004b8 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x94>
 8000498:	69a2      	ldr	r2, [r4, #24]
 800049a:	f852 2021 	ldr.w	r2, [r2, r1, lsl #2]
 800049e:	f803 2c04 	strb.w	r2, [r3, #-4]
 80004a2:	0a10      	lsrs	r0, r2, #8
 80004a4:	f803 0c03 	strb.w	r0, [r3, #-3]
 80004a8:	0c10      	lsrs	r0, r2, #16
 80004aa:	0e12      	lsrs	r2, r2, #24
 80004ac:	f803 0c02 	strb.w	r0, [r3, #-2]
 80004b0:	f803 2c01 	strb.w	r2, [r3, #-1]
 80004b4:	3101      	adds	r1, #1
 80004b6:	e7e8      	b.n	800048a <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0x66>
 80004b8:	69e3      	ldr	r3, [r4, #28]
 80004ba:	55ab      	strb	r3, [r5, r6]
 80004bc:	69e2      	ldr	r2, [r4, #28]
 80004be:	19ab      	adds	r3, r5, r6
 80004c0:	0a12      	lsrs	r2, r2, #8
 80004c2:	705a      	strb	r2, [r3, #1]
 80004c4:	8be2      	ldrh	r2, [r4, #30]
 80004c6:	709a      	strb	r2, [r3, #2]
 80004c8:	7fe2      	ldrb	r2, [r4, #31]
 80004ca:	70da      	strb	r2, [r3, #3]
 80004cc:	3604      	adds	r6, #4
 80004ce:	2700      	movs	r7, #0
 80004d0:	69e3      	ldr	r3, [r4, #28]
 80004d2:	429f      	cmp	r7, r3
 80004d4:	d214      	bcs.n	8000500 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0xdc>
 80004d6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80004d8:	f853 0027 	ldr.w	r0, [r3, r7, lsl #2]
 80004dc:	f004 fff9 	bl	80054d2 <strlen>
 80004e0:	4680      	mov	r8, r0
 80004e2:	4601      	mov	r1, r0
 80004e4:	19a8      	adds	r0, r5, r6
 80004e6:	f7ff ff93 	bl	8000410 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 80004ea:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80004ec:	3604      	adds	r6, #4
 80004ee:	f853 1027 	ldr.w	r1, [r3, r7, lsl #2]
 80004f2:	19a8      	adds	r0, r5, r6
 80004f4:	4642      	mov	r2, r8
 80004f6:	f004 fcfb 	bl	8004ef0 <memcpy>
 80004fa:	4446      	add	r6, r8
 80004fc:	3701      	adds	r7, #1
 80004fe:	e7e7      	b.n	80004d0 <rosserial_msgs::RequestParamResponse::serialize(unsigned char*) const+0xac>
 8000500:	4630      	mov	r0, r6
 8000502:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08000506 <rosserial_msgs::Log::serialize(unsigned char*) const>:
 8000506:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000508:	460e      	mov	r6, r1
 800050a:	7903      	ldrb	r3, [r0, #4]
 800050c:	f806 3b01 	strb.w	r3, [r6], #1
 8000510:	4605      	mov	r5, r0
 8000512:	6880      	ldr	r0, [r0, #8]
 8000514:	460f      	mov	r7, r1
 8000516:	f004 ffdc 	bl	80054d2 <strlen>
 800051a:	4604      	mov	r4, r0
 800051c:	4601      	mov	r1, r0
 800051e:	4630      	mov	r0, r6
 8000520:	f7ff ff76 	bl	8000410 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 8000524:	4622      	mov	r2, r4
 8000526:	68a9      	ldr	r1, [r5, #8]
 8000528:	1d78      	adds	r0, r7, #5
 800052a:	f004 fce1 	bl	8004ef0 <memcpy>
 800052e:	1d60      	adds	r0, r4, #5
 8000530:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08000532 <rosserial_msgs::TopicInfo::serialize(unsigned char*) const>:
 8000532:	8883      	ldrh	r3, [r0, #4]
 8000534:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000538:	700b      	strb	r3, [r1, #0]
 800053a:	8883      	ldrh	r3, [r0, #4]
 800053c:	0a1b      	lsrs	r3, r3, #8
 800053e:	704b      	strb	r3, [r1, #1]
 8000540:	4605      	mov	r5, r0
 8000542:	6880      	ldr	r0, [r0, #8]
 8000544:	460c      	mov	r4, r1
 8000546:	f004 ffc4 	bl	80054d2 <strlen>
 800054a:	4607      	mov	r7, r0
 800054c:	4601      	mov	r1, r0
 800054e:	1ca0      	adds	r0, r4, #2
 8000550:	f7ff ff5e 	bl	8000410 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 8000554:	463a      	mov	r2, r7
 8000556:	68a9      	ldr	r1, [r5, #8]
 8000558:	1da0      	adds	r0, r4, #6
 800055a:	f004 fcc9 	bl	8004ef0 <memcpy>
 800055e:	68e8      	ldr	r0, [r5, #12]
 8000560:	f004 ffb7 	bl	80054d2 <strlen>
 8000564:	f107 0806 	add.w	r8, r7, #6
 8000568:	4606      	mov	r6, r0
 800056a:	4601      	mov	r1, r0
 800056c:	370a      	adds	r7, #10
 800056e:	eb04 0008 	add.w	r0, r4, r8
 8000572:	f7ff ff4d 	bl	8000410 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 8000576:	4632      	mov	r2, r6
 8000578:	68e9      	ldr	r1, [r5, #12]
 800057a:	19e0      	adds	r0, r4, r7
 800057c:	f004 fcb8 	bl	8004ef0 <memcpy>
 8000580:	6928      	ldr	r0, [r5, #16]
 8000582:	f004 ffa6 	bl	80054d2 <strlen>
 8000586:	443e      	add	r6, r7
 8000588:	4601      	mov	r1, r0
 800058a:	4607      	mov	r7, r0
 800058c:	19a0      	adds	r0, r4, r6
 800058e:	3604      	adds	r6, #4
 8000590:	f7ff ff3e 	bl	8000410 <void ros::Msg::varToArr<unsigned char*, unsigned long>(unsigned char*, unsigned long)>
 8000594:	463a      	mov	r2, r7
 8000596:	19a0      	adds	r0, r4, r6
 8000598:	6929      	ldr	r1, [r5, #16]
 800059a:	443e      	add	r6, r7
 800059c:	f004 fca8 	bl	8004ef0 <memcpy>
 80005a0:	696b      	ldr	r3, [r5, #20]
 80005a2:	55a3      	strb	r3, [r4, r6]
 80005a4:	4434      	add	r4, r6
 80005a6:	0a1a      	lsrs	r2, r3, #8
 80005a8:	7062      	strb	r2, [r4, #1]
 80005aa:	0c1a      	lsrs	r2, r3, #16
 80005ac:	0e1b      	lsrs	r3, r3, #24
 80005ae:	70a2      	strb	r2, [r4, #2]
 80005b0:	70e3      	strb	r3, [r4, #3]
 80005b2:	1d30      	adds	r0, r6, #4
 80005b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080005b8 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>:
 80005b8:	b510      	push	{r4, lr}
 80005ba:	2300      	movs	r3, #0
 80005bc:	6003      	str	r3, [r0, #0]
 80005be:	3901      	subs	r1, #1
 80005c0:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 80005c4:	fa02 f403 	lsl.w	r4, r2, r3
 80005c8:	6802      	ldr	r2, [r0, #0]
 80005ca:	3308      	adds	r3, #8
 80005cc:	4322      	orrs	r2, r4
 80005ce:	2b20      	cmp	r3, #32
 80005d0:	6002      	str	r2, [r0, #0]
 80005d2:	d1f5      	bne.n	80005c0 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)+0x8>
 80005d4:	bd10      	pop	{r4, pc}

080005d6 <rosserial_msgs::Log::deserialize(unsigned char*)>:
 80005d6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80005d8:	460c      	mov	r4, r1
 80005da:	f811 3b01 	ldrb.w	r3, [r1], #1
 80005de:	7103      	strb	r3, [r0, #4]
 80005e0:	4605      	mov	r5, r0
 80005e2:	a801      	add	r0, sp, #4
 80005e4:	f7ff ffe8 	bl	80005b8 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 80005e8:	9b01      	ldr	r3, [sp, #4]
 80005ea:	1d62      	adds	r2, r4, #5
 80005ec:	1d58      	adds	r0, r3, #5
 80005ee:	1b11      	subs	r1, r2, r4
 80005f0:	4288      	cmp	r0, r1
 80005f2:	d904      	bls.n	80005fe <rosserial_msgs::Log::deserialize(unsigned char*)+0x28>
 80005f4:	f812 1b01 	ldrb.w	r1, [r2], #1
 80005f8:	f802 1c02 	strb.w	r1, [r2, #-2]
 80005fc:	e7f7      	b.n	80005ee <rosserial_msgs::Log::deserialize(unsigned char*)+0x18>
 80005fe:	4423      	add	r3, r4
 8000600:	2200      	movs	r2, #0
 8000602:	3404      	adds	r4, #4
 8000604:	711a      	strb	r2, [r3, #4]
 8000606:	60ac      	str	r4, [r5, #8]
 8000608:	b003      	add	sp, #12
 800060a:	bd30      	pop	{r4, r5, pc}

0800060c <rosserial_msgs::TopicInfo::deserialize(unsigned char*)>:
 800060c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800060e:	780b      	ldrb	r3, [r1, #0]
 8000610:	8083      	strh	r3, [r0, #4]
 8000612:	784a      	ldrb	r2, [r1, #1]
 8000614:	b085      	sub	sp, #20
 8000616:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 800061a:	8083      	strh	r3, [r0, #4]
 800061c:	460c      	mov	r4, r1
 800061e:	4606      	mov	r6, r0
 8000620:	3102      	adds	r1, #2
 8000622:	a801      	add	r0, sp, #4
 8000624:	f7ff ffc8 	bl	80005b8 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000628:	9f01      	ldr	r7, [sp, #4]
 800062a:	1da3      	adds	r3, r4, #6
 800062c:	1dbd      	adds	r5, r7, #6
 800062e:	1b1a      	subs	r2, r3, r4
 8000630:	4295      	cmp	r5, r2
 8000632:	d904      	bls.n	800063e <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x32>
 8000634:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000638:	f803 2c02 	strb.w	r2, [r3, #-2]
 800063c:	e7f7      	b.n	800062e <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x22>
 800063e:	19e3      	adds	r3, r4, r7
 8000640:	2200      	movs	r2, #0
 8000642:	715a      	strb	r2, [r3, #5]
 8000644:	1d63      	adds	r3, r4, #5
 8000646:	60b3      	str	r3, [r6, #8]
 8000648:	1961      	adds	r1, r4, r5
 800064a:	a802      	add	r0, sp, #8
 800064c:	f7ff ffb4 	bl	80005b8 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000650:	1d2b      	adds	r3, r5, #4
 8000652:	9d02      	ldr	r5, [sp, #8]
 8000654:	f107 020a 	add.w	r2, r7, #10
 8000658:	441d      	add	r5, r3
 800065a:	4422      	add	r2, r4
 800065c:	1b11      	subs	r1, r2, r4
 800065e:	428d      	cmp	r5, r1
 8000660:	d904      	bls.n	800066c <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x60>
 8000662:	f812 1b01 	ldrb.w	r1, [r2], #1
 8000666:	f802 1c02 	strb.w	r1, [r2, #-2]
 800066a:	e7f7      	b.n	800065c <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x50>
 800066c:	1961      	adds	r1, r4, r5
 800066e:	3b01      	subs	r3, #1
 8000670:	4423      	add	r3, r4
 8000672:	2200      	movs	r2, #0
 8000674:	f801 2c01 	strb.w	r2, [r1, #-1]
 8000678:	a803      	add	r0, sp, #12
 800067a:	60f3      	str	r3, [r6, #12]
 800067c:	f7ff ff9c 	bl	80005b8 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 8000680:	9803      	ldr	r0, [sp, #12]
 8000682:	3504      	adds	r5, #4
 8000684:	4428      	add	r0, r5
 8000686:	1963      	adds	r3, r4, r5
 8000688:	1b1a      	subs	r2, r3, r4
 800068a:	4290      	cmp	r0, r2
 800068c:	d904      	bls.n	8000698 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x8c>
 800068e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000692:	f803 2c02 	strb.w	r2, [r3, #-2]
 8000696:	e7f7      	b.n	8000688 <rosserial_msgs::TopicInfo::deserialize(unsigned char*)+0x7c>
 8000698:	1822      	adds	r2, r4, r0
 800069a:	3d01      	subs	r5, #1
 800069c:	2300      	movs	r3, #0
 800069e:	4425      	add	r5, r4
 80006a0:	f802 3c01 	strb.w	r3, [r2, #-1]
 80006a4:	6135      	str	r5, [r6, #16]
 80006a6:	7893      	ldrb	r3, [r2, #2]
 80006a8:	7851      	ldrb	r1, [r2, #1]
 80006aa:	78d2      	ldrb	r2, [r2, #3]
 80006ac:	041b      	lsls	r3, r3, #16
 80006ae:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 80006b2:	5c21      	ldrb	r1, [r4, r0]
 80006b4:	430b      	orrs	r3, r1
 80006b6:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80006ba:	3004      	adds	r0, #4
 80006bc:	6173      	str	r3, [r6, #20]
 80006be:	b005      	add	sp, #20
 80006c0:	bdf0      	pop	{r4, r5, r6, r7, pc}

080006c2 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)>:
 80006c2:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80006c6:	6843      	ldr	r3, [r0, #4]
 80006c8:	680d      	ldr	r5, [r1, #0]
 80006ca:	429d      	cmp	r5, r3
 80006cc:	4604      	mov	r4, r0
 80006ce:	460e      	mov	r6, r1
 80006d0:	d904      	bls.n	80006dc <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x1a>
 80006d2:	00a9      	lsls	r1, r5, #2
 80006d4:	68c0      	ldr	r0, [r0, #12]
 80006d6:	f004 fea1 	bl	800541c <realloc>
 80006da:	60e0      	str	r0, [r4, #12]
 80006dc:	6065      	str	r5, [r4, #4]
 80006de:	1d32      	adds	r2, r6, #4
 80006e0:	2100      	movs	r1, #0
 80006e2:	6860      	ldr	r0, [r4, #4]
 80006e4:	4281      	cmp	r1, r0
 80006e6:	eba2 0306 	sub.w	r3, r2, r6
 80006ea:	f102 0204 	add.w	r2, r2, #4
 80006ee:	d213      	bcs.n	8000718 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x56>
 80006f0:	f812 3c02 	ldrb.w	r3, [r2, #-2]
 80006f4:	f812 0c03 	ldrb.w	r0, [r2, #-3]
 80006f8:	041b      	lsls	r3, r3, #16
 80006fa:	ea43 2300 	orr.w	r3, r3, r0, lsl #8
 80006fe:	f812 0c04 	ldrb.w	r0, [r2, #-4]
 8000702:	4303      	orrs	r3, r0
 8000704:	f812 0c01 	ldrb.w	r0, [r2, #-1]
 8000708:	ea43 6300 	orr.w	r3, r3, r0, lsl #24
 800070c:	68e0      	ldr	r0, [r4, #12]
 800070e:	60a3      	str	r3, [r4, #8]
 8000710:	f840 3021 	str.w	r3, [r0, r1, lsl #2]
 8000714:	3101      	adds	r1, #1
 8000716:	e7e4      	b.n	80006e2 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x20>
 8000718:	18f2      	adds	r2, r6, r3
 800071a:	5cf1      	ldrb	r1, [r6, r3]
 800071c:	7895      	ldrb	r5, [r2, #2]
 800071e:	7850      	ldrb	r0, [r2, #1]
 8000720:	78d2      	ldrb	r2, [r2, #3]
 8000722:	042d      	lsls	r5, r5, #16
 8000724:	ea45 2500 	orr.w	r5, r5, r0, lsl #8
 8000728:	430d      	orrs	r5, r1
 800072a:	1d1f      	adds	r7, r3, #4
 800072c:	6923      	ldr	r3, [r4, #16]
 800072e:	ea45 6502 	orr.w	r5, r5, r2, lsl #24
 8000732:	429d      	cmp	r5, r3
 8000734:	d904      	bls.n	8000740 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x7e>
 8000736:	00a9      	lsls	r1, r5, #2
 8000738:	69a0      	ldr	r0, [r4, #24]
 800073a:	f004 fe6f 	bl	800541c <realloc>
 800073e:	61a0      	str	r0, [r4, #24]
 8000740:	6125      	str	r5, [r4, #16]
 8000742:	19f3      	adds	r3, r6, r7
 8000744:	2100      	movs	r1, #0
 8000746:	6922      	ldr	r2, [r4, #16]
 8000748:	4291      	cmp	r1, r2
 800074a:	eba3 0506 	sub.w	r5, r3, r6
 800074e:	f103 0304 	add.w	r3, r3, #4
 8000752:	d213      	bcs.n	800077c <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xba>
 8000754:	f813 2c02 	ldrb.w	r2, [r3, #-2]
 8000758:	f813 0c03 	ldrb.w	r0, [r3, #-3]
 800075c:	0412      	lsls	r2, r2, #16
 800075e:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8000762:	f813 0c04 	ldrb.w	r0, [r3, #-4]
 8000766:	4302      	orrs	r2, r0
 8000768:	f813 0c01 	ldrb.w	r0, [r3, #-1]
 800076c:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000770:	69a0      	ldr	r0, [r4, #24]
 8000772:	6162      	str	r2, [r4, #20]
 8000774:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
 8000778:	3101      	adds	r1, #1
 800077a:	e7e4      	b.n	8000746 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x84>
 800077c:	1973      	adds	r3, r6, r5
 800077e:	5d72      	ldrb	r2, [r6, r5]
 8000780:	789f      	ldrb	r7, [r3, #2]
 8000782:	7859      	ldrb	r1, [r3, #1]
 8000784:	78db      	ldrb	r3, [r3, #3]
 8000786:	043f      	lsls	r7, r7, #16
 8000788:	ea47 2701 	orr.w	r7, r7, r1, lsl #8
 800078c:	4317      	orrs	r7, r2
 800078e:	ea47 6703 	orr.w	r7, r7, r3, lsl #24
 8000792:	69e3      	ldr	r3, [r4, #28]
 8000794:	429f      	cmp	r7, r3
 8000796:	f105 0504 	add.w	r5, r5, #4
 800079a:	d904      	bls.n	80007a6 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xe4>
 800079c:	00b9      	lsls	r1, r7, #2
 800079e:	6a60      	ldr	r0, [r4, #36]	; 0x24
 80007a0:	f004 fe3c 	bl	800541c <realloc>
 80007a4:	6260      	str	r0, [r4, #36]	; 0x24
 80007a6:	61e7      	str	r7, [r4, #28]
 80007a8:	2700      	movs	r7, #0
 80007aa:	46b8      	mov	r8, r7
 80007ac:	69e3      	ldr	r3, [r4, #28]
 80007ae:	429f      	cmp	r7, r3
 80007b0:	d21a      	bcs.n	80007e8 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x126>
 80007b2:	1971      	adds	r1, r6, r5
 80007b4:	a801      	add	r0, sp, #4
 80007b6:	f7ff feff 	bl	80005b8 <void ros::Msg::arrToVar<unsigned long, unsigned char*>(unsigned long&, unsigned char*)>
 80007ba:	1d2b      	adds	r3, r5, #4
 80007bc:	9d01      	ldr	r5, [sp, #4]
 80007be:	18f2      	adds	r2, r6, r3
 80007c0:	441d      	add	r5, r3
 80007c2:	1b91      	subs	r1, r2, r6
 80007c4:	42a9      	cmp	r1, r5
 80007c6:	d204      	bcs.n	80007d2 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x110>
 80007c8:	f812 1b01 	ldrb.w	r1, [r2], #1
 80007cc:	f802 1c02 	strb.w	r1, [r2, #-2]
 80007d0:	e7f7      	b.n	80007c2 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0x100>
 80007d2:	1972      	adds	r2, r6, r5
 80007d4:	3b01      	subs	r3, #1
 80007d6:	f802 8c01 	strb.w	r8, [r2, #-1]
 80007da:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80007dc:	4433      	add	r3, r6
 80007de:	6223      	str	r3, [r4, #32]
 80007e0:	f842 3027 	str.w	r3, [r2, r7, lsl #2]
 80007e4:	3701      	adds	r7, #1
 80007e6:	e7e1      	b.n	80007ac <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)+0xea>
 80007e8:	4628      	mov	r0, r5
 80007ea:	b002      	add	sp, #8
 80007ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080007f0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>:
 80007f0:	b530      	push	{r4, r5, lr}
 80007f2:	b085      	sub	sp, #20
 80007f4:	4604      	mov	r4, r0
 80007f6:	4b09      	ldr	r3, [pc, #36]	; (800081c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()+0x2c>)
 80007f8:	9301      	str	r3, [sp, #4]
 80007fa:	2300      	movs	r3, #0
 80007fc:	9302      	str	r3, [sp, #8]
 80007fe:	9303      	str	r3, [sp, #12]
 8000800:	f854 3bec 	ldr.w	r3, [r4], #236
 8000804:	aa01      	add	r2, sp, #4
 8000806:	681b      	ldr	r3, [r3, #0]
 8000808:	210a      	movs	r1, #10
 800080a:	4605      	mov	r5, r0
 800080c:	4798      	blx	r3
 800080e:	4620      	mov	r0, r4
 8000810:	f003 fbb6 	bl	8003f80 <mbed::Timer::read_ms()>
 8000814:	f8c5 00fc 	str.w	r0, [r5, #252]	; 0xfc
 8000818:	b005      	add	sp, #20
 800081a:	bd30      	pop	{r4, r5, pc}
 800081c:	08005884 	.word	0x08005884

08000820 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()>:
 8000820:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000824:	b086      	sub	sp, #24
 8000826:	4b2b      	ldr	r3, [pc, #172]	; (80008d4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xb4>)
 8000828:	9300      	str	r3, [sp, #0]
 800082a:	2200      	movs	r2, #0
 800082c:	4b2a      	ldr	r3, [pc, #168]	; (80008d8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xb8>)
 800082e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8000832:	4605      	mov	r5, r0
 8000834:	9302      	str	r3, [sp, #8]
 8000836:	9303      	str	r3, [sp, #12]
 8000838:	9304      	str	r3, [sp, #16]
 800083a:	9205      	str	r2, [sp, #20]
 800083c:	f200 540c 	addw	r4, r0, #1292	; 0x50c
 8000840:	f500 66ae 	add.w	r6, r0, #1392	; 0x570
 8000844:	f44f 7700 	mov.w	r7, #512	; 0x200
 8000848:	6823      	ldr	r3, [r4, #0]
 800084a:	b1bb      	cbz	r3, 800087c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x5c>
 800084c:	6858      	ldr	r0, [r3, #4]
 800084e:	689a      	ldr	r2, [r3, #8]
 8000850:	f8ad 2004 	strh.w	r2, [sp, #4]
 8000854:	681a      	ldr	r2, [r3, #0]
 8000856:	6803      	ldr	r3, [r0, #0]
 8000858:	9202      	str	r2, [sp, #8]
 800085a:	689b      	ldr	r3, [r3, #8]
 800085c:	4798      	blx	r3
 800085e:	6823      	ldr	r3, [r4, #0]
 8000860:	9003      	str	r0, [sp, #12]
 8000862:	6858      	ldr	r0, [r3, #4]
 8000864:	6803      	ldr	r3, [r0, #0]
 8000866:	68db      	ldr	r3, [r3, #12]
 8000868:	4798      	blx	r3
 800086a:	6821      	ldr	r1, [r4, #0]
 800086c:	682b      	ldr	r3, [r5, #0]
 800086e:	9004      	str	r0, [sp, #16]
 8000870:	9705      	str	r7, [sp, #20]
 8000872:	681b      	ldr	r3, [r3, #0]
 8000874:	6909      	ldr	r1, [r1, #16]
 8000876:	466a      	mov	r2, sp
 8000878:	4628      	mov	r0, r5
 800087a:	4798      	blx	r3
 800087c:	3404      	adds	r4, #4
 800087e:	42b4      	cmp	r4, r6
 8000880:	d1e2      	bne.n	8000848 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x28>
 8000882:	f205 56d4 	addw	r6, r5, #1492	; 0x5d4
 8000886:	f44f 7700 	mov.w	r7, #512	; 0x200
 800088a:	6820      	ldr	r0, [r4, #0]
 800088c:	b1c8      	cbz	r0, 80008c2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0xa2>
 800088e:	6843      	ldr	r3, [r0, #4]
 8000890:	f8ad 3004 	strh.w	r3, [sp, #4]
 8000894:	6883      	ldr	r3, [r0, #8]
 8000896:	9302      	str	r3, [sp, #8]
 8000898:	6803      	ldr	r3, [r0, #0]
 800089a:	689b      	ldr	r3, [r3, #8]
 800089c:	4798      	blx	r3
 800089e:	9003      	str	r0, [sp, #12]
 80008a0:	6820      	ldr	r0, [r4, #0]
 80008a2:	6803      	ldr	r3, [r0, #0]
 80008a4:	68db      	ldr	r3, [r3, #12]
 80008a6:	4798      	blx	r3
 80008a8:	682b      	ldr	r3, [r5, #0]
 80008aa:	9004      	str	r0, [sp, #16]
 80008ac:	6820      	ldr	r0, [r4, #0]
 80008ae:	f8d3 8000 	ldr.w	r8, [r3]
 80008b2:	6803      	ldr	r3, [r0, #0]
 80008b4:	9705      	str	r7, [sp, #20]
 80008b6:	685b      	ldr	r3, [r3, #4]
 80008b8:	4798      	blx	r3
 80008ba:	466a      	mov	r2, sp
 80008bc:	4601      	mov	r1, r0
 80008be:	4628      	mov	r0, r5
 80008c0:	47c0      	blx	r8
 80008c2:	3404      	adds	r4, #4
 80008c4:	42a6      	cmp	r6, r4
 80008c6:	d1e0      	bne.n	800088a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()+0x6a>
 80008c8:	2301      	movs	r3, #1
 80008ca:	f885 35e8 	strb.w	r3, [r5, #1512]	; 0x5e8
 80008ce:	b006      	add	sp, #24
 80008d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80008d4:	0800589c 	.word	0x0800589c
 80008d8:	08005b4f 	.word	0x08005b4f

080008dc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)>:
 80008dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80008de:	b085      	sub	sp, #20
 80008e0:	f100 05ec 	add.w	r5, r0, #236	; 0xec
 80008e4:	4b1f      	ldr	r3, [pc, #124]	; (8000964 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x88>)
 80008e6:	9301      	str	r3, [sp, #4]
 80008e8:	4604      	mov	r4, r0
 80008ea:	2300      	movs	r3, #0
 80008ec:	4628      	mov	r0, r5
 80008ee:	9302      	str	r3, [sp, #8]
 80008f0:	9303      	str	r3, [sp, #12]
 80008f2:	460e      	mov	r6, r1
 80008f4:	f003 fb44 	bl	8003f80 <mbed::Timer::read_ms()>
 80008f8:	f8d4 20fc 	ldr.w	r2, [r4, #252]	; 0xfc
 80008fc:	4631      	mov	r1, r6
 80008fe:	1a87      	subs	r7, r0, r2
 8000900:	a801      	add	r0, sp, #4
 8000902:	f7ff fc91 	bl	8000228 <std_msgs::Time::deserialize(unsigned char*)>
 8000906:	9b02      	ldr	r3, [sp, #8]
 8000908:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
 800090c:	fbb7 f2f6 	udiv	r2, r7, r6
 8000910:	4413      	add	r3, r2
 8000912:	9302      	str	r3, [sp, #8]
 8000914:	fb06 7212 	mls	r2, r6, r2, r7
 8000918:	9b03      	ldr	r3, [sp, #12]
 800091a:	4f13      	ldr	r7, [pc, #76]	; (8000968 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x8c>)
 800091c:	4628      	mov	r0, r5
 800091e:	fb07 3202 	mla	r2, r7, r2, r3
 8000922:	9203      	str	r2, [sp, #12]
 8000924:	f003 fb2c 	bl	8003f80 <mbed::Timer::read_ms()>
 8000928:	9a02      	ldr	r2, [sp, #8]
 800092a:	fbb0 f3f6 	udiv	r3, r0, r6
 800092e:	3a01      	subs	r2, #1
 8000930:	1ad2      	subs	r2, r2, r3
 8000932:	9903      	ldr	r1, [sp, #12]
 8000934:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8000938:	4a0c      	ldr	r2, [pc, #48]	; (800096c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)+0x90>)
 800093a:	fb06 0313 	mls	r3, r6, r3, r0
 800093e:	440a      	add	r2, r1
 8000940:	fb07 2313 	mls	r3, r7, r3, r2
 8000944:	f8c4 3104 	str.w	r3, [r4, #260]	; 0x104
 8000948:	f504 7182 	add.w	r1, r4, #260	; 0x104
 800094c:	f504 7080 	add.w	r0, r4, #256	; 0x100
 8000950:	f000 fb26 	bl	8000fa0 <ros::normalizeSecNSec(unsigned long&, unsigned long&)>
 8000954:	4628      	mov	r0, r5
 8000956:	f003 fb13 	bl	8003f80 <mbed::Timer::read_ms()>
 800095a:	f8c4 05f0 	str.w	r0, [r4, #1520]	; 0x5f0
 800095e:	b005      	add	sp, #20
 8000960:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000962:	bf00      	nop
 8000964:	08005884 	.word	0x08005884
 8000968:	000f4240 	.word	0x000f4240
 800096c:	3b9aca00 	.word	0x3b9aca00

08000970 <_GLOBAL__sub_I_nh>:
 8000970:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000972:	4c4c      	ldr	r4, [pc, #304]	; (8000aa4 <_GLOBAL__sub_I_nh+0x134>)
 8000974:	4b4c      	ldr	r3, [pc, #304]	; (8000aa8 <_GLOBAL__sub_I_nh+0x138>)
 8000976:	4620      	mov	r0, r4
 8000978:	2500      	movs	r5, #0
 800097a:	f840 3b04 	str.w	r3, [r0], #4
 800097e:	2304      	movs	r3, #4
 8000980:	2203      	movs	r2, #3
 8000982:	2102      	movs	r1, #2
 8000984:	f104 06ec 	add.w	r6, r4, #236	; 0xec
 8000988:	e88d 0028 	stmia.w	sp, {r3, r5}
 800098c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8000990:	f000 fbfc 	bl	800118c <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)>
 8000994:	4630      	mov	r0, r6
 8000996:	f003 fb09 	bl	8003fac <mbed::Timer::Timer()>
 800099a:	f44f 4361 	mov.w	r3, #57600	; 0xe100
 800099e:	f8c4 30e8 	str.w	r3, [r4, #232]	; 0xe8
 80009a2:	4630      	mov	r0, r6
 80009a4:	f44f 7600 	mov.w	r6, #512	; 0x200
 80009a8:	f003 fabe 	bl	8003f28 <mbed::Timer::start()>
 80009ac:	4632      	mov	r2, r6
 80009ae:	4629      	mov	r1, r5
 80009b0:	f504 7086 	add.w	r0, r4, #268	; 0x10c
 80009b4:	f8c4 50fc 	str.w	r5, [r4, #252]	; 0xfc
 80009b8:	f8c4 5100 	str.w	r5, [r4, #256]	; 0x100
 80009bc:	f8c4 5104 	str.w	r5, [r4, #260]	; 0x104
 80009c0:	f8c4 5108 	str.w	r5, [r4, #264]	; 0x108
 80009c4:	f004 fab9 	bl	8004f3a <memset>
 80009c8:	4632      	mov	r2, r6
 80009ca:	4629      	mov	r1, r5
 80009cc:	2664      	movs	r6, #100	; 0x64
 80009ce:	f504 7043 	add.w	r0, r4, #780	; 0x30c
 80009d2:	f004 fab2 	bl	8004f3a <memset>
 80009d6:	4632      	mov	r2, r6
 80009d8:	4629      	mov	r1, r5
 80009da:	f204 500c 	addw	r0, r4, #1292	; 0x50c
 80009de:	f004 faac 	bl	8004f3a <memset>
 80009e2:	4632      	mov	r2, r6
 80009e4:	4629      	mov	r1, r5
 80009e6:	f504 60ae 	add.w	r0, r4, #1392	; 0x570
 80009ea:	f004 faa6 	bl	8004f3a <memset>
 80009ee:	4b2f      	ldr	r3, [pc, #188]	; (8000aac <_GLOBAL__sub_I_nh+0x13c>)
 80009f0:	f8c4 35fc 	str.w	r3, [r4, #1532]	; 0x5fc
 80009f4:	f504 63c2 	add.w	r3, r4, #1552	; 0x610
 80009f8:	2600      	movs	r6, #0
 80009fa:	f8c4 5600 	str.w	r5, [r4, #1536]	; 0x600
 80009fe:	f8c4 5604 	str.w	r5, [r4, #1540]	; 0x604
 8000a02:	f8c4 5608 	str.w	r5, [r4, #1544]	; 0x608
 8000a06:	f8c4 560c 	str.w	r5, [r4, #1548]	; 0x60c
 8000a0a:	601e      	str	r6, [r3, #0]
 8000a0c:	f8c4 5614 	str.w	r5, [r4, #1556]	; 0x614
 8000a10:	f8c4 5618 	str.w	r5, [r4, #1560]	; 0x618
 8000a14:	f8c4 561c 	str.w	r5, [r4, #1564]	; 0x61c
 8000a18:	f8c4 5620 	str.w	r5, [r4, #1568]	; 0x620
 8000a1c:	4a24      	ldr	r2, [pc, #144]	; (8000ab0 <_GLOBAL__sub_I_nh+0x140>)
 8000a1e:	4925      	ldr	r1, [pc, #148]	; (8000ab4 <_GLOBAL__sub_I_nh+0x144>)
 8000a20:	f8c4 55d4 	str.w	r5, [r4, #1492]	; 0x5d4
 8000a24:	4620      	mov	r0, r4
 8000a26:	f8c4 55d8 	str.w	r5, [r4, #1496]	; 0x5d8
 8000a2a:	f8c4 55dc 	str.w	r5, [r4, #1500]	; 0x5dc
 8000a2e:	f8c4 55e0 	str.w	r5, [r4, #1504]	; 0x5e0
 8000a32:	f8c4 55e4 	str.w	r5, [r4, #1508]	; 0x5e4
 8000a36:	f884 55e8 	strb.w	r5, [r4, #1512]	; 0x5e8
 8000a3a:	f8c4 55ec 	str.w	r5, [r4, #1516]	; 0x5ec
 8000a3e:	f8c4 55f0 	str.w	r5, [r4, #1520]	; 0x5f0
 8000a42:	f8c4 55f4 	str.w	r5, [r4, #1524]	; 0x5f4
 8000a46:	f884 55f8 	strb.w	r5, [r4, #1528]	; 0x5f8
 8000a4a:	f003 fd1b 	bl	8004484 <__aeabi_atexit>
 8000a4e:	4b1a      	ldr	r3, [pc, #104]	; (8000ab8 <_GLOBAL__sub_I_nh+0x148>)
 8000a50:	4a1a      	ldr	r2, [pc, #104]	; (8000abc <_GLOBAL__sub_I_nh+0x14c>)
 8000a52:	491b      	ldr	r1, [pc, #108]	; (8000ac0 <_GLOBAL__sub_I_nh+0x150>)
 8000a54:	601a      	str	r2, [r3, #0]
 8000a56:	4a1b      	ldr	r2, [pc, #108]	; (8000ac4 <_GLOBAL__sub_I_nh+0x154>)
 8000a58:	481b      	ldr	r0, [pc, #108]	; (8000ac8 <_GLOBAL__sub_I_nh+0x158>)
 8000a5a:	6008      	str	r0, [r1, #0]
 8000a5c:	60d0      	str	r0, [r2, #12]
 8000a5e:	481b      	ldr	r0, [pc, #108]	; (8000acc <_GLOBAL__sub_I_nh+0x15c>)
 8000a60:	6210      	str	r0, [r2, #32]
 8000a62:	2001      	movs	r0, #1
 8000a64:	6250      	str	r0, [r2, #36]	; 0x24
 8000a66:	4c1a      	ldr	r4, [pc, #104]	; (8000ad0 <_GLOBAL__sub_I_nh+0x160>)
 8000a68:	481a      	ldr	r0, [pc, #104]	; (8000ad4 <_GLOBAL__sub_I_nh+0x164>)
 8000a6a:	6014      	str	r4, [r2, #0]
 8000a6c:	6116      	str	r6, [r2, #16]
 8000a6e:	6090      	str	r0, [r2, #8]
 8000a70:	6156      	str	r6, [r2, #20]
 8000a72:	6196      	str	r6, [r2, #24]
 8000a74:	61d6      	str	r6, [r2, #28]
 8000a76:	4818      	ldr	r0, [pc, #96]	; (8000ad8 <_GLOBAL__sub_I_nh+0x168>)
 8000a78:	4a18      	ldr	r2, [pc, #96]	; (8000adc <_GLOBAL__sub_I_nh+0x16c>)
 8000a7a:	604e      	str	r6, [r1, #4]
 8000a7c:	e882 0003 	stmia.w	r2, {r0, r1}
 8000a80:	6115      	str	r5, [r2, #16]
 8000a82:	608e      	str	r6, [r1, #8]
 8000a84:	4a16      	ldr	r2, [pc, #88]	; (8000ae0 <_GLOBAL__sub_I_nh+0x170>)
 8000a86:	60ce      	str	r6, [r1, #12]
 8000a88:	610e      	str	r6, [r1, #16]
 8000a8a:	4916      	ldr	r1, [pc, #88]	; (8000ae4 <_GLOBAL__sub_I_nh+0x174>)
 8000a8c:	605e      	str	r6, [r3, #4]
 8000a8e:	609e      	str	r6, [r3, #8]
 8000a90:	60de      	str	r6, [r3, #12]
 8000a92:	611e      	str	r6, [r3, #16]
 8000a94:	615e      	str	r6, [r3, #20]
 8000a96:	619e      	str	r6, [r3, #24]
 8000a98:	61de      	str	r6, [r3, #28]
 8000a9a:	e882 000a 	stmia.w	r2, {r1, r3}
 8000a9e:	6115      	str	r5, [r2, #16]
 8000aa0:	b002      	add	sp, #8
 8000aa2:	bd70      	pop	{r4, r5, r6, pc}
 8000aa4:	200002a8 	.word	0x200002a8
 8000aa8:	08005914 	.word	0x08005914
 8000aac:	080058cc 	.word	0x080058cc
 8000ab0:	20000194 	.word	0x20000194
 8000ab4:	08000f89 	.word	0x08000f89
 8000ab8:	20000260 	.word	0x20000260
 8000abc:	080058fc 	.word	0x080058fc
 8000ac0:	20000294 	.word	0x20000294
 8000ac4:	200008cc 	.word	0x200008cc
 8000ac8:	080058e4 	.word	0x080058e4
 8000acc:	080003b1 	.word	0x080003b1
 8000ad0:	08005928 	.word	0x08005928
 8000ad4:	08005938 	.word	0x08005938
 8000ad8:	08005955 	.word	0x08005955
 8000adc:	2000024c 	.word	0x2000024c
 8000ae0:	20000280 	.word	0x20000280
 8000ae4:	08005951 	.word	0x08005951

08000ae8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)>:
 8000ae8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000aea:	2963      	cmp	r1, #99	; 0x63
 8000aec:	b085      	sub	sp, #20
 8000aee:	4604      	mov	r4, r0
 8000af0:	460e      	mov	r6, r1
 8000af2:	dd03      	ble.n	8000afc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x14>
 8000af4:	f890 55e8 	ldrb.w	r5, [r0, #1512]	; 0x5e8
 8000af8:	2d00      	cmp	r5, #0
 8000afa:	d04d      	beq.n	8000b98 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb0>
 8000afc:	6813      	ldr	r3, [r2, #0]
 8000afe:	f204 3113 	addw	r1, r4, #787	; 0x313
 8000b02:	681b      	ldr	r3, [r3, #0]
 8000b04:	4610      	mov	r0, r2
 8000b06:	4798      	blx	r3
 8000b08:	23ff      	movs	r3, #255	; 0xff
 8000b0a:	f884 330c 	strb.w	r3, [r4, #780]	; 0x30c
 8000b0e:	23fe      	movs	r3, #254	; 0xfe
 8000b10:	f3c0 2207 	ubfx	r2, r0, #8, #8
 8000b14:	f884 330d 	strb.w	r3, [r4, #781]	; 0x30d
 8000b18:	b2c3      	uxtb	r3, r0
 8000b1a:	f884 330e 	strb.w	r3, [r4, #782]	; 0x30e
 8000b1e:	4413      	add	r3, r2
 8000b20:	43db      	mvns	r3, r3
 8000b22:	f884 6311 	strb.w	r6, [r4, #785]	; 0x311
 8000b26:	f346 2607 	sbfx	r6, r6, #8, #8
 8000b2a:	f884 230f 	strb.w	r2, [r4, #783]	; 0x30f
 8000b2e:	f884 3310 	strb.w	r3, [r4, #784]	; 0x310
 8000b32:	f884 6312 	strb.w	r6, [r4, #786]	; 0x312
 8000b36:	f204 3111 	addw	r1, r4, #785	; 0x311
 8000b3a:	2205      	movs	r2, #5
 8000b3c:	2300      	movs	r3, #0
 8000b3e:	1d86      	adds	r6, r0, #6
 8000b40:	42b2      	cmp	r2, r6
 8000b42:	dc04      	bgt.n	8000b4e <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x66>
 8000b44:	f811 5b01 	ldrb.w	r5, [r1], #1
 8000b48:	3201      	adds	r2, #1
 8000b4a:	442b      	add	r3, r5
 8000b4c:	e7f8      	b.n	8000b40 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x58>
 8000b4e:	f100 0508 	add.w	r5, r0, #8
 8000b52:	4420      	add	r0, r4
 8000b54:	43db      	mvns	r3, r3
 8000b56:	f5b5 7f00 	cmp.w	r5, #512	; 0x200
 8000b5a:	f880 3313 	strb.w	r3, [r0, #787]	; 0x313
 8000b5e:	dc0c      	bgt.n	8000b7a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x92>
 8000b60:	f504 7743 	add.w	r7, r4, #780	; 0x30c
 8000b64:	463e      	mov	r6, r7
 8000b66:	3404      	adds	r4, #4
 8000b68:	1bf3      	subs	r3, r6, r7
 8000b6a:	429d      	cmp	r5, r3
 8000b6c:	dd14      	ble.n	8000b98 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb0>
 8000b6e:	f816 1b01 	ldrb.w	r1, [r6], #1
 8000b72:	4620      	mov	r0, r4
 8000b74:	f000 fb7a 	bl	800126c <BufferedSerial::putc(int)>
 8000b78:	e7f6      	b.n	8000b68 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0x80>
 8000b7a:	4b09      	ldr	r3, [pc, #36]	; (8000ba0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xb8>)
 8000b7c:	9301      	str	r3, [sp, #4]
 8000b7e:	2303      	movs	r3, #3
 8000b80:	f88d 3008 	strb.w	r3, [sp, #8]
 8000b84:	4b07      	ldr	r3, [pc, #28]	; (8000ba4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::publish(int, ros::Msg const*)+0xbc>)
 8000b86:	9303      	str	r3, [sp, #12]
 8000b88:	6823      	ldr	r3, [r4, #0]
 8000b8a:	aa01      	add	r2, sp, #4
 8000b8c:	681b      	ldr	r3, [r3, #0]
 8000b8e:	2107      	movs	r1, #7
 8000b90:	4620      	mov	r0, r4
 8000b92:	4798      	blx	r3
 8000b94:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 8000b98:	4628      	mov	r0, r5
 8000b9a:	b005      	add	sp, #20
 8000b9c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000b9e:	bf00      	nop
 8000ba0:	080058b4 	.word	0x080058b4
 8000ba4:	08005a08 	.word	0x08005a08

08000ba8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()>:
 8000ba8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, r11, lr}
 8000bac:	f100 09ec 	add.w	r9, r0, #236	; 0xec
 8000bb0:	4604      	mov	r4, r0
 8000bb2:	4648      	mov	r0, r9
 8000bb4:	f003 f9e4 	bl	8003f80 <mbed::Timer::read_ms()>
 8000bb8:	f8d4 35f0 	ldr.w	r3, [r4, #1520]	; 0x5f0
 8000bbc:	f642 22f8 	movw	r2, #11000	; 0x2af8
 8000bc0:	1ac3      	subs	r3, r0, r3
 8000bc2:	4293      	cmp	r3, r2
 8000bc4:	bf84      	itt	hi
 8000bc6:	2300      	movhi	r3, #0
 8000bc8:	f884 35e8 	strbhi.w	r3, [r4, #1512]	; 0x5e8
 8000bcc:	f8d4 35d4 	ldr.w	r3, [r4, #1492]	; 0x5d4
 8000bd0:	4605      	mov	r5, r0
 8000bd2:	b133      	cbz	r3, 8000be2 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x3a>
 8000bd4:	f8d4 35f4 	ldr.w	r3, [r4, #1524]	; 0x5f4
 8000bd8:	4283      	cmp	r3, r0
 8000bda:	bf3c      	itt	cc
 8000bdc:	2300      	movcc	r3, #0
 8000bde:	f8c4 35d4 	strcc.w	r3, [r4, #1492]	; 0x5d4
 8000be2:	2700      	movs	r7, #0
 8000be4:	46ba      	mov	r10, r7
 8000be6:	f104 0b04 	add.w	r11, r4, #4
 8000bea:	463e      	mov	r6, r7
 8000bec:	f504 7886 	add.w	r8, r4, #268	; 0x10c
 8000bf0:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8000bf4:	b9e3      	cbnz	r3, 8000c30 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x88>
 8000bf6:	4658      	mov	r0, r11
 8000bf8:	f000 f9e0 	bl	8000fbc <BufferedSerial::readable()>
 8000bfc:	bb18      	cbnz	r0, 8000c46 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x9e>
 8000bfe:	f894 35e8 	ldrb.w	r3, [r4, #1512]	; 0x5e8
 8000c02:	b15b      	cbz	r3, 8000c1c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x74>
 8000c04:	f8d4 35ec 	ldr.w	r3, [r4, #1516]	; 0x5ec
 8000c08:	f640 12c4 	movw	r2, #2500	; 0x9c4
 8000c0c:	1aeb      	subs	r3, r5, r3
 8000c0e:	4293      	cmp	r3, r2
 8000c10:	d904      	bls.n	8000c1c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x74>
 8000c12:	4620      	mov	r0, r4
 8000c14:	f7ff fdec 	bl	80007f0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 8000c18:	f8c4 55ec 	str.w	r5, [r4, #1516]	; 0x5ec
 8000c1c:	2f00      	cmp	r7, #0
 8000c1e:	f040 80d7 	bne.w	8000dd0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x228>
 8000c22:	f1ba 0f00 	cmp.w	r10, #0
 8000c26:	bf14      	ite	ne
 8000c28:	f06f 0002 	mvnne.w	r0, #2
 8000c2c:	2000      	moveq	r0, #0
 8000c2e:	e0a7      	b.n	8000d80 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1d8>
 8000c30:	4648      	mov	r0, r9
 8000c32:	f003 f9a5 	bl	8003f80 <mbed::Timer::read_ms()>
 8000c36:	f8d4 3108 	ldr.w	r3, [r4, #264]	; 0x108
 8000c3a:	1b40      	subs	r0, r0, r5
 8000c3c:	4298      	cmp	r0, r3
 8000c3e:	d9da      	bls.n	8000bf6 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x4e>
 8000c40:	f06f 0001 	mvn.w	r0, #1
 8000c44:	e09c      	b.n	8000d80 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1d8>
 8000c46:	4658      	mov	r0, r11
 8000c48:	f000 f9c2 	bl	8000fd0 <BufferedSerial::getc()>
 8000c4c:	2800      	cmp	r0, #0
 8000c4e:	dbd6      	blt.n	8000bfe <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x56>
 8000c50:	f8d4 35e4 	ldr.w	r3, [r4, #1508]	; 0x5e4
 8000c54:	f8d4 25d4 	ldr.w	r2, [r4, #1492]	; 0x5d4
 8000c58:	4403      	add	r3, r0
 8000c5a:	2a07      	cmp	r2, #7
 8000c5c:	f8c4 35e4 	str.w	r3, [r4, #1508]	; 0x5e4
 8000c60:	d110      	bne.n	8000c84 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xdc>
 8000c62:	f8d4 35e0 	ldr.w	r3, [r4, #1504]	; 0x5e0
 8000c66:	1c5a      	adds	r2, r3, #1
 8000c68:	4423      	add	r3, r4
 8000c6a:	f8c4 25e0 	str.w	r2, [r4, #1504]	; 0x5e0
 8000c6e:	f883 010c 	strb.w	r0, [r3, #268]	; 0x10c
 8000c72:	f8d4 35d8 	ldr.w	r3, [r4, #1496]	; 0x5d8
 8000c76:	3b01      	subs	r3, #1
 8000c78:	f8c4 35d8 	str.w	r3, [r4, #1496]	; 0x5d8
 8000c7c:	2b00      	cmp	r3, #0
 8000c7e:	d1b7      	bne.n	8000bf0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 8000c80:	2308      	movs	r3, #8
 8000c82:	e01c      	b.n	8000cbe <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x116>
 8000c84:	b9b2      	cbnz	r2, 8000cb4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x10c>
 8000c86:	28ff      	cmp	r0, #255	; 0xff
 8000c88:	d107      	bne.n	8000c9a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xf2>
 8000c8a:	2301      	movs	r3, #1
 8000c8c:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8000c90:	f105 0314 	add.w	r3, r5, #20
 8000c94:	f8c4 35f4 	str.w	r3, [r4, #1524]	; 0x5f4
 8000c98:	e7aa      	b.n	8000bf0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 8000c9a:	4648      	mov	r0, r9
 8000c9c:	9201      	str	r2, [sp, #4]
 8000c9e:	f003 f96f 	bl	8003f80 <mbed::Timer::read_ms()>
 8000ca2:	f241 3388 	movw	r3, #5000	; 0x1388
 8000ca6:	1b40      	subs	r0, r0, r5
 8000ca8:	4298      	cmp	r0, r3
 8000caa:	9a01      	ldr	r2, [sp, #4]
 8000cac:	d9a0      	bls.n	8000bf0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 8000cae:	f884 25e8 	strb.w	r2, [r4, #1512]	; 0x5e8
 8000cb2:	e7c5      	b.n	8000c40 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x98>
 8000cb4:	2a01      	cmp	r2, #1
 8000cb6:	d10f      	bne.n	8000cd8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x130>
 8000cb8:	28fe      	cmp	r0, #254	; 0xfe
 8000cba:	d103      	bne.n	8000cc4 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x11c>
 8000cbc:	2302      	movs	r3, #2
 8000cbe:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8000cc2:	e795      	b.n	8000bf0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 8000cc4:	f894 35e8 	ldrb.w	r3, [r4, #1512]	; 0x5e8
 8000cc8:	f8c4 65d4 	str.w	r6, [r4, #1492]	; 0x5d4
 8000ccc:	2b00      	cmp	r3, #0
 8000cce:	d18f      	bne.n	8000bf0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 8000cd0:	4620      	mov	r0, r4
 8000cd2:	f7ff fd8d 	bl	80007f0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 8000cd6:	e78b      	b.n	8000bf0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 8000cd8:	2a02      	cmp	r2, #2
 8000cda:	d109      	bne.n	8000cf0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x148>
 8000cdc:	f8c4 05d8 	str.w	r0, [r4, #1496]	; 0x5d8
 8000ce0:	f8c4 65e0 	str.w	r6, [r4, #1504]	; 0x5e0
 8000ce4:	2303      	movs	r3, #3
 8000ce6:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8000cea:	f8c4 05e4 	str.w	r0, [r4, #1508]	; 0x5e4
 8000cee:	e77f      	b.n	8000bf0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 8000cf0:	2a03      	cmp	r2, #3
 8000cf2:	d107      	bne.n	8000d04 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x15c>
 8000cf4:	f8d4 35d8 	ldr.w	r3, [r4, #1496]	; 0x5d8
 8000cf8:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 8000cfc:	f8c4 05d8 	str.w	r0, [r4, #1496]	; 0x5d8
 8000d00:	2304      	movs	r3, #4
 8000d02:	e7dc      	b.n	8000cbe <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x116>
 8000d04:	2a04      	cmp	r2, #4
 8000d06:	d10b      	bne.n	8000d20 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x178>
 8000d08:	425a      	negs	r2, r3
 8000d0a:	b2d2      	uxtb	r2, r2
 8000d0c:	b2db      	uxtb	r3, r3
 8000d0e:	bf58      	it	pl
 8000d10:	4253      	negpl	r3, r2
 8000d12:	2bff      	cmp	r3, #255	; 0xff
 8000d14:	d101      	bne.n	8000d1a <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x172>
 8000d16:	2305      	movs	r3, #5
 8000d18:	e7d1      	b.n	8000cbe <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x116>
 8000d1a:	f8c4 65d4 	str.w	r6, [r4, #1492]	; 0x5d4
 8000d1e:	e767      	b.n	8000bf0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 8000d20:	2a05      	cmp	r2, #5
 8000d22:	d103      	bne.n	8000d2c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x184>
 8000d24:	f8c4 05dc 	str.w	r0, [r4, #1500]	; 0x5dc
 8000d28:	2306      	movs	r3, #6
 8000d2a:	e7dc      	b.n	8000ce6 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x13e>
 8000d2c:	2a06      	cmp	r2, #6
 8000d2e:	d10b      	bne.n	8000d48 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1a0>
 8000d30:	f8d4 35dc 	ldr.w	r3, [r4, #1500]	; 0x5dc
 8000d34:	eb03 2000 	add.w	r0, r3, r0, lsl #8
 8000d38:	2307      	movs	r3, #7
 8000d3a:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8000d3e:	f8c4 05dc 	str.w	r0, [r4, #1500]	; 0x5dc
 8000d42:	f8d4 35d8 	ldr.w	r3, [r4, #1496]	; 0x5d8
 8000d46:	e799      	b.n	8000c7c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0xd4>
 8000d48:	2a08      	cmp	r2, #8
 8000d4a:	f47f af51 	bne.w	8000bf0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 8000d4e:	425a      	negs	r2, r3
 8000d50:	b2d2      	uxtb	r2, r2
 8000d52:	b2db      	uxtb	r3, r3
 8000d54:	bf58      	it	pl
 8000d56:	4253      	negpl	r3, r2
 8000d58:	2bff      	cmp	r3, #255	; 0xff
 8000d5a:	f8c4 65d4 	str.w	r6, [r4, #1492]	; 0x5d4
 8000d5e:	f47f af47 	bne.w	8000bf0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 8000d62:	f8d4 35dc 	ldr.w	r3, [r4, #1500]	; 0x5dc
 8000d66:	b973      	cbnz	r3, 8000d86 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1de>
 8000d68:	4620      	mov	r0, r4
 8000d6a:	f7ff fd41 	bl	80007f0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::requestSyncTime()>
 8000d6e:	4620      	mov	r0, r4
 8000d70:	f7ff fd56 	bl	8000820 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::negotiateTopics()>
 8000d74:	f8c4 55ec 	str.w	r5, [r4, #1516]	; 0x5ec
 8000d78:	f8c4 55f0 	str.w	r5, [r4, #1520]	; 0x5f0
 8000d7c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000d80:	b003      	add	sp, #12
 8000d82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
 8000d86:	2b0a      	cmp	r3, #10
 8000d88:	d105      	bne.n	8000d96 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1ee>
 8000d8a:	4641      	mov	r1, r8
 8000d8c:	4620      	mov	r0, r4
 8000d8e:	f7ff fda5 	bl	80008dc <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::syncTime(unsigned char*)>
 8000d92:	2701      	movs	r7, #1
 8000d94:	e72c      	b.n	8000bf0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 8000d96:	2b06      	cmp	r3, #6
 8000d98:	d108      	bne.n	8000dac <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x204>
 8000d9a:	4641      	mov	r1, r8
 8000d9c:	f204 50fc 	addw	r0, r4, #1532	; 0x5fc
 8000da0:	f7ff fc8f 	bl	80006c2 <rosserial_msgs::RequestParamResponse::deserialize(unsigned char*)>
 8000da4:	2301      	movs	r3, #1
 8000da6:	f884 35f8 	strb.w	r3, [r4, #1528]	; 0x5f8
 8000daa:	e721      	b.n	8000bf0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 8000dac:	2b0b      	cmp	r3, #11
 8000dae:	d104      	bne.n	8000dba <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x212>
 8000db0:	f884 65e8 	strb.w	r6, [r4, #1512]	; 0x5e8
 8000db4:	f04f 0a01 	mov.w	r10, #1
 8000db8:	e71a      	b.n	8000bf0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 8000dba:	33f8      	adds	r3, #248	; 0xf8
 8000dbc:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8000dc0:	2800      	cmp	r0, #0
 8000dc2:	f43f af15 	beq.w	8000bf0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 8000dc6:	6803      	ldr	r3, [r0, #0]
 8000dc8:	4641      	mov	r1, r8
 8000dca:	681b      	ldr	r3, [r3, #0]
 8000dcc:	4798      	blx	r3
 8000dce:	e70f      	b.n	8000bf0 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x48>
 8000dd0:	f06f 0003 	mvn.w	r0, #3
 8000dd4:	e7d4      	b.n	8000d80 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()+0x1d8>
	...

08000dd8 <main>:
 8000dd8:	4c5d      	ldr	r4, [pc, #372]	; (8000f50 <main+0x178>)
 8000dda:	b580      	push	{r7, lr}
 8000ddc:	f8d4 10e8 	ldr.w	r1, [r4, #232]	; 0xe8
 8000de0:	1d20      	adds	r0, r4, #4
 8000de2:	f003 f949 	bl	8004078 <mbed::SerialBase::baud(int)>
 8000de6:	2300      	movs	r3, #0
 8000de8:	f504 62a1 	add.w	r2, r4, #1288	; 0x508
 8000dec:	f8c4 35d4 	str.w	r3, [r4, #1492]	; 0x5d4
 8000df0:	f8c4 35d8 	str.w	r3, [r4, #1496]	; 0x5d8
 8000df4:	f8c4 35e0 	str.w	r3, [r4, #1504]	; 0x5e0
 8000df8:	f8c4 35dc 	str.w	r3, [r4, #1500]	; 0x5dc
 8000dfc:	4611      	mov	r1, r2
 8000dfe:	f851 0f04 	ldr.w	r0, [r1, #4]!
 8000e02:	2800      	cmp	r0, #0
 8000e04:	f040 808e 	bne.w	8000f24 <main+0x14c>
 8000e08:	4952      	ldr	r1, [pc, #328]	; (8000f54 <main+0x17c>)
 8000e0a:	eb04 0083 	add.w	r0, r4, r3, lsl #2
 8000e0e:	337d      	adds	r3, #125	; 0x7d
 8000e10:	f8c0 150c 	str.w	r1, [r0, #1292]	; 0x50c
 8000e14:	608b      	str	r3, [r1, #8]
 8000e16:	60cc      	str	r4, [r1, #12]
 8000e18:	2300      	movs	r3, #0
 8000e1a:	f852 1f04 	ldr.w	r1, [r2, #4]!
 8000e1e:	2900      	cmp	r1, #0
 8000e20:	f040 8085 	bne.w	8000f2e <main+0x156>
 8000e24:	4a4c      	ldr	r2, [pc, #304]	; (8000f58 <main+0x180>)
 8000e26:	eb04 0183 	add.w	r1, r4, r3, lsl #2
 8000e2a:	337d      	adds	r3, #125	; 0x7d
 8000e2c:	f8c1 250c 	str.w	r2, [r1, #1292]	; 0x50c
 8000e30:	6093      	str	r3, [r2, #8]
 8000e32:	60d4      	str	r4, [r2, #12]
 8000e34:	4a49      	ldr	r2, [pc, #292]	; (8000f5c <main+0x184>)
 8000e36:	2300      	movs	r3, #0
 8000e38:	f852 1f04 	ldr.w	r1, [r2, #4]!
 8000e3c:	2900      	cmp	r1, #0
 8000e3e:	d17b      	bne.n	8000f38 <main+0x160>
 8000e40:	f503 71ae 	add.w	r1, r3, #348	; 0x15c
 8000e44:	4a46      	ldr	r2, [pc, #280]	; (8000f60 <main+0x188>)
 8000e46:	f844 2021 	str.w	r2, [r4, r1, lsl #2]
 8000e4a:	3364      	adds	r3, #100	; 0x64
 8000e4c:	6053      	str	r3, [r2, #4]
 8000e4e:	4c45      	ldr	r4, [pc, #276]	; (8000f64 <main+0x18c>)
 8000e50:	4b45      	ldr	r3, [pc, #276]	; (8000f68 <main+0x190>)
 8000e52:	6063      	str	r3, [r4, #4]
 8000e54:	4b45      	ldr	r3, [pc, #276]	; (8000f6c <main+0x194>)
 8000e56:	60a3      	str	r3, [r4, #8]
 8000e58:	4b45      	ldr	r3, [pc, #276]	; (8000f70 <main+0x198>)
 8000e5a:	60e3      	str	r3, [r4, #12]
 8000e5c:	4b45      	ldr	r3, [pc, #276]	; (8000f74 <main+0x19c>)
 8000e5e:	6123      	str	r3, [r4, #16]
 8000e60:	4b45      	ldr	r3, [pc, #276]	; (8000f78 <main+0x1a0>)
 8000e62:	6163      	str	r3, [r4, #20]
 8000e64:	a738      	add	r7, pc, #224	; (adr r7, 8000f48 <main+0x170>)
 8000e66:	e9d7 6700 	ldrd	r6, r7, [r7]
 8000e6a:	4b44      	ldr	r3, [pc, #272]	; (8000f7c <main+0x1a4>)
 8000e6c:	61a3      	str	r3, [r4, #24]
 8000e6e:	f8df 8114 	ldr.w	r8, [pc, #276]	; 8000f84 <main+0x1ac>
 8000e72:	4b43      	ldr	r3, [pc, #268]	; (8000f80 <main+0x1a8>)
 8000e74:	4d37      	ldr	r5, [pc, #220]	; (8000f54 <main+0x17c>)
 8000e76:	61e3      	str	r3, [r4, #28]
 8000e78:	4641      	mov	r1, r8
 8000e7a:	4628      	mov	r0, r5
 8000e7c:	f7ff fabd 	bl	80003fa <ros::Publisher::publish(ros::Msg const*)>
 8000e80:	4938      	ldr	r1, [pc, #224]	; (8000f64 <main+0x18c>)
 8000e82:	4835      	ldr	r0, [pc, #212]	; (8000f58 <main+0x180>)
 8000e84:	f7ff fab9 	bl	80003fa <ros::Publisher::publish(ros::Msg const*)>
 8000e88:	4831      	ldr	r0, [pc, #196]	; (8000f50 <main+0x178>)
 8000e8a:	f7ff fe8d 	bl	8000ba8 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::spinOnce()>
 8000e8e:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8000e92:	f003 f9f5 	bl	8004280 <wait_ms>
 8000e96:	6860      	ldr	r0, [r4, #4]
 8000e98:	f003 fd6a 	bl	8004970 <__aeabi_f2d>
 8000e9c:	4632      	mov	r2, r6
 8000e9e:	463b      	mov	r3, r7
 8000ea0:	f003 fc08 	bl	80046b4 <__adddf3>
 8000ea4:	f003 fdb8 	bl	8004a18 <__aeabi_d2f>
 8000ea8:	6060      	str	r0, [r4, #4]
 8000eaa:	68a0      	ldr	r0, [r4, #8]
 8000eac:	f003 fd60 	bl	8004970 <__aeabi_f2d>
 8000eb0:	4632      	mov	r2, r6
 8000eb2:	463b      	mov	r3, r7
 8000eb4:	f003 fbfe 	bl	80046b4 <__adddf3>
 8000eb8:	f003 fdae 	bl	8004a18 <__aeabi_d2f>
 8000ebc:	60a0      	str	r0, [r4, #8]
 8000ebe:	68e0      	ldr	r0, [r4, #12]
 8000ec0:	f003 fd56 	bl	8004970 <__aeabi_f2d>
 8000ec4:	4632      	mov	r2, r6
 8000ec6:	463b      	mov	r3, r7
 8000ec8:	f003 fbf4 	bl	80046b4 <__adddf3>
 8000ecc:	f003 fda4 	bl	8004a18 <__aeabi_d2f>
 8000ed0:	60e0      	str	r0, [r4, #12]
 8000ed2:	6920      	ldr	r0, [r4, #16]
 8000ed4:	f003 fd4c 	bl	8004970 <__aeabi_f2d>
 8000ed8:	4632      	mov	r2, r6
 8000eda:	463b      	mov	r3, r7
 8000edc:	f003 fbea 	bl	80046b4 <__adddf3>
 8000ee0:	f003 fd9a 	bl	8004a18 <__aeabi_d2f>
 8000ee4:	6120      	str	r0, [r4, #16]
 8000ee6:	6960      	ldr	r0, [r4, #20]
 8000ee8:	f003 fd42 	bl	8004970 <__aeabi_f2d>
 8000eec:	4632      	mov	r2, r6
 8000eee:	463b      	mov	r3, r7
 8000ef0:	f003 fbe0 	bl	80046b4 <__adddf3>
 8000ef4:	f003 fd90 	bl	8004a18 <__aeabi_d2f>
 8000ef8:	6160      	str	r0, [r4, #20]
 8000efa:	69a0      	ldr	r0, [r4, #24]
 8000efc:	f003 fd38 	bl	8004970 <__aeabi_f2d>
 8000f00:	4632      	mov	r2, r6
 8000f02:	463b      	mov	r3, r7
 8000f04:	f003 fbd6 	bl	80046b4 <__adddf3>
 8000f08:	f003 fd86 	bl	8004a18 <__aeabi_d2f>
 8000f0c:	61a0      	str	r0, [r4, #24]
 8000f0e:	69e0      	ldr	r0, [r4, #28]
 8000f10:	f003 fd2e 	bl	8004970 <__aeabi_f2d>
 8000f14:	4632      	mov	r2, r6
 8000f16:	463b      	mov	r3, r7
 8000f18:	f003 fbcc 	bl	80046b4 <__adddf3>
 8000f1c:	f003 fd7c 	bl	8004a18 <__aeabi_d2f>
 8000f20:	61e0      	str	r0, [r4, #28]
 8000f22:	e7a9      	b.n	8000e78 <main+0xa0>
 8000f24:	3301      	adds	r3, #1
 8000f26:	2b19      	cmp	r3, #25
 8000f28:	f47f af69 	bne.w	8000dfe <main+0x26>
 8000f2c:	e774      	b.n	8000e18 <main+0x40>
 8000f2e:	3301      	adds	r3, #1
 8000f30:	2b19      	cmp	r3, #25
 8000f32:	f47f af72 	bne.w	8000e1a <main+0x42>
 8000f36:	e77d      	b.n	8000e34 <main+0x5c>
 8000f38:	3301      	adds	r3, #1
 8000f3a:	2b19      	cmp	r3, #25
 8000f3c:	f47f af7c 	bne.w	8000e38 <main+0x60>
 8000f40:	e785      	b.n	8000e4e <main+0x76>
 8000f42:	bf00      	nop
 8000f44:	f3af 8000 	nop.w
 8000f48:	9999999a 	.word	0x9999999a
 8000f4c:	3fb99999 	.word	0x3fb99999
 8000f50:	200002a8 	.word	0x200002a8
 8000f54:	2000024c 	.word	0x2000024c
 8000f58:	20000280 	.word	0x20000280
 8000f5c:	20000814 	.word	0x20000814
 8000f60:	200008cc 	.word	0x200008cc
 8000f64:	20000260 	.word	0x20000260
 8000f68:	42c80000 	.word	0x42c80000
 8000f6c:	42dc0000 	.word	0x42dc0000
 8000f70:	42f00000 	.word	0x42f00000
 8000f74:	43020000 	.word	0x43020000
 8000f78:	430c0000 	.word	0x430c0000
 8000f7c:	43160000 	.word	0x43160000
 8000f80:	43200000 	.word	0x43200000
 8000f84:	20000294 	.word	0x20000294

08000f88 <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::~NodeHandle_()>:
 8000f88:	b510      	push	{r4, lr}
 8000f8a:	4b04      	ldr	r3, [pc, #16]	; (8000f9c <ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>::~NodeHandle_()+0x14>)
 8000f8c:	4604      	mov	r4, r0
 8000f8e:	f840 3b04 	str.w	r3, [r0], #4
 8000f92:	f000 f8af 	bl	80010f4 <BufferedSerial::~BufferedSerial()>
 8000f96:	4620      	mov	r0, r4
 8000f98:	bd10      	pop	{r4, pc}
 8000f9a:	bf00      	nop
 8000f9c:	08005914 	.word	0x08005914

08000fa0 <ros::normalizeSecNSec(unsigned long&, unsigned long&)>:
 8000fa0:	b530      	push	{r4, r5, lr}
 8000fa2:	6802      	ldr	r2, [r0, #0]
 8000fa4:	680d      	ldr	r5, [r1, #0]
 8000fa6:	4c04      	ldr	r4, [pc, #16]	; (8000fb8 <ros::normalizeSecNSec(unsigned long&, unsigned long&)+0x18>)
 8000fa8:	fbb5 f3f4 	udiv	r3, r5, r4
 8000fac:	441a      	add	r2, r3
 8000fae:	fb04 5313 	mls	r3, r4, r3, r5
 8000fb2:	6002      	str	r2, [r0, #0]
 8000fb4:	600b      	str	r3, [r1, #0]
 8000fb6:	bd30      	pop	{r4, r5, pc}
 8000fb8:	3b9aca00 	.word	0x3b9aca00

08000fbc <BufferedSerial::readable()>:
 8000fbc:	f8d0 20c0 	ldr.w	r2, [r0, #192]	; 0xc0
 8000fc0:	f8d0 00c4 	ldr.w	r0, [r0, #196]	; 0xc4
 8000fc4:	1a10      	subs	r0, r2, r0
 8000fc6:	bf18      	it	ne
 8000fc8:	2001      	movne	r0, #1
 8000fca:	4770      	bx	lr

08000fcc <BufferedSerial::writeable()>:
 8000fcc:	2001      	movs	r0, #1
 8000fce:	4770      	bx	lr

08000fd0 <BufferedSerial::getc()>:
 8000fd0:	b510      	push	{r4, lr}
 8000fd2:	f8d0 20c4 	ldr.w	r2, [r0, #196]	; 0xc4
 8000fd6:	f8d0 10bc 	ldr.w	r1, [r0, #188]	; 0xbc
 8000fda:	4603      	mov	r3, r0
 8000fdc:	1c50      	adds	r0, r2, #1
 8000fde:	f8c3 00c4 	str.w	r0, [r3, #196]	; 0xc4
 8000fe2:	5c88      	ldrb	r0, [r1, r2]
 8000fe4:	f8d3 20c8 	ldr.w	r2, [r3, #200]	; 0xc8
 8000fe8:	f8d3 40c4 	ldr.w	r4, [r3, #196]	; 0xc4
 8000fec:	3a01      	subs	r2, #1
 8000fee:	fbb4 f1f2 	udiv	r1, r4, r2
 8000ff2:	fb02 4211 	mls	r2, r2, r1, r4
 8000ff6:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
 8000ffa:	bd10      	pop	{r4, pc}

08000ffc <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*, void const*)>:
 8000ffc:	4603      	mov	r3, r0
 8000ffe:	b110      	cbz	r0, 8001006 <void mbed::Callback<void ()>::function_move<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*, void const*)+0xa>
 8001000:	c907      	ldmia	r1, {r0, r1, r2}
 8001002:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8001006:	4770      	bx	lr

08001008 <void mbed::Callback<void ()>::function_dtor<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void*)>:
 8001008:	4770      	bx	lr

0800100a <void mbed::Callback<void ()>::function_call<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(void const*)>:
 800100a:	6842      	ldr	r2, [r0, #4]
 800100c:	6881      	ldr	r1, [r0, #8]
 800100e:	6803      	ldr	r3, [r0, #0]
 8001010:	f012 0f01 	tst.w	r2, #1
 8001014:	ea4f 0262 	mov.w	r2, r2, asr #1
 8001018:	bf1c      	itt	ne
 800101a:	5888      	ldrne	r0, [r1, r2]
 800101c:	58c3      	ldrne	r3, [r0, r3]
 800101e:	1888      	adds	r0, r1, r2
 8001020:	4718      	bx	r3

08001022 <mbed::Callback<void ()>::~Callback()>:
 8001022:	68c3      	ldr	r3, [r0, #12]
 8001024:	b510      	push	{r4, lr}
 8001026:	4604      	mov	r4, r0
 8001028:	b10b      	cbz	r3, 800102e <mbed::Callback<void ()>::~Callback()+0xc>
 800102a:	689b      	ldr	r3, [r3, #8]
 800102c:	4798      	blx	r3
 800102e:	4620      	mov	r0, r4
 8001030:	bd10      	pop	{r4, pc}

08001032 <BufferedSerial::txIrq()>:
 8001032:	b530      	push	{r4, r5, lr}
 8001034:	4604      	mov	r4, r0
 8001036:	b085      	sub	sp, #20
 8001038:	f100 054c 	add.w	r5, r0, #76	; 0x4c
 800103c:	4628      	mov	r0, r5
 800103e:	f002 f965 	bl	800330c <serial_writable>
 8001042:	b330      	cbz	r0, 8001092 <BufferedSerial::txIrq()+0x60>
 8001044:	f8d4 20d0 	ldr.w	r2, [r4, #208]	; 0xd0
 8001048:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 800104c:	429a      	cmp	r2, r3
 800104e:	d016      	beq.n	800107e <BufferedSerial::txIrq()+0x4c>
 8001050:	f8d4 30d4 	ldr.w	r3, [r4, #212]	; 0xd4
 8001054:	f8d4 20cc 	ldr.w	r2, [r4, #204]	; 0xcc
 8001058:	1c59      	adds	r1, r3, #1
 800105a:	f8c4 10d4 	str.w	r1, [r4, #212]	; 0xd4
 800105e:	5cd1      	ldrb	r1, [r2, r3]
 8001060:	f8d4 30d8 	ldr.w	r3, [r4, #216]	; 0xd8
 8001064:	f8d4 00d4 	ldr.w	r0, [r4, #212]	; 0xd4
 8001068:	3b01      	subs	r3, #1
 800106a:	fbb0 f2f3 	udiv	r2, r0, r3
 800106e:	fb03 0312 	mls	r3, r3, r2, r0
 8001072:	f8c4 30d4 	str.w	r3, [r4, #212]	; 0xd4
 8001076:	4628      	mov	r0, r5
 8001078:	f002 f952 	bl	8003320 <serial_putc>
 800107c:	e7de      	b.n	800103c <BufferedSerial::txIrq()+0xa>
 800107e:	2300      	movs	r3, #0
 8001080:	4620      	mov	r0, r4
 8001082:	2201      	movs	r2, #1
 8001084:	4669      	mov	r1, sp
 8001086:	9303      	str	r3, [sp, #12]
 8001088:	f003 f872 	bl	8004170 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 800108c:	4668      	mov	r0, sp
 800108e:	f7ff ffc8 	bl	8001022 <mbed::Callback<void ()>::~Callback()>
 8001092:	b005      	add	sp, #20
 8001094:	bd30      	pop	{r4, r5, pc}

08001096 <mbed::Callback<void (int)>::~Callback()>:
 8001096:	68c3      	ldr	r3, [r0, #12]
 8001098:	b510      	push	{r4, lr}
 800109a:	4604      	mov	r4, r0
 800109c:	b10b      	cbz	r3, 80010a2 <mbed::Callback<void (int)>::~Callback()+0xc>
 800109e:	689b      	ldr	r3, [r3, #8]
 80010a0:	4798      	blx	r3
 80010a2:	4620      	mov	r0, r4
 80010a4:	bd10      	pop	{r4, pc}
	...

080010a8 <mbed::SerialBase::~SerialBase()>:
 80010a8:	b570      	push	{r4, r5, r6, lr}
 80010aa:	4606      	mov	r6, r0
 80010ac:	4b0b      	ldr	r3, [pc, #44]	; (80010dc <mbed::SerialBase::~SerialBase()+0x34>)
 80010ae:	f846 3b98 	str.w	r3, [r6], #152
 80010b2:	4604      	mov	r4, r0
 80010b4:	b146      	cbz	r6, 80010c8 <mbed::SerialBase::~SerialBase()+0x20>
 80010b6:	f100 05b8 	add.w	r5, r0, #184	; 0xb8
 80010ba:	42b5      	cmp	r5, r6
 80010bc:	d004      	beq.n	80010c8 <mbed::SerialBase::~SerialBase()+0x20>
 80010be:	3d10      	subs	r5, #16
 80010c0:	4628      	mov	r0, r5
 80010c2:	f7ff ffae 	bl	8001022 <mbed::Callback<void ()>::~Callback()>
 80010c6:	e7f8      	b.n	80010ba <mbed::SerialBase::~SerialBase()+0x12>
 80010c8:	f104 0038 	add.w	r0, r4, #56	; 0x38
 80010cc:	f7ff ffe3 	bl	8001096 <mbed::Callback<void (int)>::~Callback()>
 80010d0:	f104 0028 	add.w	r0, r4, #40	; 0x28
 80010d4:	f7ff ffdf 	bl	8001096 <mbed::Callback<void (int)>::~Callback()>
 80010d8:	4620      	mov	r0, r4
 80010da:	bd70      	pop	{r4, r5, r6, pc}
 80010dc:	08005db0 	.word	0x08005db0

080010e0 <mbed::SerialBase::~SerialBase()>:
 80010e0:	b510      	push	{r4, lr}
 80010e2:	4604      	mov	r4, r0
 80010e4:	f7ff ffe0 	bl	80010a8 <mbed::SerialBase::~SerialBase()>
 80010e8:	4620      	mov	r0, r4
 80010ea:	f003 f9e9 	bl	80044c0 <operator delete(void*)>
 80010ee:	4620      	mov	r0, r4
 80010f0:	bd10      	pop	{r4, pc}
	...

080010f4 <BufferedSerial::~BufferedSerial()>:
 80010f4:	b530      	push	{r4, r5, lr}
 80010f6:	4b13      	ldr	r3, [pc, #76]	; (8001144 <BufferedSerial::~BufferedSerial()+0x50>)
 80010f8:	6003      	str	r3, [r0, #0]
 80010fa:	b085      	sub	sp, #20
 80010fc:	2500      	movs	r5, #0
 80010fe:	462a      	mov	r2, r5
 8001100:	4669      	mov	r1, sp
 8001102:	4604      	mov	r4, r0
 8001104:	9503      	str	r5, [sp, #12]
 8001106:	f003 f833 	bl	8004170 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 800110a:	4668      	mov	r0, sp
 800110c:	f7ff ff89 	bl	8001022 <mbed::Callback<void ()>::~Callback()>
 8001110:	2201      	movs	r2, #1
 8001112:	4669      	mov	r1, sp
 8001114:	4620      	mov	r0, r4
 8001116:	9503      	str	r5, [sp, #12]
 8001118:	f003 f82a 	bl	8004170 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 800111c:	4668      	mov	r0, sp
 800111e:	f7ff ff80 	bl	8001022 <mbed::Callback<void ()>::~Callback()>
 8001122:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
 8001126:	f000 f923 	bl	8001370 <Buffer<char>::~Buffer()>
 800112a:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800112e:	f000 f91f 	bl	8001370 <Buffer<char>::~Buffer()>
 8001132:	4b05      	ldr	r3, [pc, #20]	; (8001148 <BufferedSerial::~BufferedSerial()+0x54>)
 8001134:	6023      	str	r3, [r4, #0]
 8001136:	4620      	mov	r0, r4
 8001138:	f7ff ffb6 	bl	80010a8 <mbed::SerialBase::~SerialBase()>
 800113c:	4620      	mov	r0, r4
 800113e:	b005      	add	sp, #20
 8001140:	bd30      	pop	{r4, r5, pc}
 8001142:	bf00      	nop
 8001144:	08005b58 	.word	0x08005b58
 8001148:	08005d98 	.word	0x08005d98

0800114c <BufferedSerial::~BufferedSerial()>:
 800114c:	b510      	push	{r4, lr}
 800114e:	4604      	mov	r4, r0
 8001150:	f7ff ffd0 	bl	80010f4 <BufferedSerial::~BufferedSerial()>
 8001154:	4620      	mov	r0, r4
 8001156:	f003 f9b3 	bl	80044c0 <operator delete(void*)>
 800115a:	4620      	mov	r0, r4
 800115c:	bd10      	pop	{r4, pc}
	...

08001160 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>:
 8001160:	b510      	push	{r4, lr}
 8001162:	b086      	sub	sp, #24
 8001164:	e88d 000c 	stmia.w	sp, {r2, r3}
 8001168:	9b01      	ldr	r3, [sp, #4]
 800116a:	9202      	str	r2, [sp, #8]
 800116c:	9303      	str	r3, [sp, #12]
 800116e:	9104      	str	r1, [sp, #16]
 8001170:	4b05      	ldr	r3, [pc, #20]	; (8001188 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)+0x28>)
 8001172:	f89d 2020 	ldrb.w	r2, [sp, #32]
 8001176:	9305      	str	r3, [sp, #20]
 8001178:	a902      	add	r1, sp, #8
 800117a:	f002 fff9 	bl	8004170 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 800117e:	a802      	add	r0, sp, #8
 8001180:	f7ff ff4f 	bl	8001022 <mbed::Callback<void ()>::~Callback()>
 8001184:	b006      	add	sp, #24
 8001186:	bd10      	pop	{r4, pc}
 8001188:	08005ae0 	.word	0x08005ae0

0800118c <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)>:
 800118c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800118e:	4604      	mov	r4, r0
 8001190:	461d      	mov	r5, r3
 8001192:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 8001196:	9e08      	ldr	r6, [sp, #32]
 8001198:	f002 ff30 	bl	8003ffc <mbed::RawSerial::RawSerial(PinName, PinName, int)>
 800119c:	4620      	mov	r0, r4
 800119e:	4b0f      	ldr	r3, [pc, #60]	; (80011dc <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)+0x50>)
 80011a0:	f840 3bbc 	str.w	r3, [r0], #188
 80011a4:	4629      	mov	r1, r5
 80011a6:	f000 f8f2 	bl	800138e <Buffer<char>::Buffer(unsigned long)>
 80011aa:	fb06 f105 	mul.w	r1, r6, r5
 80011ae:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
 80011b2:	f000 f8ec 	bl	800138e <Buffer<char>::Buffer(unsigned long)>
 80011b6:	4b0a      	ldr	r3, [pc, #40]	; (80011e0 <BufferedSerial::BufferedSerial(PinName, PinName, unsigned long, unsigned long, char const*)+0x54>)
 80011b8:	9302      	str	r3, [sp, #8]
 80011ba:	2300      	movs	r3, #0
 80011bc:	9303      	str	r3, [sp, #12]
 80011be:	9300      	str	r3, [sp, #0]
 80011c0:	ab04      	add	r3, sp, #16
 80011c2:	4620      	mov	r0, r4
 80011c4:	e913 000c 	ldmdb	r3, {r2, r3}
 80011c8:	4621      	mov	r1, r4
 80011ca:	f7ff ffc9 	bl	8001160 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>
 80011ce:	4620      	mov	r0, r4
 80011d0:	f8c4 50dc 	str.w	r5, [r4, #220]	; 0xdc
 80011d4:	f8c4 60e0 	str.w	r6, [r4, #224]	; 0xe0
 80011d8:	b004      	add	sp, #16
 80011da:	bd70      	pop	{r4, r5, r6, pc}
 80011dc:	08005b58 	.word	0x08005b58
 80011e0:	0800124b 	.word	0x0800124b

080011e4 <BufferedSerial::prime()>:
 80011e4:	b570      	push	{r4, r5, r6, lr}
 80011e6:	4604      	mov	r4, r0
 80011e8:	b086      	sub	sp, #24
 80011ea:	304c      	adds	r0, #76	; 0x4c
 80011ec:	f002 f88e 	bl	800330c <serial_writable>
 80011f0:	b1c0      	cbz	r0, 8001224 <BufferedSerial::prime()+0x40>
 80011f2:	ad02      	add	r5, sp, #8
 80011f4:	2201      	movs	r2, #1
 80011f6:	4629      	mov	r1, r5
 80011f8:	2600      	movs	r6, #0
 80011fa:	4620      	mov	r0, r4
 80011fc:	9605      	str	r6, [sp, #20]
 80011fe:	f002 ffb7 	bl	8004170 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>
 8001202:	4628      	mov	r0, r5
 8001204:	f7ff ff0d 	bl	8001022 <mbed::Callback<void ()>::~Callback()>
 8001208:	4620      	mov	r0, r4
 800120a:	f7ff ff12 	bl	8001032 <BufferedSerial::txIrq()>
 800120e:	4b06      	ldr	r3, [pc, #24]	; (8001228 <BufferedSerial::prime()+0x44>)
 8001210:	9302      	str	r3, [sp, #8]
 8001212:	2301      	movs	r3, #1
 8001214:	9603      	str	r6, [sp, #12]
 8001216:	9300      	str	r3, [sp, #0]
 8001218:	e895 000c 	ldmia.w	r5, {r2, r3}
 800121c:	4621      	mov	r1, r4
 800121e:	4620      	mov	r0, r4
 8001220:	f7ff ff9e 	bl	8001160 <void mbed::SerialBase::attach<BufferedSerial>(BufferedSerial*, void (BufferedSerial::*)(), mbed::SerialBase::IrqType)>
 8001224:	b006      	add	sp, #24
 8001226:	bd70      	pop	{r4, r5, r6, pc}
 8001228:	08001033 	.word	0x08001033

0800122c <Buffer<char>::put(char)>:
 800122c:	6843      	ldr	r3, [r0, #4]
 800122e:	6802      	ldr	r2, [r0, #0]
 8001230:	b510      	push	{r4, lr}
 8001232:	1c5c      	adds	r4, r3, #1
 8001234:	6044      	str	r4, [r0, #4]
 8001236:	54d1      	strb	r1, [r2, r3]
 8001238:	68c3      	ldr	r3, [r0, #12]
 800123a:	6841      	ldr	r1, [r0, #4]
 800123c:	3b01      	subs	r3, #1
 800123e:	fbb1 f2f3 	udiv	r2, r1, r3
 8001242:	fb03 1312 	mls	r3, r3, r2, r1
 8001246:	6043      	str	r3, [r0, #4]
 8001248:	bd10      	pop	{r4, pc}

0800124a <BufferedSerial::rxIrq()>:
 800124a:	b538      	push	{r3, r4, r5, lr}
 800124c:	f100 054c 	add.w	r5, r0, #76	; 0x4c
 8001250:	4604      	mov	r4, r0
 8001252:	4628      	mov	r0, r5
 8001254:	f002 f83e 	bl	80032d4 <serial_readable>
 8001258:	b138      	cbz	r0, 800126a <BufferedSerial::rxIrq()+0x20>
 800125a:	4628      	mov	r0, r5
 800125c:	f002 f844 	bl	80032e8 <serial_getc>
 8001260:	b2c1      	uxtb	r1, r0
 8001262:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 8001266:	f7ff ffe1 	bl	800122c <Buffer<char>::put(char)>
 800126a:	bd38      	pop	{r3, r4, r5, pc}

0800126c <BufferedSerial::putc(int)>:
 800126c:	b538      	push	{r3, r4, r5, lr}
 800126e:	4605      	mov	r5, r0
 8001270:	460c      	mov	r4, r1
 8001272:	30cc      	adds	r0, #204	; 0xcc
 8001274:	b2c9      	uxtb	r1, r1
 8001276:	f7ff ffd9 	bl	800122c <Buffer<char>::put(char)>
 800127a:	4628      	mov	r0, r5
 800127c:	f7ff ffb2 	bl	80011e4 <BufferedSerial::prime()>
 8001280:	4620      	mov	r0, r4
 8001282:	bd38      	pop	{r3, r4, r5, pc}

08001284 <BufferedSerial::puts(char const*)>:
 8001284:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001288:	4607      	mov	r7, r0
 800128a:	460c      	mov	r4, r1
 800128c:	b1b1      	cbz	r1, 80012bc <BufferedSerial::puts(char const*)+0x38>
 800128e:	460d      	mov	r5, r1
 8001290:	f100 08cc 	add.w	r8, r0, #204	; 0xcc
 8001294:	462e      	mov	r6, r5
 8001296:	f816 1b01 	ldrb.w	r1, [r6], #1
 800129a:	b121      	cbz	r1, 80012a6 <BufferedSerial::puts(char const*)+0x22>
 800129c:	4640      	mov	r0, r8
 800129e:	f7ff ffc5 	bl	800122c <Buffer<char>::put(char)>
 80012a2:	4635      	mov	r5, r6
 80012a4:	e7f6      	b.n	8001294 <BufferedSerial::puts(char const*)+0x10>
 80012a6:	210a      	movs	r1, #10
 80012a8:	4640      	mov	r0, r8
 80012aa:	f7ff ffbf 	bl	800122c <Buffer<char>::put(char)>
 80012ae:	1b2c      	subs	r4, r5, r4
 80012b0:	4638      	mov	r0, r7
 80012b2:	f7ff ff97 	bl	80011e4 <BufferedSerial::prime()>
 80012b6:	1c60      	adds	r0, r4, #1
 80012b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80012bc:	4608      	mov	r0, r1
 80012be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080012c2 <BufferedSerial::write(void const*, unsigned int)>:
 80012c2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80012c6:	4607      	mov	r7, r0
 80012c8:	460d      	mov	r5, r1
 80012ca:	b191      	cbz	r1, 80012f2 <BufferedSerial::write(void const*, unsigned int)+0x30>
 80012cc:	b1a2      	cbz	r2, 80012f8 <BufferedSerial::write(void const*, unsigned int)+0x36>
 80012ce:	188c      	adds	r4, r1, r2
 80012d0:	460e      	mov	r6, r1
 80012d2:	f100 08cc 	add.w	r8, r0, #204	; 0xcc
 80012d6:	42b4      	cmp	r4, r6
 80012d8:	d005      	beq.n	80012e6 <BufferedSerial::write(void const*, unsigned int)+0x24>
 80012da:	f816 1b01 	ldrb.w	r1, [r6], #1
 80012de:	4640      	mov	r0, r8
 80012e0:	f7ff ffa4 	bl	800122c <Buffer<char>::put(char)>
 80012e4:	e7f7      	b.n	80012d6 <BufferedSerial::write(void const*, unsigned int)+0x14>
 80012e6:	4638      	mov	r0, r7
 80012e8:	f7ff ff7c 	bl	80011e4 <BufferedSerial::prime()>
 80012ec:	1b60      	subs	r0, r4, r5
 80012ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80012f2:	4608      	mov	r0, r1
 80012f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80012f8:	4610      	mov	r0, r2
 80012fa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08001300 <BufferedSerial::printf(char const*, ...)>:
 8001300:	b40e      	push	{r1, r2, r3}
 8001302:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001306:	b085      	sub	sp, #20
 8001308:	f8d0 20dc 	ldr.w	r2, [r0, #220]	; 0xdc
 800130c:	af02      	add	r7, sp, #8
 800130e:	1dd3      	adds	r3, r2, #7
 8001310:	f023 0307 	bic.w	r3, r3, #7
 8001314:	f107 0424 	add.w	r4, r7, #36	; 0x24
 8001318:	ebad 0d03 	sub.w	sp, sp, r3
 800131c:	f854 8b04 	ldr.w	r8, [r4], #4
 8001320:	ae02      	add	r6, sp, #8
 8001322:	4605      	mov	r5, r0
 8001324:	2100      	movs	r1, #0
 8001326:	4630      	mov	r0, r6
 8001328:	f003 fe07 	bl	8004f3a <memset>
 800132c:	4622      	mov	r2, r4
 800132e:	4641      	mov	r1, r8
 8001330:	4630      	mov	r0, r6
 8001332:	607c      	str	r4, [r7, #4]
 8001334:	f004 f8ee 	bl	8005514 <vsiprintf>
 8001338:	f8d5 30dc 	ldr.w	r3, [r5, #220]	; 0xdc
 800133c:	4283      	cmp	r3, r0
 800133e:	4602      	mov	r2, r0
 8001340:	d20c      	bcs.n	800135c <BufferedSerial::printf(char const*, ...)+0x5c>
 8001342:	9000      	str	r0, [sp, #0]
 8001344:	225d      	movs	r2, #93	; 0x5d
 8001346:	4808      	ldr	r0, [pc, #32]	; (8001368 <BufferedSerial::printf(char const*, ...)+0x68>)
 8001348:	4908      	ldr	r1, [pc, #32]	; (800136c <BufferedSerial::printf(char const*, ...)+0x6c>)
 800134a:	f000 f915 	bl	8001578 <error>
 800134e:	2000      	movs	r0, #0
 8001350:	370c      	adds	r7, #12
 8001352:	46bd      	mov	sp, r7
 8001354:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001358:	b003      	add	sp, #12
 800135a:	4770      	bx	lr
 800135c:	4631      	mov	r1, r6
 800135e:	4628      	mov	r0, r5
 8001360:	f7ff ffaf 	bl	80012c2 <BufferedSerial::write(void const*, unsigned int)>
 8001364:	e7f4      	b.n	8001350 <BufferedSerial::printf(char const*, ...)+0x50>
 8001366:	bf00      	nop
 8001368:	08005b16 	.word	0x08005b16
 800136c:	08005aec 	.word	0x08005aec

08001370 <Buffer<char>::~Buffer()>:
 8001370:	b510      	push	{r4, lr}
 8001372:	4604      	mov	r4, r0
 8001374:	6800      	ldr	r0, [r0, #0]
 8001376:	b108      	cbz	r0, 800137c <Buffer<char>::~Buffer()+0xc>
 8001378:	f003 f89e 	bl	80044b8 <operator delete[](void*)>
 800137c:	4620      	mov	r0, r4
 800137e:	bd10      	pop	{r4, pc}

08001380 <Buffer<char>::clear()>:
 8001380:	2100      	movs	r1, #0
 8001382:	6041      	str	r1, [r0, #4]
 8001384:	68c2      	ldr	r2, [r0, #12]
 8001386:	6081      	str	r1, [r0, #8]
 8001388:	6800      	ldr	r0, [r0, #0]
 800138a:	f003 bdd6 	b.w	8004f3a <memset>

0800138e <Buffer<char>::Buffer(unsigned long)>:
 800138e:	b538      	push	{r3, r4, r5, lr}
 8001390:	4604      	mov	r4, r0
 8001392:	4608      	mov	r0, r1
 8001394:	460d      	mov	r5, r1
 8001396:	f003 f883 	bl	80044a0 <operator new[](unsigned int)>
 800139a:	60e5      	str	r5, [r4, #12]
 800139c:	6020      	str	r0, [r4, #0]
 800139e:	4620      	mov	r0, r4
 80013a0:	f7ff ffee 	bl	8001380 <Buffer<char>::clear()>
 80013a4:	4620      	mov	r0, r4
 80013a6:	bd38      	pop	{r3, r4, r5, pc}

080013a8 <_start>:
 80013a8:	4807      	ldr	r0, [pc, #28]	; (80013c8 <_start+0x20>)
 80013aa:	4a08      	ldr	r2, [pc, #32]	; (80013cc <_start+0x24>)
 80013ac:	b508      	push	{r3, lr}
 80013ae:	1a12      	subs	r2, r2, r0
 80013b0:	2100      	movs	r1, #0
 80013b2:	f003 fdc2 	bl	8004f3a <memset>
 80013b6:	f003 f823 	bl	8004400 <software_init_hook>
 80013ba:	f003 fd11 	bl	8004de0 <__libc_init_array>
 80013be:	f003 f826 	bl	800440e <__wrap_main>
 80013c2:	f003 f861 	bl	8004488 <__wrap_exit>
 80013c6:	bf00      	nop
 80013c8:	20000230 	.word	0x20000230
 80013cc:	20002818 	.word	0x20002818

080013d0 <_gpio_init_out.part.2>:
 80013d0:	b538      	push	{r3, r4, r5, lr}
 80013d2:	4604      	mov	r4, r0
 80013d4:	460d      	mov	r5, r1
 80013d6:	6803      	ldr	r3, [r0, #0]
 80013d8:	b15a      	cbz	r2, 80013f2 <_gpio_init_out.part.2+0x22>
 80013da:	6882      	ldr	r2, [r0, #8]
 80013dc:	6013      	str	r3, [r2, #0]
 80013de:	4620      	mov	r0, r4
 80013e0:	2101      	movs	r1, #1
 80013e2:	f001 fca1 	bl	8002d28 <gpio_dir>
 80013e6:	4629      	mov	r1, r5
 80013e8:	4620      	mov	r0, r4
 80013ea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80013ee:	f001 bc97 	b.w	8002d20 <gpio_mode>
 80013f2:	68c2      	ldr	r2, [r0, #12]
 80013f4:	041b      	lsls	r3, r3, #16
 80013f6:	e7f1      	b.n	80013dc <_gpio_init_out.part.2+0xc>

080013f8 <gpio_init_out_ex>:
 80013f8:	b570      	push	{r4, r5, r6, lr}
 80013fa:	460e      	mov	r6, r1
 80013fc:	4604      	mov	r4, r0
 80013fe:	4615      	mov	r5, r2
 8001400:	f001 fc6e 	bl	8002ce0 <gpio_init>
 8001404:	3601      	adds	r6, #1
 8001406:	d006      	beq.n	8001416 <gpio_init_out_ex+0x1e>
 8001408:	462a      	mov	r2, r5
 800140a:	4620      	mov	r0, r4
 800140c:	2100      	movs	r1, #0
 800140e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001412:	f7ff bfdd 	b.w	80013d0 <_gpio_init_out.part.2>
 8001416:	bd70      	pop	{r4, r5, r6, pc}

08001418 <gpio_init_out>:
 8001418:	2200      	movs	r2, #0
 800141a:	f7ff bfed 	b.w	80013f8 <gpio_init_out_ex>
	...

08001420 <get_us_ticker_data>:
 8001420:	4800      	ldr	r0, [pc, #0]	; (8001424 <get_us_ticker_data+0x4>)
 8001422:	4770      	bx	lr
 8001424:	08005b84 	.word	0x08005b84

08001428 <us_ticker_irq_handler>:
 8001428:	4801      	ldr	r0, [pc, #4]	; (8001430 <us_ticker_irq_handler+0x8>)
 800142a:	f000 b803 	b.w	8001434 <ticker_irq_handler>
 800142e:	bf00      	nop
 8001430:	08005b84 	.word	0x08005b84

08001434 <ticker_irq_handler>:
 8001434:	6803      	ldr	r3, [r0, #0]
 8001436:	b570      	push	{r4, r5, r6, lr}
 8001438:	68db      	ldr	r3, [r3, #12]
 800143a:	4604      	mov	r4, r0
 800143c:	4798      	blx	r3
 800143e:	6863      	ldr	r3, [r4, #4]
 8001440:	685a      	ldr	r2, [r3, #4]
 8001442:	6823      	ldr	r3, [r4, #0]
 8001444:	b91a      	cbnz	r2, 800144e <ticker_irq_handler+0x1a>
 8001446:	689b      	ldr	r3, [r3, #8]
 8001448:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800144c:	4718      	bx	r3
 800144e:	685b      	ldr	r3, [r3, #4]
 8001450:	6815      	ldr	r5, [r2, #0]
 8001452:	4798      	blx	r3
 8001454:	6863      	ldr	r3, [r4, #4]
 8001456:	1a28      	subs	r0, r5, r0
 8001458:	2800      	cmp	r0, #0
 800145a:	685a      	ldr	r2, [r3, #4]
 800145c:	dc07      	bgt.n	800146e <ticker_irq_handler+0x3a>
 800145e:	6891      	ldr	r1, [r2, #8]
 8001460:	6059      	str	r1, [r3, #4]
 8001462:	681b      	ldr	r3, [r3, #0]
 8001464:	2b00      	cmp	r3, #0
 8001466:	d0ea      	beq.n	800143e <ticker_irq_handler+0xa>
 8001468:	6850      	ldr	r0, [r2, #4]
 800146a:	4798      	blx	r3
 800146c:	e7e7      	b.n	800143e <ticker_irq_handler+0xa>
 800146e:	6823      	ldr	r3, [r4, #0]
 8001470:	6810      	ldr	r0, [r2, #0]
 8001472:	691b      	ldr	r3, [r3, #16]
 8001474:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001478:	4718      	bx	r3

0800147a <ticker_read>:
 800147a:	6803      	ldr	r3, [r0, #0]
 800147c:	685b      	ldr	r3, [r3, #4]
 800147e:	4718      	bx	r3

08001480 <pinmap_pinout>:
 8001480:	b510      	push	{r4, lr}
 8001482:	4604      	mov	r4, r0
 8001484:	3001      	adds	r0, #1
 8001486:	d10d      	bne.n	80014a4 <pinmap_pinout+0x24>
 8001488:	bd10      	pop	{r4, pc}
 800148a:	429c      	cmp	r4, r3
 800148c:	d109      	bne.n	80014a2 <pinmap_pinout+0x22>
 800148e:	4620      	mov	r0, r4
 8001490:	6889      	ldr	r1, [r1, #8]
 8001492:	f001 fce1 	bl	8002e58 <pin_function>
 8001496:	4620      	mov	r0, r4
 8001498:	2100      	movs	r1, #0
 800149a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800149e:	f001 bd5f 	b.w	8002f60 <pin_mode>
 80014a2:	310c      	adds	r1, #12
 80014a4:	f9b1 3000 	ldrsh.w	r3, [r1]
 80014a8:	1c5a      	adds	r2, r3, #1
 80014aa:	d1ee      	bne.n	800148a <pinmap_pinout+0xa>
 80014ac:	4802      	ldr	r0, [pc, #8]	; (80014b8 <pinmap_pinout+0x38>)
 80014ae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80014b2:	f000 b861 	b.w	8001578 <error>
 80014b6:	bf00      	nop
 80014b8:	08005bd1 	.word	0x08005bd1

080014bc <pinmap_merge>:
 80014bc:	4288      	cmp	r0, r1
 80014be:	b508      	push	{r3, lr}
 80014c0:	d008      	beq.n	80014d4 <pinmap_merge+0x18>
 80014c2:	1c43      	adds	r3, r0, #1
 80014c4:	d006      	beq.n	80014d4 <pinmap_merge+0x18>
 80014c6:	3101      	adds	r1, #1
 80014c8:	d006      	beq.n	80014d8 <pinmap_merge+0x1c>
 80014ca:	4804      	ldr	r0, [pc, #16]	; (80014dc <pinmap_merge+0x20>)
 80014cc:	f000 f854 	bl	8001578 <error>
 80014d0:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80014d4:	4608      	mov	r0, r1
 80014d6:	bd08      	pop	{r3, pc}
 80014d8:	4601      	mov	r1, r0
 80014da:	e7fb      	b.n	80014d4 <pinmap_merge+0x18>
 80014dc:	08005ba0 	.word	0x08005ba0

080014e0 <pinmap_find_peripheral>:
 80014e0:	f9b1 3000 	ldrsh.w	r3, [r1]
 80014e4:	1c5a      	adds	r2, r3, #1
 80014e6:	d101      	bne.n	80014ec <pinmap_find_peripheral+0xc>
 80014e8:	4618      	mov	r0, r3
 80014ea:	4770      	bx	lr
 80014ec:	4283      	cmp	r3, r0
 80014ee:	d101      	bne.n	80014f4 <pinmap_find_peripheral+0x14>
 80014f0:	6848      	ldr	r0, [r1, #4]
 80014f2:	4770      	bx	lr
 80014f4:	310c      	adds	r1, #12
 80014f6:	e7f3      	b.n	80014e0 <pinmap_find_peripheral>

080014f8 <pinmap_peripheral>:
 80014f8:	1c42      	adds	r2, r0, #1
 80014fa:	b510      	push	{r4, lr}
 80014fc:	4604      	mov	r4, r0
 80014fe:	d007      	beq.n	8001510 <pinmap_peripheral+0x18>
 8001500:	f7ff ffee 	bl	80014e0 <pinmap_find_peripheral>
 8001504:	1c43      	adds	r3, r0, #1
 8001506:	4604      	mov	r4, r0
 8001508:	d102      	bne.n	8001510 <pinmap_peripheral+0x18>
 800150a:	4802      	ldr	r0, [pc, #8]	; (8001514 <pinmap_peripheral+0x1c>)
 800150c:	f000 f834 	bl	8001578 <error>
 8001510:	4620      	mov	r0, r4
 8001512:	bd10      	pop	{r4, pc}
 8001514:	08005bb1 	.word	0x08005bb1

08001518 <core_util_are_interrupts_enabled>:
 8001518:	f3ef 8010 	mrs	r0, PRIMASK
 800151c:	43c0      	mvns	r0, r0
 800151e:	f000 0001 	and.w	r0, r0, #1
 8001522:	4770      	bx	lr

08001524 <core_util_critical_section_enter>:
 8001524:	b508      	push	{r3, lr}
 8001526:	f7ff fff7 	bl	8001518 <core_util_are_interrupts_enabled>
 800152a:	b672      	cpsid	i
 800152c:	4b06      	ldr	r3, [pc, #24]	; (8001548 <core_util_critical_section_enter+0x24>)
 800152e:	681a      	ldr	r2, [r3, #0]
 8001530:	b922      	cbnz	r2, 800153c <core_util_critical_section_enter+0x18>
 8001532:	f080 0001 	eor.w	r0, r0, #1
 8001536:	4a05      	ldr	r2, [pc, #20]	; (800154c <core_util_critical_section_enter+0x28>)
 8001538:	b2c0      	uxtb	r0, r0
 800153a:	7010      	strb	r0, [r2, #0]
 800153c:	681a      	ldr	r2, [r3, #0]
 800153e:	681a      	ldr	r2, [r3, #0]
 8001540:	3201      	adds	r2, #1
 8001542:	601a      	str	r2, [r3, #0]
 8001544:	bd08      	pop	{r3, pc}
 8001546:	bf00      	nop
 8001548:	20000900 	.word	0x20000900
 800154c:	200008fc 	.word	0x200008fc

08001550 <core_util_critical_section_exit>:
 8001550:	b508      	push	{r3, lr}
 8001552:	4b07      	ldr	r3, [pc, #28]	; (8001570 <core_util_critical_section_exit+0x20>)
 8001554:	681a      	ldr	r2, [r3, #0]
 8001556:	b152      	cbz	r2, 800156e <core_util_critical_section_exit+0x1e>
 8001558:	f7ff ffde 	bl	8001518 <core_util_are_interrupts_enabled>
 800155c:	681a      	ldr	r2, [r3, #0]
 800155e:	3a01      	subs	r2, #1
 8001560:	601a      	str	r2, [r3, #0]
 8001562:	681b      	ldr	r3, [r3, #0]
 8001564:	b91b      	cbnz	r3, 800156e <core_util_critical_section_exit+0x1e>
 8001566:	4b03      	ldr	r3, [pc, #12]	; (8001574 <core_util_critical_section_exit+0x24>)
 8001568:	781b      	ldrb	r3, [r3, #0]
 800156a:	b903      	cbnz	r3, 800156e <core_util_critical_section_exit+0x1e>
 800156c:	b662      	cpsie	i
 800156e:	bd08      	pop	{r3, pc}
 8001570:	20000900 	.word	0x20000900
 8001574:	200008fc 	.word	0x200008fc

08001578 <error>:
 8001578:	b40f      	push	{r0, r1, r2, r3}
 800157a:	2001      	movs	r0, #1
 800157c:	b508      	push	{r3, lr}
 800157e:	f002 ff83 	bl	8004488 <__wrap_exit>

08001582 <mbed_die>:
 8001582:	b500      	push	{lr}
 8001584:	b089      	sub	sp, #36	; 0x24
 8001586:	f7ff ffcd 	bl	8001524 <core_util_critical_section_enter>
 800158a:	2105      	movs	r1, #5
 800158c:	a801      	add	r0, sp, #4
 800158e:	f7ff ff43 	bl	8001418 <gpio_init_out>
 8001592:	9b03      	ldr	r3, [sp, #12]
 8001594:	9a01      	ldr	r2, [sp, #4]
 8001596:	601a      	str	r2, [r3, #0]
 8001598:	2096      	movs	r0, #150	; 0x96
 800159a:	f002 fe71 	bl	8004280 <wait_ms>
 800159e:	9b01      	ldr	r3, [sp, #4]
 80015a0:	9a04      	ldr	r2, [sp, #16]
 80015a2:	041b      	lsls	r3, r3, #16
 80015a4:	6013      	str	r3, [r2, #0]
 80015a6:	2096      	movs	r0, #150	; 0x96
 80015a8:	f002 fe6a 	bl	8004280 <wait_ms>
 80015ac:	e7f1      	b.n	8001592 <mbed_die+0x10>

080015ae <default_idle_hook>:
 80015ae:	f001 bbe4 	b.w	8002d7a <hal_sleep>
	...

080015b4 <rtos_idle_loop>:
 80015b4:	b508      	push	{r3, lr}
 80015b6:	4c02      	ldr	r4, [pc, #8]	; (80015c0 <rtos_idle_loop+0xc>)
 80015b8:	6823      	ldr	r3, [r4, #0]
 80015ba:	4798      	blx	r3
 80015bc:	e7fc      	b.n	80015b8 <rtos_idle_loop+0x4>
 80015be:	bf00      	nop
 80015c0:	20000198 	.word	0x20000198

080015c4 <pre_main>:
 80015c4:	b508      	push	{r3, lr}
 80015c6:	480b      	ldr	r0, [pc, #44]	; (80015f4 <pre_main+0x30>)
 80015c8:	f000 fe42 	bl	8002250 <osMutexCreate>
 80015cc:	4b0a      	ldr	r3, [pc, #40]	; (80015f8 <pre_main+0x34>)
 80015ce:	6018      	str	r0, [r3, #0]
 80015d0:	480a      	ldr	r0, [pc, #40]	; (80015fc <pre_main+0x38>)
 80015d2:	f000 fe3d 	bl	8002250 <osMutexCreate>
 80015d6:	4b0a      	ldr	r3, [pc, #40]	; (8001600 <pre_main+0x3c>)
 80015d8:	6018      	str	r0, [r3, #0]
 80015da:	480a      	ldr	r0, [pc, #40]	; (8001604 <pre_main+0x40>)
 80015dc:	f000 fe38 	bl	8002250 <osMutexCreate>
 80015e0:	4b09      	ldr	r3, [pc, #36]	; (8001608 <pre_main+0x44>)
 80015e2:	6018      	str	r0, [r3, #0]
 80015e4:	f003 fbfc 	bl	8004de0 <__libc_init_array>
 80015e8:	2100      	movs	r1, #0
 80015ea:	4608      	mov	r0, r1
 80015ec:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80015f0:	f002 bf0d 	b.w	800440e <__wrap_main>
 80015f4:	08005c30 	.word	0x08005c30
 80015f8:	20001ffc 	.word	0x20001ffc
 80015fc:	08005c2c 	.word	0x08005c2c
 8001600:	2000090c 	.word	0x2000090c
 8001604:	08005c28 	.word	0x08005c28
 8001608:	20000904 	.word	0x20000904

0800160c <os_idle_demon>:
 800160c:	f7ff bfd2 	b.w	80015b4 <rtos_idle_loop>

08001610 <os_error>:
 8001610:	b510      	push	{r4, lr}
 8001612:	4604      	mov	r4, r0
 8001614:	f000 fd8a 	bl	800212c <svcThreadGetId>
 8001618:	4621      	mov	r1, r4
 800161a:	4602      	mov	r2, r0
 800161c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001620:	4801      	ldr	r0, [pc, #4]	; (8001628 <os_error+0x18>)
 8001622:	f7ff bfa9 	b.w	8001578 <error>
 8001626:	bf00      	nop
 8001628:	08005bf0 	.word	0x08005bf0

0800162c <sysThreadTerminate>:
 800162c:	f002 bf4a 	b.w	80044c4 <thread_terminate_hook>

08001630 <set_stack_heap>:
 8001630:	4a0b      	ldr	r2, [pc, #44]	; (8001660 <set_stack_heap+0x30>)
 8001632:	4b0c      	ldr	r3, [pc, #48]	; (8001664 <set_stack_heap+0x34>)
 8001634:	480c      	ldr	r0, [pc, #48]	; (8001668 <set_stack_heap+0x38>)
 8001636:	b430      	push	{r4, r5}
 8001638:	601a      	str	r2, [r3, #0]
 800163a:	f1c2 5300 	rsb	r3, r2, #536870912	; 0x20000000
 800163e:	f503 33c0 	add.w	r3, r3, #98304	; 0x18000
 8001642:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8001646:	4619      	mov	r1, r3
 8001648:	bf28      	it	cs
 800164a:	f44f 6180 	movcs.w	r1, #1024	; 0x400
 800164e:	4d07      	ldr	r5, [pc, #28]	; (800166c <set_stack_heap+0x3c>)
 8001650:	4c07      	ldr	r4, [pc, #28]	; (8001670 <set_stack_heap+0x40>)
 8001652:	6001      	str	r1, [r0, #0]
 8001654:	1a5b      	subs	r3, r3, r1
 8001656:	441a      	add	r2, r3
 8001658:	602a      	str	r2, [r5, #0]
 800165a:	6023      	str	r3, [r4, #0]
 800165c:	bc30      	pop	{r4, r5}
 800165e:	4770      	bx	lr
 8001660:	20002818 	.word	0x20002818
 8001664:	20001d14 	.word	0x20001d14
 8001668:	20000910 	.word	0x20000910
 800166c:	20000914 	.word	0x20000914
 8001670:	20001d10 	.word	0x20001d10

08001674 <software_init_hook_rtos>:
 8001674:	f000 fec0 	bl	80023f8 <osKernelInitialize>
 8001678:	f7ff ffda 	bl	8001630 <set_stack_heap>
 800167c:	4803      	ldr	r0, [pc, #12]	; (800168c <software_init_hook_rtos+0x18>)
 800167e:	2100      	movs	r1, #0
 8001680:	f000 fe6e 	bl	8002360 <osThreadCreate>
 8001684:	f000 fcd4 	bl	8002030 <osKernelStart>
 8001688:	e7fe      	b.n	8001688 <software_init_hook_rtos+0x14>
 800168a:	0000      	.short	0x0000
 800168c:	2000019c 	.word	0x2000019c

08001690 <__rtos_malloc_lock>:
 8001690:	4b02      	ldr	r3, [pc, #8]	; (800169c <__rtos_malloc_lock+0xc>)
 8001692:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8001696:	6818      	ldr	r0, [r3, #0]
 8001698:	f000 bdf8 	b.w	800228c <osMutexWait>
 800169c:	2000090c 	.word	0x2000090c

080016a0 <__rtos_malloc_unlock>:
 80016a0:	4b01      	ldr	r3, [pc, #4]	; (80016a8 <__rtos_malloc_unlock+0x8>)
 80016a2:	6818      	ldr	r0, [r3, #0]
 80016a4:	f000 be1a 	b.w	80022dc <osMutexRelease>
 80016a8:	2000090c 	.word	0x2000090c

080016ac <rt_put_prio>:
 80016ac:	b530      	push	{r4, r5, lr}
 80016ae:	7802      	ldrb	r2, [r0, #0]
 80016b0:	788c      	ldrb	r4, [r1, #2]
 80016b2:	6843      	ldr	r3, [r0, #4]
 80016b4:	3a01      	subs	r2, #1
 80016b6:	b2d2      	uxtb	r2, r2
 80016b8:	b113      	cbz	r3, 80016c0 <rt_put_prio+0x14>
 80016ba:	789d      	ldrb	r5, [r3, #2]
 80016bc:	42a5      	cmp	r5, r4
 80016be:	d207      	bcs.n	80016d0 <rt_put_prio+0x24>
 80016c0:	2a02      	cmp	r2, #2
 80016c2:	604b      	str	r3, [r1, #4]
 80016c4:	6041      	str	r1, [r0, #4]
 80016c6:	d806      	bhi.n	80016d6 <rt_put_prio+0x2a>
 80016c8:	b103      	cbz	r3, 80016cc <rt_put_prio+0x20>
 80016ca:	6099      	str	r1, [r3, #8]
 80016cc:	6088      	str	r0, [r1, #8]
 80016ce:	bd30      	pop	{r4, r5, pc}
 80016d0:	4618      	mov	r0, r3
 80016d2:	685b      	ldr	r3, [r3, #4]
 80016d4:	e7f0      	b.n	80016b8 <rt_put_prio+0xc>
 80016d6:	2300      	movs	r3, #0
 80016d8:	608b      	str	r3, [r1, #8]
 80016da:	bd30      	pop	{r4, r5, pc}

080016dc <rt_get_first>:
 80016dc:	7802      	ldrb	r2, [r0, #0]
 80016de:	6843      	ldr	r3, [r0, #4]
 80016e0:	3a01      	subs	r2, #1
 80016e2:	6859      	ldr	r1, [r3, #4]
 80016e4:	6041      	str	r1, [r0, #4]
 80016e6:	2a02      	cmp	r2, #2
 80016e8:	f04f 0200 	mov.w	r2, #0
 80016ec:	d805      	bhi.n	80016fa <rt_get_first+0x1e>
 80016ee:	b109      	cbz	r1, 80016f4 <rt_get_first+0x18>
 80016f0:	6088      	str	r0, [r1, #8]
 80016f2:	605a      	str	r2, [r3, #4]
 80016f4:	609a      	str	r2, [r3, #8]
 80016f6:	4618      	mov	r0, r3
 80016f8:	4770      	bx	lr
 80016fa:	605a      	str	r2, [r3, #4]
 80016fc:	e7fb      	b.n	80016f6 <rt_get_first+0x1a>
	...

08001700 <rt_put_rdy_first>:
 8001700:	4b03      	ldr	r3, [pc, #12]	; (8001710 <rt_put_rdy_first+0x10>)
 8001702:	685a      	ldr	r2, [r3, #4]
 8001704:	6042      	str	r2, [r0, #4]
 8001706:	2200      	movs	r2, #0
 8001708:	6082      	str	r2, [r0, #8]
 800170a:	6058      	str	r0, [r3, #4]
 800170c:	4770      	bx	lr
 800170e:	bf00      	nop
 8001710:	200026f0 	.word	0x200026f0

08001714 <rt_put_dly>:
 8001714:	4b10      	ldr	r3, [pc, #64]	; (8001758 <rt_put_dly+0x44>)
 8001716:	68da      	ldr	r2, [r3, #12]
 8001718:	b510      	push	{r4, lr}
 800171a:	b18a      	cbz	r2, 8001740 <rt_put_dly+0x2c>
 800171c:	8a9a      	ldrh	r2, [r3, #20]
 800171e:	68dc      	ldr	r4, [r3, #12]
 8001720:	428a      	cmp	r2, r1
 8001722:	d30c      	bcc.n	800173e <rt_put_dly+0x2a>
 8001724:	60c4      	str	r4, [r0, #12]
 8001726:	60d8      	str	r0, [r3, #12]
 8001728:	68c4      	ldr	r4, [r0, #12]
 800172a:	6103      	str	r3, [r0, #16]
 800172c:	b104      	cbz	r4, 8001730 <rt_put_dly+0x1c>
 800172e:	6120      	str	r0, [r4, #16]
 8001730:	1a52      	subs	r2, r2, r1
 8001732:	b292      	uxth	r2, r2
 8001734:	8282      	strh	r2, [r0, #20]
 8001736:	8a99      	ldrh	r1, [r3, #20]
 8001738:	1a8a      	subs	r2, r1, r2
 800173a:	829a      	strh	r2, [r3, #20]
 800173c:	bd10      	pop	{r4, pc}
 800173e:	b93c      	cbnz	r4, 8001750 <rt_put_dly+0x3c>
 8001740:	2400      	movs	r4, #0
 8001742:	1a8a      	subs	r2, r1, r2
 8001744:	60c4      	str	r4, [r0, #12]
 8001746:	60d8      	str	r0, [r3, #12]
 8001748:	6103      	str	r3, [r0, #16]
 800174a:	829a      	strh	r2, [r3, #20]
 800174c:	8284      	strh	r4, [r0, #20]
 800174e:	bd10      	pop	{r4, pc}
 8001750:	8aa3      	ldrh	r3, [r4, #20]
 8001752:	441a      	add	r2, r3
 8001754:	4623      	mov	r3, r4
 8001756:	e7e2      	b.n	800171e <rt_put_dly+0xa>
 8001758:	20002708 	.word	0x20002708

0800175c <rt_dec_dly>:
 800175c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001760:	4d17      	ldr	r5, [pc, #92]	; (80017c0 <rt_dec_dly+0x64>)
 8001762:	68eb      	ldr	r3, [r5, #12]
 8001764:	b153      	cbz	r3, 800177c <rt_dec_dly+0x20>
 8001766:	8aab      	ldrh	r3, [r5, #20]
 8001768:	4f16      	ldr	r7, [pc, #88]	; (80017c4 <rt_dec_dly+0x68>)
 800176a:	f8df 805c 	ldr.w	r8, [pc, #92]	; 80017c8 <rt_dec_dly+0x6c>
 800176e:	3b01      	subs	r3, #1
 8001770:	82ab      	strh	r3, [r5, #20]
 8001772:	2600      	movs	r6, #0
 8001774:	8aaa      	ldrh	r2, [r5, #20]
 8001776:	b90a      	cbnz	r2, 800177c <rt_dec_dly+0x20>
 8001778:	68ec      	ldr	r4, [r5, #12]
 800177a:	b90c      	cbnz	r4, 8001780 <rt_dec_dly+0x24>
 800177c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001780:	68a3      	ldr	r3, [r4, #8]
 8001782:	b133      	cbz	r3, 8001792 <rt_dec_dly+0x36>
 8001784:	6861      	ldr	r1, [r4, #4]
 8001786:	6059      	str	r1, [r3, #4]
 8001788:	6861      	ldr	r1, [r4, #4]
 800178a:	b109      	cbz	r1, 8001790 <rt_dec_dly+0x34>
 800178c:	608b      	str	r3, [r1, #8]
 800178e:	6062      	str	r2, [r4, #4]
 8001790:	60a6      	str	r6, [r4, #8]
 8001792:	4621      	mov	r1, r4
 8001794:	4638      	mov	r0, r7
 8001796:	f7ff ff89 	bl	80016ac <rt_put_prio>
 800179a:	8aa3      	ldrh	r3, [r4, #20]
 800179c:	82ab      	strh	r3, [r5, #20]
 800179e:	7863      	ldrb	r3, [r4, #1]
 80017a0:	2b04      	cmp	r3, #4
 80017a2:	bf01      	itttt	eq
 80017a4:	f8d8 3000 	ldreq.w	r3, [r8]
 80017a8:	8ae2      	ldrheq	r2, [r4, #22]
 80017aa:	189b      	addeq	r3, r3, r2
 80017ac:	82a3      	strheq	r3, [r4, #20]
 80017ae:	2301      	movs	r3, #1
 80017b0:	7063      	strb	r3, [r4, #1]
 80017b2:	68e3      	ldr	r3, [r4, #12]
 80017b4:	60eb      	str	r3, [r5, #12]
 80017b6:	b10b      	cbz	r3, 80017bc <rt_dec_dly+0x60>
 80017b8:	611d      	str	r5, [r3, #16]
 80017ba:	60e6      	str	r6, [r4, #12]
 80017bc:	6126      	str	r6, [r4, #16]
 80017be:	e7d9      	b.n	8001774 <rt_dec_dly+0x18>
 80017c0:	20002708 	.word	0x20002708
 80017c4:	200026f0 	.word	0x200026f0
 80017c8:	20002784 	.word	0x20002784

080017cc <rt_rmv_list>:
 80017cc:	6883      	ldr	r3, [r0, #8]
 80017ce:	b12b      	cbz	r3, 80017dc <rt_rmv_list+0x10>
 80017d0:	6842      	ldr	r2, [r0, #4]
 80017d2:	605a      	str	r2, [r3, #4]
 80017d4:	6842      	ldr	r2, [r0, #4]
 80017d6:	b15a      	cbz	r2, 80017f0 <rt_rmv_list+0x24>
 80017d8:	6093      	str	r3, [r2, #8]
 80017da:	4770      	bx	lr
 80017dc:	4b05      	ldr	r3, [pc, #20]	; (80017f4 <rt_rmv_list+0x28>)
 80017de:	685a      	ldr	r2, [r3, #4]
 80017e0:	4290      	cmp	r0, r2
 80017e2:	d102      	bne.n	80017ea <rt_rmv_list+0x1e>
 80017e4:	6842      	ldr	r2, [r0, #4]
 80017e6:	605a      	str	r2, [r3, #4]
 80017e8:	4770      	bx	lr
 80017ea:	4613      	mov	r3, r2
 80017ec:	2a00      	cmp	r2, #0
 80017ee:	d1f6      	bne.n	80017de <rt_rmv_list+0x12>
 80017f0:	4770      	bx	lr
 80017f2:	bf00      	nop
 80017f4:	200026f0 	.word	0x200026f0

080017f8 <rt_resort_prio>:
 80017f8:	b510      	push	{r4, lr}
 80017fa:	6884      	ldr	r4, [r0, #8]
 80017fc:	4601      	mov	r1, r0
 80017fe:	b92c      	cbnz	r4, 800180c <rt_resort_prio+0x14>
 8001800:	7843      	ldrb	r3, [r0, #1]
 8001802:	2b01      	cmp	r3, #1
 8001804:	d10d      	bne.n	8001822 <rt_resort_prio+0x2a>
 8001806:	4c07      	ldr	r4, [pc, #28]	; (8001824 <rt_resort_prio+0x2c>)
 8001808:	e003      	b.n	8001812 <rt_resort_prio+0x1a>
 800180a:	68a4      	ldr	r4, [r4, #8]
 800180c:	7823      	ldrb	r3, [r4, #0]
 800180e:	2b00      	cmp	r3, #0
 8001810:	d0fb      	beq.n	800180a <rt_resort_prio+0x12>
 8001812:	4608      	mov	r0, r1
 8001814:	f7ff ffda 	bl	80017cc <rt_rmv_list>
 8001818:	4620      	mov	r0, r4
 800181a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800181e:	f7ff bf45 	b.w	80016ac <rt_put_prio>
 8001822:	bd10      	pop	{r4, pc}
 8001824:	200026f0 	.word	0x200026f0

08001828 <rt_rmv_dly>:
 8001828:	6903      	ldr	r3, [r0, #16]
 800182a:	b510      	push	{r4, lr}
 800182c:	b163      	cbz	r3, 8001848 <rt_rmv_dly+0x20>
 800182e:	68c2      	ldr	r2, [r0, #12]
 8001830:	60da      	str	r2, [r3, #12]
 8001832:	68c2      	ldr	r2, [r0, #12]
 8001834:	b14a      	cbz	r2, 800184a <rt_rmv_dly+0x22>
 8001836:	8a99      	ldrh	r1, [r3, #20]
 8001838:	8a84      	ldrh	r4, [r0, #20]
 800183a:	4421      	add	r1, r4
 800183c:	8299      	strh	r1, [r3, #20]
 800183e:	6113      	str	r3, [r2, #16]
 8001840:	2300      	movs	r3, #0
 8001842:	60c3      	str	r3, [r0, #12]
 8001844:	2300      	movs	r3, #0
 8001846:	6103      	str	r3, [r0, #16]
 8001848:	bd10      	pop	{r4, pc}
 800184a:	829a      	strh	r2, [r3, #20]
 800184c:	e7fa      	b.n	8001844 <rt_rmv_dly+0x1c>
	...

08001850 <rt_psq_enq>:
 8001850:	b470      	push	{r4, r5, r6}
 8001852:	4b11      	ldr	r3, [pc, #68]	; (8001898 <rt_psq_enq+0x48>)
 8001854:	78dd      	ldrb	r5, [r3, #3]
 8001856:	f3ef 8610 	mrs	r6, PRIMASK
 800185a:	f3ef 8210 	mrs	r2, PRIMASK
 800185e:	b672      	cpsid	i
 8001860:	789a      	ldrb	r2, [r3, #2]
 8001862:	4295      	cmp	r5, r2
 8001864:	d911      	bls.n	800188a <rt_psq_enq+0x3a>
 8001866:	3201      	adds	r2, #1
 8001868:	709a      	strb	r2, [r3, #2]
 800186a:	781a      	ldrb	r2, [r3, #0]
 800186c:	1c54      	adds	r4, r2, #1
 800186e:	42a5      	cmp	r5, r4
 8001870:	bf08      	it	eq
 8001872:	2400      	moveq	r4, #0
 8001874:	701c      	strb	r4, [r3, #0]
 8001876:	b906      	cbnz	r6, 800187a <rt_psq_enq+0x2a>
 8001878:	b662      	cpsie	i
 800187a:	4295      	cmp	r5, r2
 800187c:	d907      	bls.n	800188e <rt_psq_enq+0x3e>
 800187e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8001882:	bc70      	pop	{r4, r5, r6}
 8001884:	6058      	str	r0, [r3, #4]
 8001886:	6099      	str	r1, [r3, #8]
 8001888:	4770      	bx	lr
 800188a:	2e00      	cmp	r6, #0
 800188c:	d0f4      	beq.n	8001878 <rt_psq_enq+0x28>
 800188e:	2002      	movs	r0, #2
 8001890:	bc70      	pop	{r4, r5, r6}
 8001892:	f7ff bebd 	b.w	8001610 <os_error>
 8001896:	bf00      	nop
 8001898:	20001f74 	.word	0x20001f74

0800189c <rt_mut_init>:
 800189c:	2303      	movs	r3, #3
 800189e:	7003      	strb	r3, [r0, #0]
 80018a0:	2300      	movs	r3, #0
 80018a2:	8043      	strh	r3, [r0, #2]
 80018a4:	6043      	str	r3, [r0, #4]
 80018a6:	6083      	str	r3, [r0, #8]
 80018a8:	60c3      	str	r3, [r0, #12]
 80018aa:	4770      	bx	lr

080018ac <rt_mut_release>:
 80018ac:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80018b0:	8843      	ldrh	r3, [r0, #2]
 80018b2:	4605      	mov	r5, r0
 80018b4:	2b00      	cmp	r3, #0
 80018b6:	d063      	beq.n	8001980 <rt_mut_release+0xd4>
 80018b8:	4f32      	ldr	r7, [pc, #200]	; (8001984 <rt_mut_release+0xd8>)
 80018ba:	6881      	ldr	r1, [r0, #8]
 80018bc:	683a      	ldr	r2, [r7, #0]
 80018be:	4291      	cmp	r1, r2
 80018c0:	d15e      	bne.n	8001980 <rt_mut_release+0xd4>
 80018c2:	3b01      	subs	r3, #1
 80018c4:	b29b      	uxth	r3, r3
 80018c6:	8043      	strh	r3, [r0, #2]
 80018c8:	b11b      	cbz	r3, 80018d2 <rt_mut_release+0x26>
 80018ca:	2400      	movs	r4, #0
 80018cc:	4620      	mov	r0, r4
 80018ce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80018d2:	6a0b      	ldr	r3, [r1, #32]
 80018d4:	4298      	cmp	r0, r3
 80018d6:	d129      	bne.n	800192c <rt_mut_release+0x80>
 80018d8:	68c3      	ldr	r3, [r0, #12]
 80018da:	620b      	str	r3, [r1, #32]
 80018dc:	f891 3024 	ldrb.w	r3, [r1, #36]	; 0x24
 80018e0:	6a0c      	ldr	r4, [r1, #32]
 80018e2:	bb5c      	cbnz	r4, 800193c <rt_mut_release+0x90>
 80018e4:	708b      	strb	r3, [r1, #2]
 80018e6:	686a      	ldr	r2, [r5, #4]
 80018e8:	f8df 809c 	ldr.w	r8, [pc, #156]	; 8001988 <rt_mut_release+0xdc>
 80018ec:	2a00      	cmp	r2, #0
 80018ee:	d03b      	beq.n	8001968 <rt_mut_release+0xbc>
 80018f0:	4628      	mov	r0, r5
 80018f2:	f7ff fef3 	bl	80016dc <rt_get_first>
 80018f6:	4621      	mov	r1, r4
 80018f8:	4606      	mov	r6, r0
 80018fa:	f000 f8c1 	bl	8001a80 <rt_ret_val>
 80018fe:	4630      	mov	r0, r6
 8001900:	f7ff ff92 	bl	8001828 <rt_rmv_dly>
 8001904:	6a33      	ldr	r3, [r6, #32]
 8001906:	60eb      	str	r3, [r5, #12]
 8001908:	f04f 0901 	mov.w	r9, #1
 800190c:	6839      	ldr	r1, [r7, #0]
 800190e:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8001912:	f8a5 9002 	strh.w	r9, [r5, #2]
 8001916:	60ae      	str	r6, [r5, #8]
 8001918:	6235      	str	r5, [r6, #32]
 800191a:	788a      	ldrb	r2, [r1, #2]
 800191c:	789b      	ldrb	r3, [r3, #2]
 800191e:	429a      	cmp	r2, r3
 8001920:	d314      	bcc.n	800194c <rt_mut_release+0xa0>
 8001922:	4630      	mov	r0, r6
 8001924:	f000 fe5c 	bl	80025e0 <rt_dispatch>
 8001928:	e7d0      	b.n	80018cc <rt_mut_release+0x20>
 800192a:	4613      	mov	r3, r2
 800192c:	2b00      	cmp	r3, #0
 800192e:	d0d5      	beq.n	80018dc <rt_mut_release+0x30>
 8001930:	68da      	ldr	r2, [r3, #12]
 8001932:	4295      	cmp	r5, r2
 8001934:	d1f9      	bne.n	800192a <rt_mut_release+0x7e>
 8001936:	68ea      	ldr	r2, [r5, #12]
 8001938:	60da      	str	r2, [r3, #12]
 800193a:	e7cf      	b.n	80018dc <rt_mut_release+0x30>
 800193c:	6862      	ldr	r2, [r4, #4]
 800193e:	b11a      	cbz	r2, 8001948 <rt_mut_release+0x9c>
 8001940:	7892      	ldrb	r2, [r2, #2]
 8001942:	4293      	cmp	r3, r2
 8001944:	bf38      	it	cc
 8001946:	4613      	movcc	r3, r2
 8001948:	68e4      	ldr	r4, [r4, #12]
 800194a:	e7ca      	b.n	80018e2 <rt_mut_release+0x36>
 800194c:	4640      	mov	r0, r8
 800194e:	f7ff fead 	bl	80016ac <rt_put_prio>
 8001952:	4631      	mov	r1, r6
 8001954:	4640      	mov	r0, r8
 8001956:	f7ff fea9 	bl	80016ac <rt_put_prio>
 800195a:	683b      	ldr	r3, [r7, #0]
 800195c:	f883 9001 	strb.w	r9, [r3, #1]
 8001960:	f886 9001 	strb.w	r9, [r6, #1]
 8001964:	4620      	mov	r0, r4
 8001966:	e7dd      	b.n	8001924 <rt_mut_release+0x78>
 8001968:	f8d8 2004 	ldr.w	r2, [r8, #4]
 800196c:	7892      	ldrb	r2, [r2, #2]
 800196e:	429a      	cmp	r2, r3
 8001970:	d9ab      	bls.n	80018ca <rt_mut_release+0x1e>
 8001972:	4640      	mov	r0, r8
 8001974:	f7ff fe9a 	bl	80016ac <rt_put_prio>
 8001978:	683b      	ldr	r3, [r7, #0]
 800197a:	2201      	movs	r2, #1
 800197c:	705a      	strb	r2, [r3, #1]
 800197e:	e7f1      	b.n	8001964 <rt_mut_release+0xb8>
 8001980:	24ff      	movs	r4, #255	; 0xff
 8001982:	e7a3      	b.n	80018cc <rt_mut_release+0x20>
 8001984:	2000273c 	.word	0x2000273c
 8001988:	200026f0 	.word	0x200026f0

0800198c <rt_mut_wait>:
 800198c:	8843      	ldrh	r3, [r0, #2]
 800198e:	b570      	push	{r4, r5, r6, lr}
 8001990:	4604      	mov	r4, r0
 8001992:	460e      	mov	r6, r1
 8001994:	4d13      	ldr	r5, [pc, #76]	; (80019e4 <rt_mut_wait+0x58>)
 8001996:	b943      	cbnz	r3, 80019aa <rt_mut_wait+0x1e>
 8001998:	682a      	ldr	r2, [r5, #0]
 800199a:	6082      	str	r2, [r0, #8]
 800199c:	6a11      	ldr	r1, [r2, #32]
 800199e:	60c1      	str	r1, [r0, #12]
 80019a0:	6210      	str	r0, [r2, #32]
 80019a2:	3301      	adds	r3, #1
 80019a4:	8063      	strh	r3, [r4, #2]
 80019a6:	2000      	movs	r0, #0
 80019a8:	bd70      	pop	{r4, r5, r6, pc}
 80019aa:	6880      	ldr	r0, [r0, #8]
 80019ac:	682a      	ldr	r2, [r5, #0]
 80019ae:	4290      	cmp	r0, r2
 80019b0:	d0f7      	beq.n	80019a2 <rt_mut_wait+0x16>
 80019b2:	b181      	cbz	r1, 80019d6 <rt_mut_wait+0x4a>
 80019b4:	7893      	ldrb	r3, [r2, #2]
 80019b6:	7882      	ldrb	r2, [r0, #2]
 80019b8:	429a      	cmp	r2, r3
 80019ba:	d202      	bcs.n	80019c2 <rt_mut_wait+0x36>
 80019bc:	7083      	strb	r3, [r0, #2]
 80019be:	f7ff ff1b 	bl	80017f8 <rt_resort_prio>
 80019c2:	6862      	ldr	r2, [r4, #4]
 80019c4:	b14a      	cbz	r2, 80019da <rt_mut_wait+0x4e>
 80019c6:	6829      	ldr	r1, [r5, #0]
 80019c8:	4620      	mov	r0, r4
 80019ca:	f7ff fe6f 	bl	80016ac <rt_put_prio>
 80019ce:	2109      	movs	r1, #9
 80019d0:	4630      	mov	r0, r6
 80019d2:	f000 fe29 	bl	8002628 <rt_block>
 80019d6:	2001      	movs	r0, #1
 80019d8:	bd70      	pop	{r4, r5, r6, pc}
 80019da:	682b      	ldr	r3, [r5, #0]
 80019dc:	6063      	str	r3, [r4, #4]
 80019de:	605a      	str	r2, [r3, #4]
 80019e0:	609c      	str	r4, [r3, #8]
 80019e2:	e7f4      	b.n	80019ce <rt_mut_wait+0x42>
 80019e4:	2000273c 	.word	0x2000273c

080019e8 <rt_init_stack>:
 80019e8:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80019ea:	089b      	lsrs	r3, r3, #2
 80019ec:	bf04      	itt	eq
 80019ee:	4b22      	ldreq	r3, [pc, #136]	; (8001a78 <rt_init_stack+0x90>)
 80019f0:	881b      	ldrheq	r3, [r3, #0]
 80019f2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80019f4:	6b05      	ldr	r5, [r0, #48]	; 0x30
 80019f6:	bf08      	it	eq
 80019f8:	089b      	lsreq	r3, r3, #2
 80019fa:	eb05 0283 	add.w	r2, r5, r3, lsl #2
 80019fe:	0754      	lsls	r4, r2, #29
 8001a00:	bf48      	it	mi
 8001a02:	3a04      	submi	r2, #4
 8001a04:	f04f 7680 	mov.w	r6, #16777216	; 0x1000000
 8001a08:	e902 0042 	stmdb	r2, {r1, r6}
 8001a0c:	f1a2 0440 	sub.w	r4, r2, #64	; 0x40
 8001a10:	f1a2 0644 	sub.w	r6, r2, #68	; 0x44
 8001a14:	f1a2 070c 	sub.w	r7, r2, #12
 8001a18:	f04f 0e00 	mov.w	lr, #0
 8001a1c:	f846 ef04 	str.w	lr, [r6, #4]!
 8001a20:	42be      	cmp	r6, r7
 8001a22:	d1fb      	bne.n	8001a1c <rt_init_stack+0x34>
 8001a24:	69c6      	ldr	r6, [r0, #28]
 8001a26:	f842 6c20 	str.w	r6, [r2, #-32]
 8001a2a:	6341      	str	r1, [r0, #52]	; 0x34
 8001a2c:	4912      	ldr	r1, [pc, #72]	; (8001a78 <rt_init_stack+0x90>)
 8001a2e:	62c4      	str	r4, [r0, #44]	; 0x2c
 8001a30:	6809      	ldr	r1, [r1, #0]
 8001a32:	00c9      	lsls	r1, r1, #3
 8001a34:	d517      	bpl.n	8001a66 <rt_init_stack+0x7e>
 8001a36:	2b11      	cmp	r3, #17
 8001a38:	d915      	bls.n	8001a66 <rt_init_stack+0x7e>
 8001a3a:	3b10      	subs	r3, #16
 8001a3c:	f06f 0107 	mvn.w	r1, #7
 8001a40:	085b      	lsrs	r3, r3, #1
 8001a42:	434b      	muls	r3, r1
 8001a44:	f1a3 0138 	sub.w	r1, r3, #56	; 0x38
 8001a48:	440a      	add	r2, r1
 8001a4a:	f04f 30cc 	mov.w	r0, #3435973836	; 0xcccccccc
 8001a4e:	4621      	mov	r1, r4
 8001a50:	4291      	cmp	r1, r2
 8001a52:	d10b      	bne.n	8001a6c <rt_init_stack+0x84>
 8001a54:	3308      	adds	r3, #8
 8001a56:	441c      	add	r4, r3
 8001a58:	1f23      	subs	r3, r4, #4
 8001a5a:	429d      	cmp	r5, r3
 8001a5c:	bf3c      	itt	cc
 8001a5e:	f04f 33cc 	movcc.w	r3, #3435973836	; 0xcccccccc
 8001a62:	f844 3c04 	strcc.w	r3, [r4, #-4]
 8001a66:	4b05      	ldr	r3, [pc, #20]	; (8001a7c <rt_init_stack+0x94>)
 8001a68:	602b      	str	r3, [r5, #0]
 8001a6a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001a6c:	f841 0c04 	str.w	r0, [r1, #-4]
 8001a70:	f841 0d08 	str.w	r0, [r1, #-8]!
 8001a74:	e7ec      	b.n	8001a50 <rt_init_stack+0x68>
 8001a76:	bf00      	nop
 8001a78:	08005c38 	.word	0x08005c38
 8001a7c:	e25a2ea5 	.word	0xe25a2ea5

08001a80 <rt_ret_val>:
 8001a80:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001a84:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8001a86:	b112      	cbz	r2, 8001a8e <rt_ret_val+0xe>
 8001a88:	3360      	adds	r3, #96	; 0x60
 8001a8a:	6019      	str	r1, [r3, #0]
 8001a8c:	4770      	bx	lr
 8001a8e:	3320      	adds	r3, #32
 8001a90:	e7fb      	b.n	8001a8a <rt_ret_val+0xa>

08001a92 <rt_ret_val2>:
 8001a92:	b510      	push	{r4, lr}
 8001a94:	f890 4025 	ldrb.w	r4, [r0, #37]	; 0x25
 8001a98:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8001a9a:	b11c      	cbz	r4, 8001aa4 <rt_ret_val2+0x12>
 8001a9c:	3360      	adds	r3, #96	; 0x60
 8001a9e:	e883 0006 	stmia.w	r3, {r1, r2}
 8001aa2:	bd10      	pop	{r4, pc}
 8001aa4:	3320      	adds	r3, #32
 8001aa6:	e7fa      	b.n	8001a9e <rt_ret_val2+0xc>

08001aa8 <rt_psh_req>:
 8001aa8:	4b05      	ldr	r3, [pc, #20]	; (8001ac0 <rt_psh_req+0x18>)
 8001aaa:	781b      	ldrb	r3, [r3, #0]
 8001aac:	b923      	cbnz	r3, 8001ab8 <rt_psh_req+0x10>
 8001aae:	4b05      	ldr	r3, [pc, #20]	; (8001ac4 <rt_psh_req+0x1c>)
 8001ab0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8001ab4:	601a      	str	r2, [r3, #0]
 8001ab6:	4770      	bx	lr
 8001ab8:	4b03      	ldr	r3, [pc, #12]	; (8001ac8 <rt_psh_req+0x20>)
 8001aba:	2201      	movs	r2, #1
 8001abc:	701a      	strb	r2, [r3, #0]
 8001abe:	4770      	bx	lr
 8001ac0:	20001968 	.word	0x20001968
 8001ac4:	e000ed04 	.word	0xe000ed04
 8001ac8:	20001969 	.word	0x20001969

08001acc <rt_pop_req>:
 8001acc:	b538      	push	{r3, r4, r5, lr}
 8001ace:	4b1a      	ldr	r3, [pc, #104]	; (8001b38 <rt_pop_req+0x6c>)
 8001ad0:	4c1a      	ldr	r4, [pc, #104]	; (8001b3c <rt_pop_req+0x70>)
 8001ad2:	6818      	ldr	r0, [r3, #0]
 8001ad4:	2301      	movs	r3, #1
 8001ad6:	7043      	strb	r3, [r0, #1]
 8001ad8:	f7ff fe12 	bl	8001700 <rt_put_rdy_first>
 8001adc:	7865      	ldrb	r5, [r4, #1]
 8001ade:	78a3      	ldrb	r3, [r4, #2]
 8001ae0:	b93b      	cbnz	r3, 8001af2 <rt_pop_req+0x26>
 8001ae2:	4817      	ldr	r0, [pc, #92]	; (8001b40 <rt_pop_req+0x74>)
 8001ae4:	7065      	strb	r5, [r4, #1]
 8001ae6:	f7ff fdf9 	bl	80016dc <rt_get_first>
 8001aea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8001aee:	f000 bd5d 	b.w	80025ac <rt_switch_req>
 8001af2:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 8001af6:	6858      	ldr	r0, [r3, #4]
 8001af8:	7802      	ldrb	r2, [r0, #0]
 8001afa:	b99a      	cbnz	r2, 8001b24 <rt_pop_req+0x58>
 8001afc:	8919      	ldrh	r1, [r3, #8]
 8001afe:	f000 f9bb 	bl	8001e78 <rt_evt_psh>
 8001b02:	78e3      	ldrb	r3, [r4, #3]
 8001b04:	3501      	adds	r5, #1
 8001b06:	429d      	cmp	r5, r3
 8001b08:	bf08      	it	eq
 8001b0a:	2500      	moveq	r5, #0
 8001b0c:	f3ef 8310 	mrs	r3, PRIMASK
 8001b10:	f3ef 8210 	mrs	r2, PRIMASK
 8001b14:	b672      	cpsid	i
 8001b16:	78a2      	ldrb	r2, [r4, #2]
 8001b18:	3a01      	subs	r2, #1
 8001b1a:	70a2      	strb	r2, [r4, #2]
 8001b1c:	2b00      	cmp	r3, #0
 8001b1e:	d1de      	bne.n	8001ade <rt_pop_req+0x12>
 8001b20:	b662      	cpsie	i
 8001b22:	e7dc      	b.n	8001ade <rt_pop_req+0x12>
 8001b24:	2a01      	cmp	r2, #1
 8001b26:	d103      	bne.n	8001b30 <rt_pop_req+0x64>
 8001b28:	6899      	ldr	r1, [r3, #8]
 8001b2a:	f000 f933 	bl	8001d94 <rt_mbx_psh>
 8001b2e:	e7e8      	b.n	8001b02 <rt_pop_req+0x36>
 8001b30:	f000 ff9e 	bl	8002a70 <rt_sem_psh>
 8001b34:	e7e5      	b.n	8001b02 <rt_pop_req+0x36>
 8001b36:	bf00      	nop
 8001b38:	2000273c 	.word	0x2000273c
 8001b3c:	20001f74 	.word	0x20001f74
 8001b40:	200026f0 	.word	0x200026f0

08001b44 <os_tick_init>:
 8001b44:	4b08      	ldr	r3, [pc, #32]	; (8001b68 <os_tick_init+0x24>)
 8001b46:	681a      	ldr	r2, [r3, #0]
 8001b48:	4b08      	ldr	r3, [pc, #32]	; (8001b6c <os_tick_init+0x28>)
 8001b4a:	601a      	str	r2, [r3, #0]
 8001b4c:	2200      	movs	r2, #0
 8001b4e:	605a      	str	r2, [r3, #4]
 8001b50:	2207      	movs	r2, #7
 8001b52:	f843 2c04 	str.w	r2, [r3, #-4]
 8001b56:	4a06      	ldr	r2, [pc, #24]	; (8001b70 <os_tick_init+0x2c>)
 8001b58:	6813      	ldr	r3, [r2, #0]
 8001b5a:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 8001b5e:	6013      	str	r3, [r2, #0]
 8001b60:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001b64:	4770      	bx	lr
 8001b66:	bf00      	nop
 8001b68:	08005c50 	.word	0x08005c50
 8001b6c:	e000e014 	.word	0xe000e014
 8001b70:	e000ed20 	.word	0xe000ed20

08001b74 <os_tick_irqack>:
 8001b74:	4770      	bx	lr
	...

08001b78 <rt_systick>:
 8001b78:	b508      	push	{r3, lr}
 8001b7a:	4b0b      	ldr	r3, [pc, #44]	; (8001ba8 <rt_systick+0x30>)
 8001b7c:	6818      	ldr	r0, [r3, #0]
 8001b7e:	2301      	movs	r3, #1
 8001b80:	7043      	strb	r3, [r0, #1]
 8001b82:	f7ff fdbd 	bl	8001700 <rt_put_rdy_first>
 8001b86:	f000 f9ad 	bl	8001ee4 <rt_chk_robin>
 8001b8a:	4a08      	ldr	r2, [pc, #32]	; (8001bac <rt_systick+0x34>)
 8001b8c:	6813      	ldr	r3, [r2, #0]
 8001b8e:	3301      	adds	r3, #1
 8001b90:	6013      	str	r3, [r2, #0]
 8001b92:	f7ff fde3 	bl	800175c <rt_dec_dly>
 8001b96:	f000 fc91 	bl	80024bc <sysTimerTick>
 8001b9a:	4805      	ldr	r0, [pc, #20]	; (8001bb0 <rt_systick+0x38>)
 8001b9c:	f7ff fd9e 	bl	80016dc <rt_get_first>
 8001ba0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001ba4:	f000 bd02 	b.w	80025ac <rt_switch_req>
 8001ba8:	2000273c 	.word	0x2000273c
 8001bac:	20002784 	.word	0x20002784
 8001bb0:	200026f0 	.word	0x200026f0

08001bb4 <rt_stk_check>:
 8001bb4:	4b06      	ldr	r3, [pc, #24]	; (8001bd0 <rt_stk_check+0x1c>)
 8001bb6:	681a      	ldr	r2, [r3, #0]
 8001bb8:	6b13      	ldr	r3, [r2, #48]	; 0x30
 8001bba:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8001bbc:	4293      	cmp	r3, r2
 8001bbe:	d803      	bhi.n	8001bc8 <rt_stk_check+0x14>
 8001bc0:	681a      	ldr	r2, [r3, #0]
 8001bc2:	4b04      	ldr	r3, [pc, #16]	; (8001bd4 <rt_stk_check+0x20>)
 8001bc4:	429a      	cmp	r2, r3
 8001bc6:	d002      	beq.n	8001bce <rt_stk_check+0x1a>
 8001bc8:	2001      	movs	r0, #1
 8001bca:	f7ff bd21 	b.w	8001610 <os_error>
 8001bce:	4770      	bx	lr
 8001bd0:	2000273c 	.word	0x2000273c
 8001bd4:	e25a2ea5 	.word	0xe25a2ea5

08001bd8 <_init_box>:
 8001bd8:	2a00      	cmp	r2, #0
 8001bda:	bfbb      	ittet	lt
 8001bdc:	f022 4200 	biclt.w	r2, r2, #2147483648	; 0x80000000
 8001be0:	3207      	addlt	r2, #7
 8001be2:	3203      	addge	r2, #3
 8001be4:	f022 0207 	biclt.w	r2, r2, #7
 8001be8:	bfa8      	it	ge
 8001bea:	f022 0203 	bicge.w	r2, r2, #3
 8001bee:	b510      	push	{r4, lr}
 8001bf0:	bfb4      	ite	lt
 8001bf2:	2310      	movlt	r3, #16
 8001bf4:	230c      	movge	r3, #12
 8001bf6:	b192      	cbz	r2, 8001c1e <_init_box+0x46>
 8001bf8:	18d4      	adds	r4, r2, r3
 8001bfa:	428c      	cmp	r4, r1
 8001bfc:	d80f      	bhi.n	8001c1e <_init_box+0x46>
 8001bfe:	4401      	add	r1, r0
 8001c00:	4403      	add	r3, r0
 8001c02:	4254      	negs	r4, r2
 8001c04:	6041      	str	r1, [r0, #4]
 8001c06:	6003      	str	r3, [r0, #0]
 8001c08:	6082      	str	r2, [r0, #8]
 8001c0a:	4421      	add	r1, r4
 8001c0c:	1898      	adds	r0, r3, r2
 8001c0e:	4281      	cmp	r1, r0
 8001c10:	d302      	bcc.n	8001c18 <_init_box+0x40>
 8001c12:	5100      	str	r0, [r0, r4]
 8001c14:	4603      	mov	r3, r0
 8001c16:	e7f9      	b.n	8001c0c <_init_box+0x34>
 8001c18:	2000      	movs	r0, #0
 8001c1a:	6018      	str	r0, [r3, #0]
 8001c1c:	bd10      	pop	{r4, pc}
 8001c1e:	2001      	movs	r0, #1
 8001c20:	bd10      	pop	{r4, pc}

08001c22 <rt_alloc_box>:
 8001c22:	f3ef 8310 	mrs	r3, PRIMASK
 8001c26:	b672      	cpsid	i
 8001c28:	6802      	ldr	r2, [r0, #0]
 8001c2a:	f003 0301 	and.w	r3, r3, #1
 8001c2e:	b10a      	cbz	r2, 8001c34 <rt_alloc_box+0x12>
 8001c30:	6811      	ldr	r1, [r2, #0]
 8001c32:	6001      	str	r1, [r0, #0]
 8001c34:	b903      	cbnz	r3, 8001c38 <rt_alloc_box+0x16>
 8001c36:	b662      	cpsie	i
 8001c38:	4610      	mov	r0, r2
 8001c3a:	4770      	bx	lr

08001c3c <rt_free_box>:
 8001c3c:	4281      	cmp	r1, r0
 8001c3e:	d30d      	bcc.n	8001c5c <rt_free_box+0x20>
 8001c40:	6843      	ldr	r3, [r0, #4]
 8001c42:	4299      	cmp	r1, r3
 8001c44:	d20a      	bcs.n	8001c5c <rt_free_box+0x20>
 8001c46:	f3ef 8310 	mrs	r3, PRIMASK
 8001c4a:	b672      	cpsid	i
 8001c4c:	6802      	ldr	r2, [r0, #0]
 8001c4e:	600a      	str	r2, [r1, #0]
 8001c50:	6001      	str	r1, [r0, #0]
 8001c52:	f013 0001 	ands.w	r0, r3, #1
 8001c56:	d103      	bne.n	8001c60 <rt_free_box+0x24>
 8001c58:	b662      	cpsie	i
 8001c5a:	4770      	bx	lr
 8001c5c:	2001      	movs	r0, #1
 8001c5e:	4770      	bx	lr
 8001c60:	2000      	movs	r0, #0
 8001c62:	4770      	bx	lr

08001c64 <rt_mbx_init>:
 8001c64:	2301      	movs	r3, #1
 8001c66:	3910      	subs	r1, #16
 8001c68:	7003      	strb	r3, [r0, #0]
 8001c6a:	0889      	lsrs	r1, r1, #2
 8001c6c:	2300      	movs	r3, #0
 8001c6e:	7043      	strb	r3, [r0, #1]
 8001c70:	7083      	strb	r3, [r0, #2]
 8001c72:	6043      	str	r3, [r0, #4]
 8001c74:	8103      	strh	r3, [r0, #8]
 8001c76:	8143      	strh	r3, [r0, #10]
 8001c78:	8183      	strh	r3, [r0, #12]
 8001c7a:	81c1      	strh	r1, [r0, #14]
 8001c7c:	4770      	bx	lr
	...

08001c80 <rt_mbx_wait>:
 8001c80:	b570      	push	{r4, r5, r6, lr}
 8001c82:	8985      	ldrh	r5, [r0, #12]
 8001c84:	4604      	mov	r4, r0
 8001c86:	4616      	mov	r6, r2
 8001c88:	2d00      	cmp	r5, #0
 8001c8a:	d038      	beq.n	8001cfe <rt_mbx_wait+0x7e>
 8001c8c:	8943      	ldrh	r3, [r0, #10]
 8001c8e:	1d1a      	adds	r2, r3, #4
 8001c90:	3301      	adds	r3, #1
 8001c92:	f850 2022 	ldr.w	r2, [r0, r2, lsl #2]
 8001c96:	600a      	str	r2, [r1, #0]
 8001c98:	89c2      	ldrh	r2, [r0, #14]
 8001c9a:	b29b      	uxth	r3, r3
 8001c9c:	429a      	cmp	r2, r3
 8001c9e:	8143      	strh	r3, [r0, #10]
 8001ca0:	bf04      	itt	eq
 8001ca2:	2300      	moveq	r3, #0
 8001ca4:	8143      	strheq	r3, [r0, #10]
 8001ca6:	6843      	ldr	r3, [r0, #4]
 8001ca8:	b1f3      	cbz	r3, 8001ce8 <rt_mbx_wait+0x68>
 8001caa:	7843      	ldrb	r3, [r0, #1]
 8001cac:	2b02      	cmp	r3, #2
 8001cae:	d11b      	bne.n	8001ce8 <rt_mbx_wait+0x68>
 8001cb0:	f7ff fd14 	bl	80016dc <rt_get_first>
 8001cb4:	2100      	movs	r1, #0
 8001cb6:	4605      	mov	r5, r0
 8001cb8:	f7ff fee2 	bl	8001a80 <rt_ret_val>
 8001cbc:	8923      	ldrh	r3, [r4, #8]
 8001cbe:	69e9      	ldr	r1, [r5, #28]
 8001cc0:	1d1a      	adds	r2, r3, #4
 8001cc2:	3301      	adds	r3, #1
 8001cc4:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
 8001cc8:	89e2      	ldrh	r2, [r4, #14]
 8001cca:	b29b      	uxth	r3, r3
 8001ccc:	429a      	cmp	r2, r3
 8001cce:	8123      	strh	r3, [r4, #8]
 8001cd0:	bf08      	it	eq
 8001cd2:	2300      	moveq	r3, #0
 8001cd4:	4628      	mov	r0, r5
 8001cd6:	bf08      	it	eq
 8001cd8:	8123      	strheq	r3, [r4, #8]
 8001cda:	f7ff fda5 	bl	8001828 <rt_rmv_dly>
 8001cde:	4628      	mov	r0, r5
 8001ce0:	f000 fc7e 	bl	80025e0 <rt_dispatch>
 8001ce4:	2000      	movs	r0, #0
 8001ce6:	bd70      	pop	{r4, r5, r6, pc}
 8001ce8:	f3ef 8010 	mrs	r0, PRIMASK
 8001cec:	f3ef 8310 	mrs	r3, PRIMASK
 8001cf0:	b672      	cpsid	i
 8001cf2:	3d01      	subs	r5, #1
 8001cf4:	81a5      	strh	r5, [r4, #12]
 8001cf6:	2800      	cmp	r0, #0
 8001cf8:	d1f4      	bne.n	8001ce4 <rt_mbx_wait+0x64>
 8001cfa:	b662      	cpsie	i
 8001cfc:	bd70      	pop	{r4, r5, r6, pc}
 8001cfe:	b14a      	cbz	r2, 8001d14 <rt_mbx_wait+0x94>
 8001d00:	6842      	ldr	r2, [r0, #4]
 8001d02:	4b09      	ldr	r3, [pc, #36]	; (8001d28 <rt_mbx_wait+0xa8>)
 8001d04:	b142      	cbz	r2, 8001d18 <rt_mbx_wait+0x98>
 8001d06:	6819      	ldr	r1, [r3, #0]
 8001d08:	f7ff fcd0 	bl	80016ac <rt_put_prio>
 8001d0c:	2108      	movs	r1, #8
 8001d0e:	4630      	mov	r0, r6
 8001d10:	f000 fc8a 	bl	8002628 <rt_block>
 8001d14:	2001      	movs	r0, #1
 8001d16:	bd70      	pop	{r4, r5, r6, pc}
 8001d18:	681b      	ldr	r3, [r3, #0]
 8001d1a:	6043      	str	r3, [r0, #4]
 8001d1c:	605a      	str	r2, [r3, #4]
 8001d1e:	6098      	str	r0, [r3, #8]
 8001d20:	2301      	movs	r3, #1
 8001d22:	7043      	strb	r3, [r0, #1]
 8001d24:	e7f2      	b.n	8001d0c <rt_mbx_wait+0x8c>
 8001d26:	bf00      	nop
 8001d28:	2000273c 	.word	0x2000273c

08001d2c <rt_mbx_check>:
 8001d2c:	89c2      	ldrh	r2, [r0, #14]
 8001d2e:	8980      	ldrh	r0, [r0, #12]
 8001d30:	1a10      	subs	r0, r2, r0
 8001d32:	4770      	bx	lr

08001d34 <isr_mbx_send>:
 8001d34:	b508      	push	{r3, lr}
 8001d36:	f7ff fd8b 	bl	8001850 <rt_psq_enq>
 8001d3a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001d3e:	f7ff beb3 	b.w	8001aa8 <rt_psh_req>

08001d42 <isr_mbx_receive>:
 8001d42:	8983      	ldrh	r3, [r0, #12]
 8001d44:	b510      	push	{r4, lr}
 8001d46:	4604      	mov	r4, r0
 8001d48:	b30b      	cbz	r3, 8001d8e <isr_mbx_receive+0x4c>
 8001d4a:	8943      	ldrh	r3, [r0, #10]
 8001d4c:	3304      	adds	r3, #4
 8001d4e:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8001d52:	600b      	str	r3, [r1, #0]
 8001d54:	7843      	ldrb	r3, [r0, #1]
 8001d56:	2b02      	cmp	r3, #2
 8001d58:	d104      	bne.n	8001d64 <isr_mbx_receive+0x22>
 8001d5a:	2100      	movs	r1, #0
 8001d5c:	f7ff fd78 	bl	8001850 <rt_psq_enq>
 8001d60:	f7ff fea2 	bl	8001aa8 <rt_psh_req>
 8001d64:	f3ef 8310 	mrs	r3, PRIMASK
 8001d68:	f3ef 8210 	mrs	r2, PRIMASK
 8001d6c:	b672      	cpsid	i
 8001d6e:	89a2      	ldrh	r2, [r4, #12]
 8001d70:	3a01      	subs	r2, #1
 8001d72:	81a2      	strh	r2, [r4, #12]
 8001d74:	b903      	cbnz	r3, 8001d78 <isr_mbx_receive+0x36>
 8001d76:	b662      	cpsie	i
 8001d78:	8963      	ldrh	r3, [r4, #10]
 8001d7a:	89e2      	ldrh	r2, [r4, #14]
 8001d7c:	3301      	adds	r3, #1
 8001d7e:	b29b      	uxth	r3, r3
 8001d80:	429a      	cmp	r2, r3
 8001d82:	8163      	strh	r3, [r4, #10]
 8001d84:	d101      	bne.n	8001d8a <isr_mbx_receive+0x48>
 8001d86:	2300      	movs	r3, #0
 8001d88:	8163      	strh	r3, [r4, #10]
 8001d8a:	2004      	movs	r0, #4
 8001d8c:	bd10      	pop	{r4, pc}
 8001d8e:	4618      	mov	r0, r3
 8001d90:	bd10      	pop	{r4, pc}
	...

08001d94 <rt_mbx_psh>:
 8001d94:	6843      	ldr	r3, [r0, #4]
 8001d96:	b570      	push	{r4, r5, r6, lr}
 8001d98:	4604      	mov	r4, r0
 8001d9a:	460e      	mov	r6, r1
 8001d9c:	2b00      	cmp	r3, #0
 8001d9e:	d04b      	beq.n	8001e38 <rt_mbx_psh+0xa4>
 8001da0:	7845      	ldrb	r5, [r0, #1]
 8001da2:	2d02      	cmp	r5, #2
 8001da4:	d020      	beq.n	8001de8 <rt_mbx_psh+0x54>
 8001da6:	2d03      	cmp	r5, #3
 8001da8:	d00a      	beq.n	8001dc0 <rt_mbx_psh+0x2c>
 8001daa:	2d01      	cmp	r5, #1
 8001dac:	d161      	bne.n	8001e72 <rt_mbx_psh+0xde>
 8001dae:	f7ff fc95 	bl	80016dc <rt_get_first>
 8001db2:	4604      	mov	r4, r0
 8001db4:	4632      	mov	r2, r6
 8001db6:	2110      	movs	r1, #16
 8001db8:	f7ff fe6b 	bl	8001a92 <rt_ret_val2>
 8001dbc:	7065      	strb	r5, [r4, #1]
 8001dbe:	e00e      	b.n	8001dde <rt_mbx_psh+0x4a>
 8001dc0:	4608      	mov	r0, r1
 8001dc2:	f7ff ff2e 	bl	8001c22 <rt_alloc_box>
 8001dc6:	4605      	mov	r5, r0
 8001dc8:	2800      	cmp	r0, #0
 8001dca:	d052      	beq.n	8001e72 <rt_mbx_psh+0xde>
 8001dcc:	4620      	mov	r0, r4
 8001dce:	f7ff fc85 	bl	80016dc <rt_get_first>
 8001dd2:	4629      	mov	r1, r5
 8001dd4:	4604      	mov	r4, r0
 8001dd6:	f7ff fe53 	bl	8001a80 <rt_ret_val>
 8001dda:	2301      	movs	r3, #1
 8001ddc:	7063      	strb	r3, [r4, #1]
 8001dde:	4620      	mov	r0, r4
 8001de0:	f7ff fd22 	bl	8001828 <rt_rmv_dly>
 8001de4:	4621      	mov	r1, r4
 8001de6:	e022      	b.n	8001e2e <rt_mbx_psh+0x9a>
 8001de8:	f7ff fc78 	bl	80016dc <rt_get_first>
 8001dec:	2100      	movs	r1, #0
 8001dee:	4605      	mov	r5, r0
 8001df0:	f7ff fe46 	bl	8001a80 <rt_ret_val>
 8001df4:	8923      	ldrh	r3, [r4, #8]
 8001df6:	69e9      	ldr	r1, [r5, #28]
 8001df8:	1d1a      	adds	r2, r3, #4
 8001dfa:	f844 1022 	str.w	r1, [r4, r2, lsl #2]
 8001dfe:	f3ef 8210 	mrs	r2, PRIMASK
 8001e02:	f3ef 8110 	mrs	r1, PRIMASK
 8001e06:	b672      	cpsid	i
 8001e08:	89a1      	ldrh	r1, [r4, #12]
 8001e0a:	3101      	adds	r1, #1
 8001e0c:	81a1      	strh	r1, [r4, #12]
 8001e0e:	b902      	cbnz	r2, 8001e12 <rt_mbx_psh+0x7e>
 8001e10:	b662      	cpsie	i
 8001e12:	89e2      	ldrh	r2, [r4, #14]
 8001e14:	3301      	adds	r3, #1
 8001e16:	b29b      	uxth	r3, r3
 8001e18:	429a      	cmp	r2, r3
 8001e1a:	8123      	strh	r3, [r4, #8]
 8001e1c:	bf04      	itt	eq
 8001e1e:	2300      	moveq	r3, #0
 8001e20:	8123      	strheq	r3, [r4, #8]
 8001e22:	2301      	movs	r3, #1
 8001e24:	706b      	strb	r3, [r5, #1]
 8001e26:	4628      	mov	r0, r5
 8001e28:	f7ff fcfe 	bl	8001828 <rt_rmv_dly>
 8001e2c:	4629      	mov	r1, r5
 8001e2e:	4811      	ldr	r0, [pc, #68]	; (8001e74 <rt_mbx_psh+0xe0>)
 8001e30:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001e34:	f7ff bc3a 	b.w	80016ac <rt_put_prio>
 8001e38:	8980      	ldrh	r0, [r0, #12]
 8001e3a:	89e1      	ldrh	r1, [r4, #14]
 8001e3c:	4288      	cmp	r0, r1
 8001e3e:	d213      	bcs.n	8001e68 <rt_mbx_psh+0xd4>
 8001e40:	8923      	ldrh	r3, [r4, #8]
 8001e42:	1d1a      	adds	r2, r3, #4
 8001e44:	f844 6022 	str.w	r6, [r4, r2, lsl #2]
 8001e48:	f3ef 8210 	mrs	r2, PRIMASK
 8001e4c:	f3ef 8510 	mrs	r5, PRIMASK
 8001e50:	b672      	cpsid	i
 8001e52:	3001      	adds	r0, #1
 8001e54:	81a0      	strh	r0, [r4, #12]
 8001e56:	b902      	cbnz	r2, 8001e5a <rt_mbx_psh+0xc6>
 8001e58:	b662      	cpsie	i
 8001e5a:	3301      	adds	r3, #1
 8001e5c:	b29b      	uxth	r3, r3
 8001e5e:	4299      	cmp	r1, r3
 8001e60:	bf08      	it	eq
 8001e62:	2300      	moveq	r3, #0
 8001e64:	8123      	strh	r3, [r4, #8]
 8001e66:	bd70      	pop	{r4, r5, r6, pc}
 8001e68:	2003      	movs	r0, #3
 8001e6a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8001e6e:	f7ff bbcf 	b.w	8001610 <os_error>
 8001e72:	bd70      	pop	{r4, r5, r6, pc}
 8001e74:	200026f0 	.word	0x200026f0

08001e78 <rt_evt_psh>:
 8001e78:	b510      	push	{r4, lr}
 8001e7a:	8b03      	ldrh	r3, [r0, #24]
 8001e7c:	7842      	ldrb	r2, [r0, #1]
 8001e7e:	4319      	orrs	r1, r3
 8001e80:	2a06      	cmp	r2, #6
 8001e82:	4604      	mov	r4, r0
 8001e84:	8301      	strh	r1, [r0, #24]
 8001e86:	8b43      	ldrh	r3, [r0, #26]
 8001e88:	d115      	bne.n	8001eb6 <rt_evt_psh+0x3e>
 8001e8a:	ea33 0201 	bics.w	r2, r3, r1
 8001e8e:	d119      	bne.n	8001ec4 <rt_evt_psh+0x4c>
 8001e90:	ea21 0103 	bic.w	r1, r1, r3
 8001e94:	8321      	strh	r1, [r4, #24]
 8001e96:	4620      	mov	r0, r4
 8001e98:	f7ff fcc6 	bl	8001828 <rt_rmv_dly>
 8001e9c:	2301      	movs	r3, #1
 8001e9e:	4620      	mov	r0, r4
 8001ea0:	7063      	strb	r3, [r4, #1]
 8001ea2:	8b62      	ldrh	r2, [r4, #26]
 8001ea4:	2108      	movs	r1, #8
 8001ea6:	f7ff fdf4 	bl	8001a92 <rt_ret_val2>
 8001eaa:	4621      	mov	r1, r4
 8001eac:	4806      	ldr	r0, [pc, #24]	; (8001ec8 <rt_evt_psh+0x50>)
 8001eae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001eb2:	f7ff bbfb 	b.w	80016ac <rt_put_prio>
 8001eb6:	2a05      	cmp	r2, #5
 8001eb8:	d104      	bne.n	8001ec4 <rt_evt_psh+0x4c>
 8001eba:	ea11 0203 	ands.w	r2, r1, r3
 8001ebe:	d001      	beq.n	8001ec4 <rt_evt_psh+0x4c>
 8001ec0:	8342      	strh	r2, [r0, #26]
 8001ec2:	e7e5      	b.n	8001e90 <rt_evt_psh+0x18>
 8001ec4:	bd10      	pop	{r4, pc}
 8001ec6:	bf00      	nop
 8001ec8:	200026f0 	.word	0x200026f0

08001ecc <rt_init_robin>:
 8001ecc:	4b03      	ldr	r3, [pc, #12]	; (8001edc <rt_init_robin+0x10>)
 8001ece:	2200      	movs	r2, #0
 8001ed0:	601a      	str	r2, [r3, #0]
 8001ed2:	4a03      	ldr	r2, [pc, #12]	; (8001ee0 <rt_init_robin+0x14>)
 8001ed4:	6812      	ldr	r2, [r2, #0]
 8001ed6:	80da      	strh	r2, [r3, #6]
 8001ed8:	4770      	bx	lr
 8001eda:	bf00      	nop
 8001edc:	20002728 	.word	0x20002728
 8001ee0:	08005c34 	.word	0x08005c34

08001ee4 <rt_chk_robin>:
 8001ee4:	b508      	push	{r3, lr}
 8001ee6:	4b0e      	ldr	r3, [pc, #56]	; (8001f20 <rt_chk_robin+0x3c>)
 8001ee8:	685a      	ldr	r2, [r3, #4]
 8001eea:	4b0e      	ldr	r3, [pc, #56]	; (8001f24 <rt_chk_robin+0x40>)
 8001eec:	6819      	ldr	r1, [r3, #0]
 8001eee:	4291      	cmp	r1, r2
 8001ef0:	490d      	ldr	r1, [pc, #52]	; (8001f28 <rt_chk_robin+0x44>)
 8001ef2:	d005      	beq.n	8001f00 <rt_chk_robin+0x1c>
 8001ef4:	601a      	str	r2, [r3, #0]
 8001ef6:	88da      	ldrh	r2, [r3, #6]
 8001ef8:	6808      	ldr	r0, [r1, #0]
 8001efa:	3a01      	subs	r2, #1
 8001efc:	4402      	add	r2, r0
 8001efe:	809a      	strh	r2, [r3, #4]
 8001f00:	8898      	ldrh	r0, [r3, #4]
 8001f02:	880a      	ldrh	r2, [r1, #0]
 8001f04:	4290      	cmp	r0, r2
 8001f06:	d10a      	bne.n	8001f1e <rt_chk_robin+0x3a>
 8001f08:	2200      	movs	r2, #0
 8001f0a:	4805      	ldr	r0, [pc, #20]	; (8001f20 <rt_chk_robin+0x3c>)
 8001f0c:	601a      	str	r2, [r3, #0]
 8001f0e:	f7ff fbe5 	bl	80016dc <rt_get_first>
 8001f12:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8001f16:	4601      	mov	r1, r0
 8001f18:	4801      	ldr	r0, [pc, #4]	; (8001f20 <rt_chk_robin+0x3c>)
 8001f1a:	f7ff bbc7 	b.w	80016ac <rt_put_prio>
 8001f1e:	bd08      	pop	{r3, pc}
 8001f20:	200026f0 	.word	0x200026f0
 8001f24:	20002728 	.word	0x20002728
 8001f28:	20002784 	.word	0x20002784

08001f2c <rt_timer_insert>:
 8001f2c:	4a0b      	ldr	r2, [pc, #44]	; (8001f5c <rt_timer_insert+0x30>)
 8001f2e:	6813      	ldr	r3, [r2, #0]
 8001f30:	b530      	push	{r4, r5, lr}
 8001f32:	2400      	movs	r4, #0
 8001f34:	b943      	cbnz	r3, 8001f48 <rt_timer_insert+0x1c>
 8001f36:	6003      	str	r3, [r0, #0]
 8001f38:	6081      	str	r1, [r0, #8]
 8001f3a:	b113      	cbz	r3, 8001f42 <rt_timer_insert+0x16>
 8001f3c:	689d      	ldr	r5, [r3, #8]
 8001f3e:	1a69      	subs	r1, r5, r1
 8001f40:	6099      	str	r1, [r3, #8]
 8001f42:	b144      	cbz	r4, 8001f56 <rt_timer_insert+0x2a>
 8001f44:	6020      	str	r0, [r4, #0]
 8001f46:	bd30      	pop	{r4, r5, pc}
 8001f48:	689d      	ldr	r5, [r3, #8]
 8001f4a:	42a9      	cmp	r1, r5
 8001f4c:	d3f3      	bcc.n	8001f36 <rt_timer_insert+0xa>
 8001f4e:	461c      	mov	r4, r3
 8001f50:	1b49      	subs	r1, r1, r5
 8001f52:	681b      	ldr	r3, [r3, #0]
 8001f54:	e7ee      	b.n	8001f34 <rt_timer_insert+0x8>
 8001f56:	6010      	str	r0, [r2, #0]
 8001f58:	bd30      	pop	{r4, r5, pc}
 8001f5a:	bf00      	nop
 8001f5c:	20002738 	.word	0x20002738

08001f60 <rt_ms2tick>:
 8001f60:	b1c0      	cbz	r0, 8001f94 <rt_ms2tick+0x34>
 8001f62:	1c43      	adds	r3, r0, #1
 8001f64:	d011      	beq.n	8001f8a <rt_ms2tick+0x2a>
 8001f66:	4b0c      	ldr	r3, [pc, #48]	; (8001f98 <rt_ms2tick+0x38>)
 8001f68:	4298      	cmp	r0, r3
 8001f6a:	d811      	bhi.n	8001f90 <rt_ms2tick+0x30>
 8001f6c:	4b0b      	ldr	r3, [pc, #44]	; (8001f9c <rt_ms2tick+0x3c>)
 8001f6e:	681b      	ldr	r3, [r3, #0]
 8001f70:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8001f74:	1e5a      	subs	r2, r3, #1
 8001f76:	fb01 2000 	mla	r0, r1, r0, r2
 8001f7a:	fbb0 f3f3 	udiv	r3, r0, r3
 8001f7e:	f64f 70fe 	movw	r0, #65534	; 0xfffe
 8001f82:	4283      	cmp	r3, r0
 8001f84:	d806      	bhi.n	8001f94 <rt_ms2tick+0x34>
 8001f86:	b298      	uxth	r0, r3
 8001f88:	4770      	bx	lr
 8001f8a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8001f8e:	4770      	bx	lr
 8001f90:	f64f 70fe 	movw	r0, #65534	; 0xfffe
 8001f94:	4770      	bx	lr
 8001f96:	bf00      	nop
 8001f98:	003d0900 	.word	0x003d0900
 8001f9c:	08005bec 	.word	0x08005bec

08001fa0 <rt_tid2ptcb>:
 8001fa0:	b138      	cbz	r0, 8001fb2 <rt_tid2ptcb+0x12>
 8001fa2:	0783      	lsls	r3, r0, #30
 8001fa4:	d104      	bne.n	8001fb0 <rt_tid2ptcb+0x10>
 8001fa6:	7803      	ldrb	r3, [r0, #0]
 8001fa8:	2b00      	cmp	r3, #0
 8001faa:	bf18      	it	ne
 8001fac:	2000      	movne	r0, #0
 8001fae:	4770      	bx	lr
 8001fb0:	2000      	movs	r0, #0
 8001fb2:	4770      	bx	lr

08001fb4 <svcKernelStart>:
 8001fb4:	b5b0      	push	{r4, r5, r7, lr}
 8001fb6:	4d0e      	ldr	r5, [pc, #56]	; (8001ff0 <svcKernelStart+0x3c>)
 8001fb8:	7828      	ldrb	r0, [r5, #0]
 8001fba:	af00      	add	r7, sp, #0
 8001fbc:	b9a8      	cbnz	r0, 8001fea <svcKernelStart+0x36>
 8001fbe:	4c0d      	ldr	r4, [pc, #52]	; (8001ff4 <svcKernelStart+0x40>)
 8001fc0:	6823      	ldr	r3, [r4, #0]
 8001fc2:	f893 1024 	ldrb.w	r1, [r3, #36]	; 0x24
 8001fc6:	f000 fb51 	bl	800266c <rt_tsk_prio>
 8001fca:	6823      	ldr	r3, [r4, #0]
 8001fcc:	78da      	ldrb	r2, [r3, #3]
 8001fce:	2aff      	cmp	r2, #255	; 0xff
 8001fd0:	d103      	bne.n	8001fda <svcKernelStart+0x26>
 8001fd2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8001fd4:	3220      	adds	r2, #32
 8001fd6:	f382 8809 	msr	PSP, r2
 8001fda:	6862      	ldr	r2, [r4, #4]
 8001fdc:	b90a      	cbnz	r2, 8001fe2 <svcKernelStart+0x2e>
 8001fde:	e884 000c 	stmia.w	r4, {r2, r3}
 8001fe2:	f000 fcfb 	bl	80029dc <rt_sys_start>
 8001fe6:	2301      	movs	r3, #1
 8001fe8:	702b      	strb	r3, [r5, #0]
 8001fea:	2000      	movs	r0, #0
 8001fec:	bdb0      	pop	{r4, r5, r7, pc}
 8001fee:	bf00      	nop
 8001ff0:	20002735 	.word	0x20002735
 8001ff4:	2000273c 	.word	0x2000273c

08001ff8 <svcKernelRunning>:
 8001ff8:	4b01      	ldr	r3, [pc, #4]	; (8002000 <svcKernelRunning+0x8>)
 8001ffa:	7818      	ldrb	r0, [r3, #0]
 8001ffc:	4770      	bx	lr
 8001ffe:	bf00      	nop
 8002000:	20002735 	.word	0x20002735

08002004 <osKernelRunning>:
 8002004:	b510      	push	{r4, lr}
 8002006:	f3ef 8410 	mrs	r4, PRIMASK
 800200a:	b934      	cbnz	r4, 800201a <osKernelRunning+0x16>
 800200c:	f3ef 8405 	mrs	r4, IPSR
 8002010:	b91c      	cbnz	r4, 800201a <osKernelRunning+0x16>
 8002012:	f3ef 8414 	mrs	r4, CONTROL
 8002016:	07e4      	lsls	r4, r4, #31
 8002018:	d402      	bmi.n	8002020 <osKernelRunning+0x1c>
 800201a:	4b03      	ldr	r3, [pc, #12]	; (8002028 <osKernelRunning+0x24>)
 800201c:	7818      	ldrb	r0, [r3, #0]
 800201e:	bd10      	pop	{r4, pc}
 8002020:	f8df c008 	ldr.w	r12, [pc, #8]	; 800202c <osKernelRunning+0x28>
 8002024:	df00      	svc	0
 8002026:	bd10      	pop	{r4, pc}
 8002028:	20002735 	.word	0x20002735
 800202c:	08001ff9 	.word	0x08001ff9

08002030 <osKernelStart>:
 8002030:	b590      	push	{r4, r7, lr}
 8002032:	b089      	sub	sp, #36	; 0x24
 8002034:	af00      	add	r7, sp, #0
 8002036:	f3ef 8310 	mrs	r3, PRIMASK
 800203a:	2b00      	cmp	r3, #0
 800203c:	d137      	bne.n	80020ae <osKernelStart+0x7e>
 800203e:	f3ef 8305 	mrs	r3, IPSR
 8002042:	2b00      	cmp	r3, #0
 8002044:	d133      	bne.n	80020ae <osKernelStart+0x7e>
 8002046:	f7ff ffdd 	bl	8002004 <osKernelRunning>
 800204a:	b928      	cbnz	r0, 8002058 <osKernelStart+0x28>
 800204c:	4c19      	ldr	r4, [pc, #100]	; (80020b4 <osKernelStart+0x84>)
 800204e:	6824      	ldr	r4, [r4, #0]
 8002050:	b114      	cbz	r4, 8002058 <osKernelStart+0x28>
 8002052:	6864      	ldr	r4, [r4, #4]
 8002054:	b104      	cbz	r4, 8002058 <osKernelStart+0x28>
 8002056:	47a0      	blx	r4
 8002058:	f3ef 8414 	mrs	r4, CONTROL
 800205c:	f004 0403 	and.w	r4, r4, #3
 8002060:	2c02      	cmp	r4, #2
 8002062:	d018      	beq.n	8002096 <osKernelStart+0x66>
 8002064:	2c03      	cmp	r4, #3
 8002066:	d01c      	beq.n	80020a2 <osKernelStart+0x72>
 8002068:	2c01      	cmp	r4, #1
 800206a:	d01e      	beq.n	80020aa <osKernelStart+0x7a>
 800206c:	f107 0420 	add.w	r4, r7, #32
 8002070:	f384 8809 	msr	PSP, r4
 8002074:	4c10      	ldr	r4, [pc, #64]	; (80020b8 <osKernelStart+0x88>)
 8002076:	7824      	ldrb	r4, [r4, #0]
 8002078:	07e4      	lsls	r4, r4, #31
 800207a:	d510      	bpl.n	800209e <osKernelStart+0x6e>
 800207c:	2402      	movs	r4, #2
 800207e:	f384 8814 	msr	CONTROL, r4
 8002082:	f3bf 8f4f 	dsb	sy
 8002086:	f3bf 8f6f 	isb	sy
 800208a:	f8df c030 	ldr.w	r12, [pc, #48]	; 80020bc <osKernelStart+0x8c>
 800208e:	df00      	svc	0
 8002090:	3724      	adds	r7, #36	; 0x24
 8002092:	46bd      	mov	sp, r7
 8002094:	bd90      	pop	{r4, r7, pc}
 8002096:	4c08      	ldr	r4, [pc, #32]	; (80020b8 <osKernelStart+0x88>)
 8002098:	7824      	ldrb	r4, [r4, #0]
 800209a:	07e4      	lsls	r4, r4, #31
 800209c:	d4f5      	bmi.n	800208a <osKernelStart+0x5a>
 800209e:	2403      	movs	r4, #3
 80020a0:	e7ed      	b.n	800207e <osKernelStart+0x4e>
 80020a2:	4c05      	ldr	r4, [pc, #20]	; (80020b8 <osKernelStart+0x88>)
 80020a4:	7824      	ldrb	r4, [r4, #0]
 80020a6:	07e4      	lsls	r4, r4, #31
 80020a8:	d5ef      	bpl.n	800208a <osKernelStart+0x5a>
 80020aa:	20ff      	movs	r0, #255	; 0xff
 80020ac:	e7f0      	b.n	8002090 <osKernelStart+0x60>
 80020ae:	2082      	movs	r0, #130	; 0x82
 80020b0:	e7ee      	b.n	8002090 <osKernelStart+0x60>
 80020b2:	bf00      	nop
 80020b4:	20002724 	.word	0x20002724
 80020b8:	08005c1a 	.word	0x08005c1a
 80020bc:	08001fb5 	.word	0x08001fb5

080020c0 <svcThreadCreate>:
 80020c0:	b570      	push	{r4, r5, r6, lr}
 80020c2:	460b      	mov	r3, r1
 80020c4:	4616      	mov	r6, r2
 80020c6:	4602      	mov	r2, r0
 80020c8:	b910      	cbnz	r0, 80020d0 <svcThreadCreate+0x10>
 80020ca:	2400      	movs	r4, #0
 80020cc:	4620      	mov	r0, r4
 80020ce:	bd70      	pop	{r4, r5, r6, pc}
 80020d0:	6800      	ldr	r0, [r0, #0]
 80020d2:	2800      	cmp	r0, #0
 80020d4:	d0f9      	beq.n	80020ca <svcThreadCreate+0xa>
 80020d6:	f9b2 4004 	ldrsh.w	r4, [r2, #4]
 80020da:	1ce5      	adds	r5, r4, #3
 80020dc:	b2ad      	uxth	r5, r5
 80020de:	2d06      	cmp	r5, #6
 80020e0:	d8f3      	bhi.n	80020ca <svcThreadCreate+0xa>
 80020e2:	68d1      	ldr	r1, [r2, #12]
 80020e4:	b1c1      	cbz	r1, 8002118 <svcThreadCreate+0x58>
 80020e6:	6912      	ldr	r2, [r2, #16]
 80020e8:	3404      	adds	r4, #4
 80020ea:	ea44 2101 	orr.w	r1, r4, r1, lsl #8
 80020ee:	f000 fafb 	bl	80026e8 <rt_tsk_create>
 80020f2:	2800      	cmp	r0, #0
 80020f4:	d0e9      	beq.n	80020ca <svcThreadCreate+0xa>
 80020f6:	4b0a      	ldr	r3, [pc, #40]	; (8002120 <svcThreadCreate+0x60>)
 80020f8:	4a0a      	ldr	r2, [pc, #40]	; (8002124 <svcThreadCreate+0x64>)
 80020fa:	3801      	subs	r0, #1
 80020fc:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 8002100:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8002102:	635a      	str	r2, [r3, #52]	; 0x34
 8002104:	4b08      	ldr	r3, [pc, #32]	; (8002128 <svcThreadCreate+0x68>)
 8002106:	681b      	ldr	r3, [r3, #0]
 8002108:	b143      	cbz	r3, 800211c <svcThreadCreate+0x5c>
 800210a:	689b      	ldr	r3, [r3, #8]
 800210c:	b133      	cbz	r3, 800211c <svcThreadCreate+0x5c>
 800210e:	4631      	mov	r1, r6
 8002110:	78e0      	ldrb	r0, [r4, #3]
 8002112:	4798      	blx	r3
 8002114:	63e0      	str	r0, [r4, #60]	; 0x3c
 8002116:	e7d9      	b.n	80020cc <svcThreadCreate+0xc>
 8002118:	460a      	mov	r2, r1
 800211a:	e7e5      	b.n	80020e8 <svcThreadCreate+0x28>
 800211c:	63e6      	str	r6, [r4, #60]	; 0x3c
 800211e:	e7d5      	b.n	80020cc <svcThreadCreate+0xc>
 8002120:	20001f38 	.word	0x20001f38
 8002124:	080022ad 	.word	0x080022ad
 8002128:	20002724 	.word	0x20002724

0800212c <svcThreadGetId>:
 800212c:	b508      	push	{r3, lr}
 800212e:	f000 fa95 	bl	800265c <rt_tsk_self>
 8002132:	b118      	cbz	r0, 800213c <svcThreadGetId+0x10>
 8002134:	3801      	subs	r0, #1
 8002136:	4b02      	ldr	r3, [pc, #8]	; (8002140 <svcThreadGetId+0x14>)
 8002138:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800213c:	bd08      	pop	{r3, pc}
 800213e:	bf00      	nop
 8002140:	20001f38 	.word	0x20001f38

08002144 <svcThreadTerminate>:
 8002144:	b510      	push	{r4, lr}
 8002146:	f7ff ff2b 	bl	8001fa0 <rt_tid2ptcb>
 800214a:	4604      	mov	r4, r0
 800214c:	b170      	cbz	r0, 800216c <svcThreadTerminate+0x28>
 800214e:	4b08      	ldr	r3, [pc, #32]	; (8002170 <svcThreadTerminate+0x2c>)
 8002150:	681b      	ldr	r3, [r3, #0]
 8002152:	b11b      	cbz	r3, 800215c <svcThreadTerminate+0x18>
 8002154:	68db      	ldr	r3, [r3, #12]
 8002156:	b10b      	cbz	r3, 800215c <svcThreadTerminate+0x18>
 8002158:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800215a:	4798      	blx	r3
 800215c:	78e0      	ldrb	r0, [r4, #3]
 800215e:	f000 fb19 	bl	8002794 <rt_tsk_delete>
 8002162:	28ff      	cmp	r0, #255	; 0xff
 8002164:	bf0c      	ite	eq
 8002166:	2081      	moveq	r0, #129	; 0x81
 8002168:	2000      	movne	r0, #0
 800216a:	bd10      	pop	{r4, pc}
 800216c:	2080      	movs	r0, #128	; 0x80
 800216e:	bd10      	pop	{r4, pc}
 8002170:	20002724 	.word	0x20002724

08002174 <svcDelay>:
 8002174:	b508      	push	{r3, lr}
 8002176:	b128      	cbz	r0, 8002184 <svcDelay+0x10>
 8002178:	f7ff fef2 	bl	8001f60 <rt_ms2tick>
 800217c:	f000 fc74 	bl	8002a68 <rt_dly_wait>
 8002180:	2040      	movs	r0, #64	; 0x40
 8002182:	bd08      	pop	{r3, pc}
 8002184:	bd08      	pop	{r3, pc}
	...

08002188 <osDelay>:
 8002188:	b510      	push	{r4, lr}
 800218a:	f3ef 8410 	mrs	r4, PRIMASK
 800218e:	b934      	cbnz	r4, 800219e <osDelay+0x16>
 8002190:	f3ef 8405 	mrs	r4, IPSR
 8002194:	b91c      	cbnz	r4, 800219e <osDelay+0x16>
 8002196:	f8df c00c 	ldr.w	r12, [pc, #12]	; 80021a4 <osDelay+0x1c>
 800219a:	df00      	svc	0
 800219c:	bd10      	pop	{r4, pc}
 800219e:	2082      	movs	r0, #130	; 0x82
 80021a0:	bd10      	pop	{r4, pc}
 80021a2:	0000      	.short	0x0000
 80021a4:	08002175 	.word	0x08002175

080021a8 <svcTimerCall>:
 80021a8:	0783      	lsls	r3, r0, #30
 80021aa:	d105      	bne.n	80021b8 <svcTimerCall+0x10>
 80021ac:	b138      	cbz	r0, 80021be <svcTimerCall+0x16>
 80021ae:	6943      	ldr	r3, [r0, #20]
 80021b0:	6901      	ldr	r1, [r0, #16]
 80021b2:	681b      	ldr	r3, [r3, #0]
 80021b4:	4618      	mov	r0, r3
 80021b6:	4770      	bx	lr
 80021b8:	2300      	movs	r3, #0
 80021ba:	4619      	mov	r1, r3
 80021bc:	e7fa      	b.n	80021b4 <svcTimerCall+0xc>
 80021be:	4603      	mov	r3, r0
 80021c0:	e7fb      	b.n	80021ba <svcTimerCall+0x12>
	...

080021c4 <osTimerCall>:
 80021c4:	b510      	push	{r4, lr}
 80021c6:	4604      	mov	r4, r0
 80021c8:	4608      	mov	r0, r1
 80021ca:	f8df c00c 	ldr.w	r12, [pc, #12]	; 80021d8 <osTimerCall+0x14>
 80021ce:	df00      	svc	0
 80021d0:	e884 0003 	stmia.w	r4, {r0, r1}
 80021d4:	4620      	mov	r0, r4
 80021d6:	bd10      	pop	{r4, pc}
 80021d8:	080021a9 	.word	0x080021a9

080021dc <svcMutexCreate>:
 80021dc:	b510      	push	{r4, lr}
 80021de:	b148      	cbz	r0, 80021f4 <svcMutexCreate+0x18>
 80021e0:	6804      	ldr	r4, [r0, #0]
 80021e2:	b124      	cbz	r4, 80021ee <svcMutexCreate+0x12>
 80021e4:	7823      	ldrb	r3, [r4, #0]
 80021e6:	b923      	cbnz	r3, 80021f2 <svcMutexCreate+0x16>
 80021e8:	4620      	mov	r0, r4
 80021ea:	f7ff fb57 	bl	800189c <rt_mut_init>
 80021ee:	4620      	mov	r0, r4
 80021f0:	bd10      	pop	{r4, pc}
 80021f2:	2000      	movs	r0, #0
 80021f4:	bd10      	pop	{r4, pc}

080021f6 <svcMutexWait>:
 80021f6:	b570      	push	{r4, r5, r6, lr}
 80021f8:	f010 0403 	ands.w	r4, r0, #3
 80021fc:	4605      	mov	r5, r0
 80021fe:	460e      	mov	r6, r1
 8002200:	d111      	bne.n	8002226 <svcMutexWait+0x30>
 8002202:	b180      	cbz	r0, 8002226 <svcMutexWait+0x30>
 8002204:	7803      	ldrb	r3, [r0, #0]
 8002206:	2b03      	cmp	r3, #3
 8002208:	d10d      	bne.n	8002226 <svcMutexWait+0x30>
 800220a:	4608      	mov	r0, r1
 800220c:	f7ff fea8 	bl	8001f60 <rt_ms2tick>
 8002210:	4601      	mov	r1, r0
 8002212:	4628      	mov	r0, r5
 8002214:	f7ff fbba 	bl	800198c <rt_mut_wait>
 8002218:	2801      	cmp	r0, #1
 800221a:	d106      	bne.n	800222a <svcMutexWait+0x34>
 800221c:	2e00      	cmp	r6, #0
 800221e:	bf14      	ite	ne
 8002220:	20c1      	movne	r0, #193	; 0xc1
 8002222:	2081      	moveq	r0, #129	; 0x81
 8002224:	bd70      	pop	{r4, r5, r6, pc}
 8002226:	2080      	movs	r0, #128	; 0x80
 8002228:	bd70      	pop	{r4, r5, r6, pc}
 800222a:	4620      	mov	r0, r4
 800222c:	bd70      	pop	{r4, r5, r6, pc}

0800222e <svcMutexRelease>:
 800222e:	0782      	lsls	r2, r0, #30
 8002230:	b508      	push	{r3, lr}
 8002232:	d10a      	bne.n	800224a <svcMutexRelease+0x1c>
 8002234:	b148      	cbz	r0, 800224a <svcMutexRelease+0x1c>
 8002236:	7803      	ldrb	r3, [r0, #0]
 8002238:	2b03      	cmp	r3, #3
 800223a:	d106      	bne.n	800224a <svcMutexRelease+0x1c>
 800223c:	f7ff fb36 	bl	80018ac <rt_mut_release>
 8002240:	28ff      	cmp	r0, #255	; 0xff
 8002242:	bf0c      	ite	eq
 8002244:	2081      	moveq	r0, #129	; 0x81
 8002246:	2000      	movne	r0, #0
 8002248:	bd08      	pop	{r3, pc}
 800224a:	2080      	movs	r0, #128	; 0x80
 800224c:	bd08      	pop	{r3, pc}
	...

08002250 <osMutexCreate>:
 8002250:	b570      	push	{r4, r5, r6, lr}
 8002252:	4605      	mov	r5, r0
 8002254:	f3ef 8410 	mrs	r4, PRIMASK
 8002258:	b994      	cbnz	r4, 8002280 <osMutexCreate+0x30>
 800225a:	f3ef 8605 	mrs	r6, IPSR
 800225e:	b97e      	cbnz	r6, 8002280 <osMutexCreate+0x30>
 8002260:	f3ef 8414 	mrs	r4, CONTROL
 8002264:	07e4      	lsls	r4, r4, #31
 8002266:	d406      	bmi.n	8002276 <osMutexCreate+0x26>
 8002268:	4c06      	ldr	r4, [pc, #24]	; (8002284 <osMutexCreate+0x34>)
 800226a:	7824      	ldrb	r4, [r4, #0]
 800226c:	b91c      	cbnz	r4, 8002276 <osMutexCreate+0x26>
 800226e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8002272:	f7ff bfb3 	b.w	80021dc <svcMutexCreate>
 8002276:	4628      	mov	r0, r5
 8002278:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002288 <osMutexCreate+0x38>
 800227c:	df00      	svc	0
 800227e:	bd70      	pop	{r4, r5, r6, pc}
 8002280:	2000      	movs	r0, #0
 8002282:	bd70      	pop	{r4, r5, r6, pc}
 8002284:	20002735 	.word	0x20002735
 8002288:	080021dd 	.word	0x080021dd

0800228c <osMutexWait>:
 800228c:	b510      	push	{r4, lr}
 800228e:	f3ef 8410 	mrs	r4, PRIMASK
 8002292:	b934      	cbnz	r4, 80022a2 <osMutexWait+0x16>
 8002294:	f3ef 8405 	mrs	r4, IPSR
 8002298:	b91c      	cbnz	r4, 80022a2 <osMutexWait+0x16>
 800229a:	f8df c00c 	ldr.w	r12, [pc, #12]	; 80022a8 <osMutexWait+0x1c>
 800229e:	df00      	svc	0
 80022a0:	bd10      	pop	{r4, pc}
 80022a2:	2082      	movs	r0, #130	; 0x82
 80022a4:	bd10      	pop	{r4, pc}
 80022a6:	0000      	.short	0x0000
 80022a8:	080021f7 	.word	0x080021f7

080022ac <osThreadExit>:
 80022ac:	4808      	ldr	r0, [pc, #32]	; (80022d0 <osThreadExit+0x24>)
 80022ae:	b508      	push	{r3, lr}
 80022b0:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 80022b4:	6800      	ldr	r0, [r0, #0]
 80022b6:	f7ff ffe9 	bl	800228c <osMutexWait>
 80022ba:	f8df c018 	ldr.w	r12, [pc, #24]	; 80022d4 <osThreadExit+0x28>
 80022be:	df00      	svc	0
 80022c0:	4604      	mov	r4, r0
 80022c2:	f7ff f9b3 	bl	800162c <sysThreadTerminate>
 80022c6:	4620      	mov	r0, r4
 80022c8:	f8df c00c 	ldr.w	r12, [pc, #12]	; 80022d8 <osThreadExit+0x2c>
 80022cc:	df00      	svc	0
 80022ce:	e7fe      	b.n	80022ce <osThreadExit+0x22>
 80022d0:	20002730 	.word	0x20002730
 80022d4:	0800212d 	.word	0x0800212d
 80022d8:	08002145 	.word	0x08002145

080022dc <osMutexRelease>:
 80022dc:	b510      	push	{r4, lr}
 80022de:	f3ef 8410 	mrs	r4, PRIMASK
 80022e2:	b934      	cbnz	r4, 80022f2 <osMutexRelease+0x16>
 80022e4:	f3ef 8405 	mrs	r4, IPSR
 80022e8:	b91c      	cbnz	r4, 80022f2 <osMutexRelease+0x16>
 80022ea:	f8df c00c 	ldr.w	r12, [pc, #12]	; 80022f8 <osMutexRelease+0x1c>
 80022ee:	df00      	svc	0
 80022f0:	bd10      	pop	{r4, pc}
 80022f2:	2082      	movs	r0, #130	; 0x82
 80022f4:	bd10      	pop	{r4, pc}
 80022f6:	0000      	.short	0x0000
 80022f8:	0800222f 	.word	0x0800222f

080022fc <osThreadContextCreate>:
 80022fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002300:	4680      	mov	r8, r0
 8002302:	460f      	mov	r7, r1
 8002304:	4616      	mov	r6, r2
 8002306:	f3ef 8410 	mrs	r4, PRIMASK
 800230a:	bb04      	cbnz	r4, 800234e <osThreadContextCreate+0x52>
 800230c:	f3ef 8305 	mrs	r3, IPSR
 8002310:	b9d3      	cbnz	r3, 8002348 <osThreadContextCreate+0x4c>
 8002312:	f3ef 8314 	mrs	r3, CONTROL
 8002316:	07db      	lsls	r3, r3, #31
 8002318:	d406      	bmi.n	8002328 <osThreadContextCreate+0x2c>
 800231a:	4b0e      	ldr	r3, [pc, #56]	; (8002354 <osThreadContextCreate+0x58>)
 800231c:	781b      	ldrb	r3, [r3, #0]
 800231e:	b91b      	cbnz	r3, 8002328 <osThreadContextCreate+0x2c>
 8002320:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002324:	f7ff becc 	b.w	80020c0 <svcThreadCreate>
 8002328:	4d0b      	ldr	r5, [pc, #44]	; (8002358 <osThreadContextCreate+0x5c>)
 800232a:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 800232e:	6828      	ldr	r0, [r5, #0]
 8002330:	f7ff ffac 	bl	800228c <osMutexWait>
 8002334:	4640      	mov	r0, r8
 8002336:	4639      	mov	r1, r7
 8002338:	4632      	mov	r2, r6
 800233a:	f8df c020 	ldr.w	r12, [pc, #32]	; 800235c <osThreadContextCreate+0x60>
 800233e:	df00      	svc	0
 8002340:	4604      	mov	r4, r0
 8002342:	6828      	ldr	r0, [r5, #0]
 8002344:	f7ff ffca 	bl	80022dc <osMutexRelease>
 8002348:	4620      	mov	r0, r4
 800234a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800234e:	2400      	movs	r4, #0
 8002350:	e7fa      	b.n	8002348 <osThreadContextCreate+0x4c>
 8002352:	bf00      	nop
 8002354:	20002735 	.word	0x20002735
 8002358:	20002730 	.word	0x20002730
 800235c:	080020c1 	.word	0x080020c1

08002360 <osThreadCreate>:
 8002360:	2200      	movs	r2, #0
 8002362:	f7ff bfcb 	b.w	80022fc <osThreadContextCreate>

08002366 <svcMessageCreate>:
 8002366:	b510      	push	{r4, lr}
 8002368:	4604      	mov	r4, r0
 800236a:	b160      	cbz	r0, 8002386 <svcMessageCreate+0x20>
 800236c:	6801      	ldr	r1, [r0, #0]
 800236e:	b151      	cbz	r1, 8002386 <svcMessageCreate+0x20>
 8002370:	6840      	ldr	r0, [r0, #4]
 8002372:	b148      	cbz	r0, 8002388 <svcMessageCreate+0x22>
 8002374:	7803      	ldrb	r3, [r0, #0]
 8002376:	b933      	cbnz	r3, 8002386 <svcMessageCreate+0x20>
 8002378:	3104      	adds	r1, #4
 800237a:	0089      	lsls	r1, r1, #2
 800237c:	b289      	uxth	r1, r1
 800237e:	f7ff fc71 	bl	8001c64 <rt_mbx_init>
 8002382:	6860      	ldr	r0, [r4, #4]
 8002384:	bd10      	pop	{r4, pc}
 8002386:	2000      	movs	r0, #0
 8002388:	bd10      	pop	{r4, pc}
	...

0800238c <svcKernelInitialize>:
 800238c:	b538      	push	{r3, r4, r5, lr}
 800238e:	4c11      	ldr	r4, [pc, #68]	; (80023d4 <svcKernelInitialize+0x48>)
 8002390:	7823      	ldrb	r3, [r4, #0]
 8002392:	b90b      	cbnz	r3, 8002398 <svcKernelInitialize+0xc>
 8002394:	f000 faa8 	bl	80028e8 <rt_sys_init>
 8002398:	4b0f      	ldr	r3, [pc, #60]	; (80023d8 <svcKernelInitialize+0x4c>)
 800239a:	7825      	ldrb	r5, [r4, #0]
 800239c:	681b      	ldr	r3, [r3, #0]
 800239e:	22ff      	movs	r2, #255	; 0xff
 80023a0:	709a      	strb	r2, [r3, #2]
 80023a2:	b98d      	cbnz	r5, 80023c8 <svcKernelInitialize+0x3c>
 80023a4:	4629      	mov	r1, r5
 80023a6:	480d      	ldr	r0, [pc, #52]	; (80023dc <svcKernelInitialize+0x50>)
 80023a8:	f7ff ffdd 	bl	8002366 <svcMessageCreate>
 80023ac:	4b0c      	ldr	r3, [pc, #48]	; (80023e0 <svcKernelInitialize+0x54>)
 80023ae:	462a      	mov	r2, r5
 80023b0:	6018      	str	r0, [r3, #0]
 80023b2:	4629      	mov	r1, r5
 80023b4:	480b      	ldr	r0, [pc, #44]	; (80023e4 <svcKernelInitialize+0x58>)
 80023b6:	f7ff fe83 	bl	80020c0 <svcThreadCreate>
 80023ba:	4b0b      	ldr	r3, [pc, #44]	; (80023e8 <svcKernelInitialize+0x5c>)
 80023bc:	6018      	str	r0, [r3, #0]
 80023be:	480b      	ldr	r0, [pc, #44]	; (80023ec <svcKernelInitialize+0x60>)
 80023c0:	f7ff ff46 	bl	8002250 <osMutexCreate>
 80023c4:	4b0a      	ldr	r3, [pc, #40]	; (80023f0 <svcKernelInitialize+0x64>)
 80023c6:	6018      	str	r0, [r3, #0]
 80023c8:	2301      	movs	r3, #1
 80023ca:	7023      	strb	r3, [r4, #0]
 80023cc:	4b09      	ldr	r3, [pc, #36]	; (80023f4 <svcKernelInitialize+0x68>)
 80023ce:	2000      	movs	r0, #0
 80023d0:	7018      	strb	r0, [r3, #0]
 80023d2:	bd38      	pop	{r3, r4, r5, pc}
 80023d4:	20002734 	.word	0x20002734
 80023d8:	2000273c 	.word	0x2000273c
 80023dc:	08005c20 	.word	0x08005c20
 80023e0:	20001ff8 	.word	0x20001ff8
 80023e4:	08005c3c 	.word	0x08005c3c
 80023e8:	200026ec 	.word	0x200026ec
 80023ec:	08005c54 	.word	0x08005c54
 80023f0:	20002730 	.word	0x20002730
 80023f4:	20002735 	.word	0x20002735

080023f8 <osKernelInitialize>:
 80023f8:	b510      	push	{r4, lr}
 80023fa:	f3ef 8410 	mrs	r4, PRIMASK
 80023fe:	b974      	cbnz	r4, 800241e <osKernelInitialize+0x26>
 8002400:	f3ef 8405 	mrs	r4, IPSR
 8002404:	b95c      	cbnz	r4, 800241e <osKernelInitialize+0x26>
 8002406:	f3ef 8414 	mrs	r4, CONTROL
 800240a:	07e4      	lsls	r4, r4, #31
 800240c:	d403      	bmi.n	8002416 <osKernelInitialize+0x1e>
 800240e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002412:	f7ff bfbb 	b.w	800238c <svcKernelInitialize>
 8002416:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002424 <osKernelInitialize+0x2c>
 800241a:	df00      	svc	0
 800241c:	bd10      	pop	{r4, pc}
 800241e:	2082      	movs	r0, #130	; 0x82
 8002420:	bd10      	pop	{r4, pc}
 8002422:	0000      	.short	0x0000
 8002424:	0800238d 	.word	0x0800238d

08002428 <svcMessageGet>:
 8002428:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800242c:	460c      	mov	r4, r1
 800242e:	4680      	mov	r8, r0
 8002430:	b318      	cbz	r0, 800247a <svcMessageGet+0x52>
 8002432:	7803      	ldrb	r3, [r0, #0]
 8002434:	2b01      	cmp	r3, #1
 8002436:	d125      	bne.n	8002484 <svcMessageGet+0x5c>
 8002438:	4608      	mov	r0, r1
 800243a:	f7ff fd91 	bl	8001f60 <rt_ms2tick>
 800243e:	a902      	add	r1, sp, #8
 8002440:	4602      	mov	r2, r0
 8002442:	4640      	mov	r0, r8
 8002444:	f7ff fc1c 	bl	8001c80 <rt_mbx_wait>
 8002448:	2801      	cmp	r0, #1
 800244a:	d111      	bne.n	8002470 <svcMessageGet+0x48>
 800244c:	2000      	movs	r0, #0
 800244e:	2c00      	cmp	r4, #0
 8002450:	4602      	mov	r2, r0
 8002452:	4603      	mov	r3, r0
 8002454:	bf18      	it	ne
 8002456:	2040      	movne	r0, #64	; 0x40
 8002458:	9902      	ldr	r1, [sp, #8]
 800245a:	4604      	mov	r4, r0
 800245c:	460d      	mov	r5, r1
 800245e:	4616      	mov	r6, r2
 8002460:	461f      	mov	r7, r3
 8002462:	4620      	mov	r0, r4
 8002464:	4629      	mov	r1, r5
 8002466:	4632      	mov	r2, r6
 8002468:	463b      	mov	r3, r7
 800246a:	b004      	add	sp, #16
 800246c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002470:	2000      	movs	r0, #0
 8002472:	4602      	mov	r2, r0
 8002474:	4603      	mov	r3, r0
 8002476:	2010      	movs	r0, #16
 8002478:	e7ee      	b.n	8002458 <svcMessageGet+0x30>
 800247a:	2480      	movs	r4, #128	; 0x80
 800247c:	4605      	mov	r5, r0
 800247e:	4606      	mov	r6, r0
 8002480:	4607      	mov	r7, r0
 8002482:	e7ee      	b.n	8002462 <svcMessageGet+0x3a>
 8002484:	2500      	movs	r5, #0
 8002486:	2480      	movs	r4, #128	; 0x80
 8002488:	462e      	mov	r6, r5
 800248a:	462f      	mov	r7, r5
 800248c:	e7e9      	b.n	8002462 <svcMessageGet+0x3a>

0800248e <isrMessagePut>:
 800248e:	b570      	push	{r4, r5, r6, lr}
 8002490:	460e      	mov	r6, r1
 8002492:	4614      	mov	r4, r2
 8002494:	4605      	mov	r5, r0
 8002496:	b160      	cbz	r0, 80024b2 <isrMessagePut+0x24>
 8002498:	b95a      	cbnz	r2, 80024b2 <isrMessagePut+0x24>
 800249a:	7803      	ldrb	r3, [r0, #0]
 800249c:	2b01      	cmp	r3, #1
 800249e:	d108      	bne.n	80024b2 <isrMessagePut+0x24>
 80024a0:	f7ff fc44 	bl	8001d2c <rt_mbx_check>
 80024a4:	b138      	cbz	r0, 80024b6 <isrMessagePut+0x28>
 80024a6:	4628      	mov	r0, r5
 80024a8:	4631      	mov	r1, r6
 80024aa:	f7ff fc43 	bl	8001d34 <isr_mbx_send>
 80024ae:	4620      	mov	r0, r4
 80024b0:	bd70      	pop	{r4, r5, r6, pc}
 80024b2:	2080      	movs	r0, #128	; 0x80
 80024b4:	bd70      	pop	{r4, r5, r6, pc}
 80024b6:	2081      	movs	r0, #129	; 0x81
 80024b8:	bd70      	pop	{r4, r5, r6, pc}
	...

080024bc <sysTimerTick>:
 80024bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80024be:	4e11      	ldr	r6, [pc, #68]	; (8002504 <sysTimerTick+0x48>)
 80024c0:	6834      	ldr	r4, [r6, #0]
 80024c2:	b12c      	cbz	r4, 80024d0 <sysTimerTick+0x14>
 80024c4:	68a3      	ldr	r3, [r4, #8]
 80024c6:	4f10      	ldr	r7, [pc, #64]	; (8002508 <sysTimerTick+0x4c>)
 80024c8:	3b01      	subs	r3, #1
 80024ca:	60a3      	str	r3, [r4, #8]
 80024cc:	68a2      	ldr	r2, [r4, #8]
 80024ce:	b102      	cbz	r2, 80024d2 <sysTimerTick+0x16>
 80024d0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80024d2:	6825      	ldr	r5, [r4, #0]
 80024d4:	6838      	ldr	r0, [r7, #0]
 80024d6:	6035      	str	r5, [r6, #0]
 80024d8:	4621      	mov	r1, r4
 80024da:	f7ff ffd8 	bl	800248e <isrMessagePut>
 80024de:	b110      	cbz	r0, 80024e6 <sysTimerTick+0x2a>
 80024e0:	2004      	movs	r0, #4
 80024e2:	f7ff f895 	bl	8001610 <os_error>
 80024e6:	7963      	ldrb	r3, [r4, #5]
 80024e8:	2b01      	cmp	r3, #1
 80024ea:	d107      	bne.n	80024fc <sysTimerTick+0x40>
 80024ec:	68e1      	ldr	r1, [r4, #12]
 80024ee:	4620      	mov	r0, r4
 80024f0:	f7ff fd1c 	bl	8001f2c <rt_timer_insert>
 80024f4:	2d00      	cmp	r5, #0
 80024f6:	d0eb      	beq.n	80024d0 <sysTimerTick+0x14>
 80024f8:	462c      	mov	r4, r5
 80024fa:	e7e7      	b.n	80024cc <sysTimerTick+0x10>
 80024fc:	2301      	movs	r3, #1
 80024fe:	7123      	strb	r3, [r4, #4]
 8002500:	e7f8      	b.n	80024f4 <sysTimerTick+0x38>
 8002502:	bf00      	nop
 8002504:	20002738 	.word	0x20002738
 8002508:	20001ff8 	.word	0x20001ff8

0800250c <isrMessageGet>:
 800250c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800250e:	4604      	mov	r4, r0
 8002510:	4616      	mov	r6, r2
 8002512:	4608      	mov	r0, r1
 8002514:	b101      	cbz	r1, 8002518 <isrMessageGet+0xc>
 8002516:	b122      	cbz	r2, 8002522 <isrMessageGet+0x16>
 8002518:	2380      	movs	r3, #128	; 0x80
 800251a:	6023      	str	r3, [r4, #0]
 800251c:	4620      	mov	r0, r4
 800251e:	b004      	add	sp, #16
 8002520:	bd70      	pop	{r4, r5, r6, pc}
 8002522:	780b      	ldrb	r3, [r1, #0]
 8002524:	2b01      	cmp	r3, #1
 8002526:	d1f7      	bne.n	8002518 <isrMessageGet+0xc>
 8002528:	a902      	add	r1, sp, #8
 800252a:	f7ff fc0a 	bl	8001d42 <isr_mbx_receive>
 800252e:	2804      	cmp	r0, #4
 8002530:	bf08      	it	eq
 8002532:	2310      	moveq	r3, #16
 8002534:	ad01      	add	r5, sp, #4
 8002536:	bf14      	ite	ne
 8002538:	9601      	strne	r6, [sp, #4]
 800253a:	9301      	streq	r3, [sp, #4]
 800253c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002540:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8002544:	e7ea      	b.n	800251c <isrMessageGet+0x10>
	...

08002548 <osMessageGet>:
 8002548:	b538      	push	{r3, r4, r5, lr}
 800254a:	4604      	mov	r4, r0
 800254c:	4615      	mov	r5, r2
 800254e:	f3ef 8010 	mrs	r0, PRIMASK
 8002552:	b910      	cbnz	r0, 800255a <osMessageGet+0x12>
 8002554:	f3ef 8005 	mrs	r0, IPSR
 8002558:	b128      	cbz	r0, 8002566 <osMessageGet+0x1e>
 800255a:	462a      	mov	r2, r5
 800255c:	4620      	mov	r0, r4
 800255e:	f7ff ffd5 	bl	800250c <isrMessageGet>
 8002562:	4620      	mov	r0, r4
 8002564:	bd38      	pop	{r3, r4, r5, pc}
 8002566:	4608      	mov	r0, r1
 8002568:	4611      	mov	r1, r2
 800256a:	f8df c00c 	ldr.w	r12, [pc, #12]	; 8002578 <osMessageGet+0x30>
 800256e:	df00      	svc	0
 8002570:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8002574:	e7f5      	b.n	8002562 <osMessageGet+0x1a>
 8002576:	0000      	.short	0x0000
 8002578:	08002429 	.word	0x08002429

0800257c <osTimerThread>:
 800257c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800257e:	4c0a      	ldr	r4, [pc, #40]	; (80025a8 <osTimerThread+0x2c>)
 8002580:	6821      	ldr	r1, [r4, #0]
 8002582:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8002586:	a803      	add	r0, sp, #12
 8002588:	f7ff ffde 	bl	8002548 <osMessageGet>
 800258c:	9b03      	ldr	r3, [sp, #12]
 800258e:	2b10      	cmp	r3, #16
 8002590:	d1f6      	bne.n	8002580 <osTimerThread+0x4>
 8002592:	9904      	ldr	r1, [sp, #16]
 8002594:	a801      	add	r0, sp, #4
 8002596:	f7ff fe15 	bl	80021c4 <osTimerCall>
 800259a:	9b01      	ldr	r3, [sp, #4]
 800259c:	2b00      	cmp	r3, #0
 800259e:	d0ef      	beq.n	8002580 <osTimerThread+0x4>
 80025a0:	9802      	ldr	r0, [sp, #8]
 80025a2:	4798      	blx	r3
 80025a4:	e7ec      	b.n	8002580 <osTimerThread+0x4>
 80025a6:	bf00      	nop
 80025a8:	20001ff8 	.word	0x20001ff8

080025ac <rt_switch_req>:
 80025ac:	4b05      	ldr	r3, [pc, #20]	; (80025c4 <rt_switch_req+0x18>)
 80025ae:	6058      	str	r0, [r3, #4]
 80025b0:	2302      	movs	r3, #2
 80025b2:	7043      	strb	r3, [r0, #1]
 80025b4:	4b04      	ldr	r3, [pc, #16]	; (80025c8 <rt_switch_req+0x1c>)
 80025b6:	681b      	ldr	r3, [r3, #0]
 80025b8:	b11b      	cbz	r3, 80025c2 <rt_switch_req+0x16>
 80025ba:	691b      	ldr	r3, [r3, #16]
 80025bc:	b10b      	cbz	r3, 80025c2 <rt_switch_req+0x16>
 80025be:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80025c0:	4718      	bx	r3
 80025c2:	4770      	bx	lr
 80025c4:	2000273c 	.word	0x2000273c
 80025c8:	20002724 	.word	0x20002724

080025cc <rt_dispatch.part.0>:
 80025cc:	b508      	push	{r3, lr}
 80025ce:	4803      	ldr	r0, [pc, #12]	; (80025dc <rt_dispatch.part.0+0x10>)
 80025d0:	f7ff f884 	bl	80016dc <rt_get_first>
 80025d4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80025d8:	f7ff bfe8 	b.w	80025ac <rt_switch_req>
 80025dc:	200026f0 	.word	0x200026f0

080025e0 <rt_dispatch>:
 80025e0:	b570      	push	{r4, r5, r6, lr}
 80025e2:	4604      	mov	r4, r0
 80025e4:	b918      	cbnz	r0, 80025ee <rt_dispatch+0xe>
 80025e6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80025ea:	f7ff bfef 	b.w	80025cc <rt_dispatch.part.0>
 80025ee:	4e0c      	ldr	r6, [pc, #48]	; (8002620 <rt_dispatch+0x40>)
 80025f0:	78a2      	ldrb	r2, [r4, #2]
 80025f2:	6830      	ldr	r0, [r6, #0]
 80025f4:	7883      	ldrb	r3, [r0, #2]
 80025f6:	429a      	cmp	r2, r3
 80025f8:	f04f 0501 	mov.w	r5, #1
 80025fc:	d908      	bls.n	8002610 <rt_dispatch+0x30>
 80025fe:	f7ff f87f 	bl	8001700 <rt_put_rdy_first>
 8002602:	6833      	ldr	r3, [r6, #0]
 8002604:	705d      	strb	r5, [r3, #1]
 8002606:	4620      	mov	r0, r4
 8002608:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800260c:	f7ff bfce 	b.w	80025ac <rt_switch_req>
 8002610:	7065      	strb	r5, [r4, #1]
 8002612:	4621      	mov	r1, r4
 8002614:	4803      	ldr	r0, [pc, #12]	; (8002624 <rt_dispatch+0x44>)
 8002616:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800261a:	f7ff b847 	b.w	80016ac <rt_put_prio>
 800261e:	bf00      	nop
 8002620:	2000273c 	.word	0x2000273c
 8002624:	200026f0 	.word	0x200026f0

08002628 <rt_block>:
 8002628:	b538      	push	{r3, r4, r5, lr}
 800262a:	460d      	mov	r5, r1
 800262c:	4601      	mov	r1, r0
 800262e:	b180      	cbz	r0, 8002652 <rt_block+0x2a>
 8002630:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002634:	4298      	cmp	r0, r3
 8002636:	4c07      	ldr	r4, [pc, #28]	; (8002654 <rt_block+0x2c>)
 8002638:	d002      	beq.n	8002640 <rt_block+0x18>
 800263a:	6820      	ldr	r0, [r4, #0]
 800263c:	f7ff f86a 	bl	8001714 <rt_put_dly>
 8002640:	6823      	ldr	r3, [r4, #0]
 8002642:	4805      	ldr	r0, [pc, #20]	; (8002658 <rt_block+0x30>)
 8002644:	705d      	strb	r5, [r3, #1]
 8002646:	f7ff f849 	bl	80016dc <rt_get_first>
 800264a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800264e:	f7ff bfad 	b.w	80025ac <rt_switch_req>
 8002652:	bd38      	pop	{r3, r4, r5, pc}
 8002654:	2000273c 	.word	0x2000273c
 8002658:	200026f0 	.word	0x200026f0

0800265c <rt_tsk_self>:
 800265c:	4b02      	ldr	r3, [pc, #8]	; (8002668 <rt_tsk_self+0xc>)
 800265e:	6818      	ldr	r0, [r3, #0]
 8002660:	b100      	cbz	r0, 8002664 <rt_tsk_self+0x8>
 8002662:	78c0      	ldrb	r0, [r0, #3]
 8002664:	4770      	bx	lr
 8002666:	bf00      	nop
 8002668:	2000273c 	.word	0x2000273c

0800266c <rt_tsk_prio>:
 800266c:	b510      	push	{r4, lr}
 800266e:	b9a8      	cbnz	r0, 800269c <rt_tsk_prio+0x30>
 8002670:	4b19      	ldr	r3, [pc, #100]	; (80026d8 <rt_tsk_prio+0x6c>)
 8002672:	681b      	ldr	r3, [r3, #0]
 8002674:	7099      	strb	r1, [r3, #2]
 8002676:	f883 1024 	strb.w	r1, [r3, #36]	; 0x24
 800267a:	4818      	ldr	r0, [pc, #96]	; (80026dc <rt_tsk_prio+0x70>)
 800267c:	6843      	ldr	r3, [r0, #4]
 800267e:	789b      	ldrb	r3, [r3, #2]
 8002680:	428b      	cmp	r3, r1
 8002682:	d801      	bhi.n	8002688 <rt_tsk_prio+0x1c>
 8002684:	2000      	movs	r0, #0
 8002686:	bd10      	pop	{r4, pc}
 8002688:	4c13      	ldr	r4, [pc, #76]	; (80026d8 <rt_tsk_prio+0x6c>)
 800268a:	6821      	ldr	r1, [r4, #0]
 800268c:	f7ff f80e 	bl	80016ac <rt_put_prio>
 8002690:	6823      	ldr	r3, [r4, #0]
 8002692:	2201      	movs	r2, #1
 8002694:	705a      	strb	r2, [r3, #1]
 8002696:	f7ff ff99 	bl	80025cc <rt_dispatch.part.0>
 800269a:	e7f3      	b.n	8002684 <rt_tsk_prio+0x18>
 800269c:	4b10      	ldr	r3, [pc, #64]	; (80026e0 <rt_tsk_prio+0x74>)
 800269e:	881b      	ldrh	r3, [r3, #0]
 80026a0:	4298      	cmp	r0, r3
 80026a2:	d817      	bhi.n	80026d4 <rt_tsk_prio+0x68>
 80026a4:	3801      	subs	r0, #1
 80026a6:	4b0f      	ldr	r3, [pc, #60]	; (80026e4 <rt_tsk_prio+0x78>)
 80026a8:	f853 4020 	ldr.w	r4, [r3, r0, lsl #2]
 80026ac:	b194      	cbz	r4, 80026d4 <rt_tsk_prio+0x68>
 80026ae:	4b0a      	ldr	r3, [pc, #40]	; (80026d8 <rt_tsk_prio+0x6c>)
 80026b0:	70a1      	strb	r1, [r4, #2]
 80026b2:	681b      	ldr	r3, [r3, #0]
 80026b4:	f884 1024 	strb.w	r1, [r4, #36]	; 0x24
 80026b8:	429c      	cmp	r4, r3
 80026ba:	d0de      	beq.n	800267a <rt_tsk_prio+0xe>
 80026bc:	4620      	mov	r0, r4
 80026be:	f7ff f89b 	bl	80017f8 <rt_resort_prio>
 80026c2:	7863      	ldrb	r3, [r4, #1]
 80026c4:	2b01      	cmp	r3, #1
 80026c6:	d1dd      	bne.n	8002684 <rt_tsk_prio+0x18>
 80026c8:	4804      	ldr	r0, [pc, #16]	; (80026dc <rt_tsk_prio+0x70>)
 80026ca:	f7ff f807 	bl	80016dc <rt_get_first>
 80026ce:	f7ff ff87 	bl	80025e0 <rt_dispatch>
 80026d2:	e7d7      	b.n	8002684 <rt_tsk_prio+0x18>
 80026d4:	20ff      	movs	r0, #255	; 0xff
 80026d6:	bd10      	pop	{r4, pc}
 80026d8:	2000273c 	.word	0x2000273c
 80026dc:	200026f0 	.word	0x200026f0
 80026e0:	08005c1c 	.word	0x08005c1c
 80026e4:	20001f38 	.word	0x20001f38

080026e8 <rt_tsk_create>:
 80026e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 80026ec:	f011 0fff 	tst.w	r1, #255	; 0xff
 80026f0:	460d      	mov	r5, r1
 80026f2:	4680      	mov	r8, r0
 80026f4:	4823      	ldr	r0, [pc, #140]	; (8002784 <rt_tsk_create+0x9c>)
 80026f6:	4616      	mov	r6, r2
 80026f8:	469a      	mov	r10, r3
 80026fa:	bf08      	it	eq
 80026fc:	3501      	addeq	r5, #1
 80026fe:	f7ff fa90 	bl	8001c22 <rt_alloc_box>
 8002702:	4604      	mov	r4, r0
 8002704:	b920      	cbnz	r0, 8002710 <rt_tsk_create+0x28>
 8002706:	f04f 0900 	mov.w	r9, #0
 800270a:	4648      	mov	r0, r9
 800270c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8002710:	4b1d      	ldr	r3, [pc, #116]	; (8002788 <rt_tsk_create+0xa0>)
 8002712:	6306      	str	r6, [r0, #48]	; 0x30
 8002714:	881b      	ldrh	r3, [r3, #0]
 8002716:	4e1d      	ldr	r6, [pc, #116]	; (800278c <rt_tsk_create+0xa4>)
 8002718:	0a28      	lsrs	r0, r5, #8
 800271a:	62a0      	str	r0, [r4, #40]	; 0x28
 800271c:	2100      	movs	r1, #0
 800271e:	428b      	cmp	r3, r1
 8002720:	f101 0901 	add.w	r9, r1, #1
 8002724:	d0ef      	beq.n	8002706 <rt_tsk_create+0x1e>
 8002726:	eb06 0289 	add.w	r2, r6, r9, lsl #2
 800272a:	460f      	mov	r7, r1
 800272c:	f852 2c04 	ldr.w	r2, [r2, #-4]
 8002730:	4649      	mov	r1, r9
 8002732:	2a00      	cmp	r2, #0
 8002734:	d1f3      	bne.n	800271e <rt_tsk_create+0x36>
 8002736:	b2ed      	uxtb	r5, r5
 8002738:	2301      	movs	r3, #1
 800273a:	f884 9003 	strb.w	r9, [r4, #3]
 800273e:	f8c4 a01c 	str.w	r10, [r4, #28]
 8002742:	f8c4 a038 	str.w	r10, [r4, #56]	; 0x38
 8002746:	7022      	strb	r2, [r4, #0]
 8002748:	7063      	strb	r3, [r4, #1]
 800274a:	70a5      	strb	r5, [r4, #2]
 800274c:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 8002750:	6062      	str	r2, [r4, #4]
 8002752:	60a2      	str	r2, [r4, #8]
 8002754:	60e2      	str	r2, [r4, #12]
 8002756:	6122      	str	r2, [r4, #16]
 8002758:	6222      	str	r2, [r4, #32]
 800275a:	82a2      	strh	r2, [r4, #20]
 800275c:	82e2      	strh	r2, [r4, #22]
 800275e:	8322      	strh	r2, [r4, #24]
 8002760:	8362      	strh	r2, [r4, #26]
 8002762:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 8002766:	b918      	cbnz	r0, 8002770 <rt_tsk_create+0x88>
 8002768:	4809      	ldr	r0, [pc, #36]	; (8002790 <rt_tsk_create+0xa8>)
 800276a:	f7ff fa5a 	bl	8001c22 <rt_alloc_box>
 800276e:	6320      	str	r0, [r4, #48]	; 0x30
 8002770:	4620      	mov	r0, r4
 8002772:	4641      	mov	r1, r8
 8002774:	f7ff f938 	bl	80019e8 <rt_init_stack>
 8002778:	4620      	mov	r0, r4
 800277a:	f846 4027 	str.w	r4, [r6, r7, lsl #2]
 800277e:	f7ff ff2f 	bl	80025e0 <rt_dispatch>
 8002782:	e7c2      	b.n	800270a <rt_tsk_create+0x22>
 8002784:	20002320 	.word	0x20002320
 8002788:	08005c1c 	.word	0x08005c1c
 800278c:	20001f38 	.word	0x20001f38
 8002790:	20001d28 	.word	0x20001d28

08002794 <rt_tsk_delete>:
 8002794:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, lr}
 8002798:	4d4d      	ldr	r5, [pc, #308]	; (80028d0 <rt_tsk_delete+0x13c>)
 800279a:	b118      	cbz	r0, 80027a4 <rt_tsk_delete+0x10>
 800279c:	682b      	ldr	r3, [r5, #0]
 800279e:	78db      	ldrb	r3, [r3, #3]
 80027a0:	4298      	cmp	r0, r3
 80027a2:	d141      	bne.n	8002828 <rt_tsk_delete+0x94>
 80027a4:	682c      	ldr	r4, [r5, #0]
 80027a6:	f8df 813c 	ldr.w	r8, [pc, #316]	; 80028e4 <rt_tsk_delete+0x150>
 80027aa:	2300      	movs	r3, #0
 80027ac:	7063      	strb	r3, [r4, #1]
 80027ae:	f001 fe96 	bl	80044de <rt_get_PSP>
 80027b2:	62e0      	str	r0, [r4, #44]	; 0x2c
 80027b4:	f7ff f9fe 	bl	8001bb4 <rt_stk_check>
 80027b8:	682b      	ldr	r3, [r5, #0]
 80027ba:	6a1c      	ldr	r4, [r3, #32]
 80027bc:	2701      	movs	r7, #1
 80027be:	b9a4      	cbnz	r4, 80027ea <rt_tsk_delete+0x56>
 80027c0:	682a      	ldr	r2, [r5, #0]
 80027c2:	4944      	ldr	r1, [pc, #272]	; (80028d4 <rt_tsk_delete+0x140>)
 80027c4:	78d3      	ldrb	r3, [r2, #3]
 80027c6:	4844      	ldr	r0, [pc, #272]	; (80028d8 <rt_tsk_delete+0x144>)
 80027c8:	3b01      	subs	r3, #1
 80027ca:	f841 4023 	str.w	r4, [r1, r3, lsl #2]
 80027ce:	6b11      	ldr	r1, [r2, #48]	; 0x30
 80027d0:	f7ff fa34 	bl	8001c3c <rt_free_box>
 80027d4:	6829      	ldr	r1, [r5, #0]
 80027d6:	4841      	ldr	r0, [pc, #260]	; (80028dc <rt_tsk_delete+0x148>)
 80027d8:	630c      	str	r4, [r1, #48]	; 0x30
 80027da:	f7ff fa2f 	bl	8001c3c <rt_free_box>
 80027de:	602c      	str	r4, [r5, #0]
 80027e0:	f7ff fef4 	bl	80025cc <rt_dispatch.part.0>
 80027e4:	4620      	mov	r0, r4
 80027e6:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, r10, r11, pc}
 80027ea:	6863      	ldr	r3, [r4, #4]
 80027ec:	b1b3      	cbz	r3, 800281c <rt_tsk_delete+0x88>
 80027ee:	4620      	mov	r0, r4
 80027f0:	f7fe ff74 	bl	80016dc <rt_get_first>
 80027f4:	2100      	movs	r1, #0
 80027f6:	4606      	mov	r6, r0
 80027f8:	f7ff f942 	bl	8001a80 <rt_ret_val>
 80027fc:	4630      	mov	r0, r6
 80027fe:	f7ff f813 	bl	8001828 <rt_rmv_dly>
 8002802:	7077      	strb	r7, [r6, #1]
 8002804:	4631      	mov	r1, r6
 8002806:	4640      	mov	r0, r8
 8002808:	f7fe ff50 	bl	80016ac <rt_put_prio>
 800280c:	68e3      	ldr	r3, [r4, #12]
 800280e:	6a32      	ldr	r2, [r6, #32]
 8002810:	8067      	strh	r7, [r4, #2]
 8002812:	60a6      	str	r6, [r4, #8]
 8002814:	60e2      	str	r2, [r4, #12]
 8002816:	6234      	str	r4, [r6, #32]
 8002818:	461c      	mov	r4, r3
 800281a:	e7d0      	b.n	80027be <rt_tsk_delete+0x2a>
 800281c:	68e2      	ldr	r2, [r4, #12]
 800281e:	8063      	strh	r3, [r4, #2]
 8002820:	60a3      	str	r3, [r4, #8]
 8002822:	60e3      	str	r3, [r4, #12]
 8002824:	4614      	mov	r4, r2
 8002826:	e7ca      	b.n	80027be <rt_tsk_delete+0x2a>
 8002828:	4b2d      	ldr	r3, [pc, #180]	; (80028e0 <rt_tsk_delete+0x14c>)
 800282a:	881b      	ldrh	r3, [r3, #0]
 800282c:	4298      	cmp	r0, r3
 800282e:	d84d      	bhi.n	80028cc <rt_tsk_delete+0x138>
 8002830:	4b28      	ldr	r3, [pc, #160]	; (80028d4 <rt_tsk_delete+0x140>)
 8002832:	1e47      	subs	r7, r0, #1
 8002834:	4699      	mov	r9, r3
 8002836:	f853 6027 	ldr.w	r6, [r3, r7, lsl #2]
 800283a:	2e00      	cmp	r6, #0
 800283c:	d046      	beq.n	80028cc <rt_tsk_delete+0x138>
 800283e:	4630      	mov	r0, r6
 8002840:	f7fe ffc4 	bl	80017cc <rt_rmv_list>
 8002844:	4630      	mov	r0, r6
 8002846:	f7fe ffef 	bl	8001828 <rt_rmv_dly>
 800284a:	f8df b098 	ldr.w	r11, [pc, #152]	; 80028e4 <rt_tsk_delete+0x150>
 800284e:	6a34      	ldr	r4, [r6, #32]
 8002850:	f04f 0a01 	mov.w	r10, #1
 8002854:	b9b4      	cbnz	r4, 8002884 <rt_tsk_delete+0xf0>
 8002856:	6b31      	ldr	r1, [r6, #48]	; 0x30
 8002858:	481f      	ldr	r0, [pc, #124]	; (80028d8 <rt_tsk_delete+0x144>)
 800285a:	f849 4027 	str.w	r4, [r9, r7, lsl #2]
 800285e:	f7ff f9ed 	bl	8001c3c <rt_free_box>
 8002862:	4631      	mov	r1, r6
 8002864:	6334      	str	r4, [r6, #48]	; 0x30
 8002866:	481d      	ldr	r0, [pc, #116]	; (80028dc <rt_tsk_delete+0x148>)
 8002868:	f7ff f9e8 	bl	8001c3c <rt_free_box>
 800286c:	481d      	ldr	r0, [pc, #116]	; (80028e4 <rt_tsk_delete+0x150>)
 800286e:	6829      	ldr	r1, [r5, #0]
 8002870:	6843      	ldr	r3, [r0, #4]
 8002872:	789a      	ldrb	r2, [r3, #2]
 8002874:	788b      	ldrb	r3, [r1, #2]
 8002876:	429a      	cmp	r2, r3
 8002878:	d9b4      	bls.n	80027e4 <rt_tsk_delete+0x50>
 800287a:	2301      	movs	r3, #1
 800287c:	704b      	strb	r3, [r1, #1]
 800287e:	f7fe ff15 	bl	80016ac <rt_put_prio>
 8002882:	e7ad      	b.n	80027e0 <rt_tsk_delete+0x4c>
 8002884:	6863      	ldr	r3, [r4, #4]
 8002886:	b1db      	cbz	r3, 80028c0 <rt_tsk_delete+0x12c>
 8002888:	4620      	mov	r0, r4
 800288a:	f7fe ff27 	bl	80016dc <rt_get_first>
 800288e:	2100      	movs	r1, #0
 8002890:	4680      	mov	r8, r0
 8002892:	f7ff f8f5 	bl	8001a80 <rt_ret_val>
 8002896:	4640      	mov	r0, r8
 8002898:	f7fe ffc6 	bl	8001828 <rt_rmv_dly>
 800289c:	f888 a001 	strb.w	r10, [r8, #1]
 80028a0:	4641      	mov	r1, r8
 80028a2:	4658      	mov	r0, r11
 80028a4:	f7fe ff02 	bl	80016ac <rt_put_prio>
 80028a8:	68e3      	ldr	r3, [r4, #12]
 80028aa:	f8d8 2020 	ldr.w	r2, [r8, #32]
 80028ae:	f8a4 a002 	strh.w	r10, [r4, #2]
 80028b2:	f8c4 8008 	str.w	r8, [r4, #8]
 80028b6:	60e2      	str	r2, [r4, #12]
 80028b8:	f8c8 4020 	str.w	r4, [r8, #32]
 80028bc:	461c      	mov	r4, r3
 80028be:	e7c9      	b.n	8002854 <rt_tsk_delete+0xc0>
 80028c0:	68e2      	ldr	r2, [r4, #12]
 80028c2:	8063      	strh	r3, [r4, #2]
 80028c4:	60a3      	str	r3, [r4, #8]
 80028c6:	60e3      	str	r3, [r4, #12]
 80028c8:	4614      	mov	r4, r2
 80028ca:	e7c3      	b.n	8002854 <rt_tsk_delete+0xc0>
 80028cc:	24ff      	movs	r4, #255	; 0xff
 80028ce:	e789      	b.n	80027e4 <rt_tsk_delete+0x50>
 80028d0:	2000273c 	.word	0x2000273c
 80028d4:	20001f38 	.word	0x20001f38
 80028d8:	20001d28 	.word	0x20001d28
 80028dc:	20002320 	.word	0x20002320
 80028e0:	08005c1c 	.word	0x08005c1c
 80028e4:	200026f0 	.word	0x200026f0

080028e8 <rt_sys_init>:
 80028e8:	b538      	push	{r3, r4, r5, lr}
 80028ea:	4b2c      	ldr	r3, [pc, #176]	; (800299c <rt_sys_init+0xb4>)
 80028ec:	492c      	ldr	r1, [pc, #176]	; (80029a0 <rt_sys_init+0xb8>)
 80028ee:	881a      	ldrh	r2, [r3, #0]
 80028f0:	2300      	movs	r3, #0
 80028f2:	4618      	mov	r0, r3
 80028f4:	4293      	cmp	r3, r2
 80028f6:	d34d      	bcc.n	8002994 <rt_sys_init+0xac>
 80028f8:	4b2a      	ldr	r3, [pc, #168]	; (80029a4 <rt_sys_init+0xbc>)
 80028fa:	482b      	ldr	r0, [pc, #172]	; (80029a8 <rt_sys_init+0xc0>)
 80028fc:	8819      	ldrh	r1, [r3, #0]
 80028fe:	4c2b      	ldr	r4, [pc, #172]	; (80029ac <rt_sys_init+0xc4>)
 8002900:	2240      	movs	r2, #64	; 0x40
 8002902:	f7ff f969 	bl	8001bd8 <_init_box>
 8002906:	4b2a      	ldr	r3, [pc, #168]	; (80029b0 <rt_sys_init+0xc8>)
 8002908:	482a      	ldr	r0, [pc, #168]	; (80029b4 <rt_sys_init+0xcc>)
 800290a:	881a      	ldrh	r2, [r3, #0]
 800290c:	4b2a      	ldr	r3, [pc, #168]	; (80029b8 <rt_sys_init+0xd0>)
 800290e:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
 8002912:	6819      	ldr	r1, [r3, #0]
 8002914:	f7ff f960 	bl	8001bd8 <_init_box>
 8002918:	4b28      	ldr	r3, [pc, #160]	; (80029bc <rt_sys_init+0xd4>)
 800291a:	8819      	ldrh	r1, [r3, #0]
 800291c:	4b28      	ldr	r3, [pc, #160]	; (80029c0 <rt_sys_init+0xd8>)
 800291e:	2208      	movs	r2, #8
 8002920:	6818      	ldr	r0, [r3, #0]
 8002922:	f7ff f959 	bl	8001bd8 <_init_box>
 8002926:	23ff      	movs	r3, #255	; 0xff
 8002928:	2500      	movs	r5, #0
 800292a:	70e3      	strb	r3, [r4, #3]
 800292c:	4821      	ldr	r0, [pc, #132]	; (80029b4 <rt_sys_init+0xcc>)
 800292e:	62a5      	str	r5, [r4, #40]	; 0x28
 8002930:	2301      	movs	r3, #1
 8002932:	7063      	strb	r3, [r4, #1]
 8002934:	7025      	strb	r5, [r4, #0]
 8002936:	70a5      	strb	r5, [r4, #2]
 8002938:	f884 5024 	strb.w	r5, [r4, #36]	; 0x24
 800293c:	6065      	str	r5, [r4, #4]
 800293e:	60a5      	str	r5, [r4, #8]
 8002940:	60e5      	str	r5, [r4, #12]
 8002942:	6125      	str	r5, [r4, #16]
 8002944:	6225      	str	r5, [r4, #32]
 8002946:	82a5      	strh	r5, [r4, #20]
 8002948:	82e5      	strh	r5, [r4, #22]
 800294a:	8325      	strh	r5, [r4, #24]
 800294c:	8365      	strh	r5, [r4, #26]
 800294e:	f884 5025 	strb.w	r5, [r4, #37]	; 0x25
 8002952:	f7ff f966 	bl	8001c22 <rt_alloc_box>
 8002956:	491b      	ldr	r1, [pc, #108]	; (80029c4 <rt_sys_init+0xdc>)
 8002958:	6320      	str	r0, [r4, #48]	; 0x30
 800295a:	4620      	mov	r0, r4
 800295c:	f7ff f844 	bl	80019e8 <rt_init_stack>
 8002960:	4b19      	ldr	r3, [pc, #100]	; (80029c8 <rt_sys_init+0xe0>)
 8002962:	2204      	movs	r2, #4
 8002964:	701a      	strb	r2, [r3, #0]
 8002966:	605d      	str	r5, [r3, #4]
 8002968:	4b18      	ldr	r3, [pc, #96]	; (80029cc <rt_sys_init+0xe4>)
 800296a:	701a      	strb	r2, [r3, #0]
 800296c:	60dd      	str	r5, [r3, #12]
 800296e:	611d      	str	r5, [r3, #16]
 8002970:	829d      	strh	r5, [r3, #20]
 8002972:	4b17      	ldr	r3, [pc, #92]	; (80029d0 <rt_sys_init+0xe8>)
 8002974:	4620      	mov	r0, r4
 8002976:	601c      	str	r4, [r3, #0]
 8002978:	2302      	movs	r3, #2
 800297a:	7063      	strb	r3, [r4, #1]
 800297c:	f7ff fe16 	bl	80025ac <rt_switch_req>
 8002980:	4a14      	ldr	r2, [pc, #80]	; (80029d4 <rt_sys_init+0xec>)
 8002982:	4b15      	ldr	r3, [pc, #84]	; (80029d8 <rt_sys_init+0xf0>)
 8002984:	7812      	ldrb	r2, [r2, #0]
 8002986:	701d      	strb	r5, [r3, #0]
 8002988:	705d      	strb	r5, [r3, #1]
 800298a:	70da      	strb	r2, [r3, #3]
 800298c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002990:	f7ff ba9c 	b.w	8001ecc <rt_init_robin>
 8002994:	f841 0023 	str.w	r0, [r1, r3, lsl #2]
 8002998:	3301      	adds	r3, #1
 800299a:	e7ab      	b.n	80028f4 <rt_sys_init+0xc>
 800299c:	08005c1c 	.word	0x08005c1c
 80029a0:	20001f38 	.word	0x20001f38
 80029a4:	08005be8 	.word	0x08005be8
 80029a8:	20002320 	.word	0x20002320
 80029ac:	20002744 	.word	0x20002744
 80029b0:	08005c38 	.word	0x08005c38
 80029b4:	20001d28 	.word	0x20001d28
 80029b8:	08005be4 	.word	0x08005be4
 80029bc:	08005bea 	.word	0x08005bea
 80029c0:	20000908 	.word	0x20000908
 80029c4:	0800160d 	.word	0x0800160d
 80029c8:	200026f0 	.word	0x200026f0
 80029cc:	20002708 	.word	0x20002708
 80029d0:	2000273c 	.word	0x2000273c
 80029d4:	08005c19 	.word	0x08005c19
 80029d8:	20001f74 	.word	0x20001f74

080029dc <rt_sys_start>:
 80029dc:	b508      	push	{r3, lr}
 80029de:	4b1e      	ldr	r3, [pc, #120]	; (8002a58 <rt_sys_start+0x7c>)
 80029e0:	681a      	ldr	r2, [r3, #0]
 80029e2:	f442 027f 	orr.w	r2, r2, #16711680	; 0xff0000
 80029e6:	601a      	str	r2, [r3, #0]
 80029e8:	681b      	ldr	r3, [r3, #0]
 80029ea:	021b      	lsls	r3, r3, #8
 80029ec:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 80029f0:	43db      	mvns	r3, r3
 80029f2:	fab3 f383 	clz	r3, r3
 80029f6:	4a19      	ldr	r2, [pc, #100]	; (8002a5c <rt_sys_start+0x80>)
 80029f8:	4819      	ldr	r0, [pc, #100]	; (8002a60 <rt_sys_start+0x84>)
 80029fa:	6812      	ldr	r2, [r2, #0]
 80029fc:	6801      	ldr	r1, [r0, #0]
 80029fe:	b2db      	uxtb	r3, r3
 8002a00:	f1c3 0308 	rsb	r3, r3, #8
 8002a04:	f3c2 2202 	ubfx	r2, r2, #8, #3
 8002a08:	4293      	cmp	r3, r2
 8002a0a:	bf98      	it	ls
 8002a0c:	1c53      	addls	r3, r2, #1
 8002a0e:	f06f 7280 	mvn.w	r2, #16777216	; 0x1000000
 8002a12:	fa02 f303 	lsl.w	r3, r2, r3
 8002a16:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8002a1a:	f021 427f 	bic.w	r2, r1, #4278190080	; 0xff000000
 8002a1e:	4313      	orrs	r3, r2
 8002a20:	6003      	str	r3, [r0, #0]
 8002a22:	f7ff f88f 	bl	8001b44 <os_tick_init>
 8002a26:	4b0f      	ldr	r3, [pc, #60]	; (8002a64 <rt_sys_start+0x88>)
 8002a28:	2800      	cmp	r0, #0
 8002a2a:	6018      	str	r0, [r3, #0]
 8002a2c:	db12      	blt.n	8002a54 <rt_sys_start+0x78>
 8002a2e:	f100 4060 	add.w	r0, r0, #3758096384	; 0xe0000000
 8002a32:	f500 4064 	add.w	r0, r0, #58368	; 0xe400
 8002a36:	22ff      	movs	r2, #255	; 0xff
 8002a38:	7002      	strb	r2, [r0, #0]
 8002a3a:	681a      	ldr	r2, [r3, #0]
 8002a3c:	0953      	lsrs	r3, r2, #5
 8002a3e:	009b      	lsls	r3, r3, #2
 8002a40:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8002a44:	f503 4361 	add.w	r3, r3, #57600	; 0xe100
 8002a48:	f002 021f 	and.w	r2, r2, #31
 8002a4c:	2101      	movs	r1, #1
 8002a4e:	fa01 f202 	lsl.w	r2, r1, r2
 8002a52:	601a      	str	r2, [r3, #0]
 8002a54:	bd08      	pop	{r3, pc}
 8002a56:	bf00      	nop
 8002a58:	e000ed20 	.word	0xe000ed20
 8002a5c:	e000ed0c 	.word	0xe000ed0c
 8002a60:	e000ed1c 	.word	0xe000ed1c
 8002a64:	20002720 	.word	0x20002720

08002a68 <rt_dly_wait>:
 8002a68:	2103      	movs	r1, #3
 8002a6a:	f7ff bddd 	b.w	8002628 <rt_block>
	...

08002a70 <rt_sem_psh>:
 8002a70:	6842      	ldr	r2, [r0, #4]
 8002a72:	b510      	push	{r4, lr}
 8002a74:	b17a      	cbz	r2, 8002a96 <rt_sem_psh+0x26>
 8002a76:	f7fe fe31 	bl	80016dc <rt_get_first>
 8002a7a:	4604      	mov	r4, r0
 8002a7c:	f7fe fed4 	bl	8001828 <rt_rmv_dly>
 8002a80:	2101      	movs	r1, #1
 8002a82:	7061      	strb	r1, [r4, #1]
 8002a84:	4620      	mov	r0, r4
 8002a86:	f7fe fffb 	bl	8001a80 <rt_ret_val>
 8002a8a:	4621      	mov	r1, r4
 8002a8c:	4804      	ldr	r0, [pc, #16]	; (8002aa0 <rt_sem_psh+0x30>)
 8002a8e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002a92:	f7fe be0b 	b.w	80016ac <rt_put_prio>
 8002a96:	8842      	ldrh	r2, [r0, #2]
 8002a98:	3201      	adds	r2, #1
 8002a9a:	8042      	strh	r2, [r0, #2]
 8002a9c:	bd10      	pop	{r4, pc}
 8002a9e:	bf00      	nop
 8002aa0:	200026f0 	.word	0x200026f0

08002aa4 <timer_irq_handler>:
 8002aa4:	b570      	push	{r4, r5, r6, lr}
 8002aa6:	4c13      	ldr	r4, [pc, #76]	; (8002af4 <timer_irq_handler+0x50>)
 8002aa8:	6823      	ldr	r3, [r4, #0]
 8002aaa:	691a      	ldr	r2, [r3, #16]
 8002aac:	0795      	lsls	r5, r2, #30
 8002aae:	d507      	bpl.n	8002ac0 <timer_irq_handler+0x1c>
 8002ab0:	68da      	ldr	r2, [r3, #12]
 8002ab2:	0790      	lsls	r0, r2, #30
 8002ab4:	d504      	bpl.n	8002ac0 <timer_irq_handler+0x1c>
 8002ab6:	f06f 0202 	mvn.w	r2, #2
 8002aba:	611a      	str	r2, [r3, #16]
 8002abc:	f7fe fcb4 	bl	8001428 <us_ticker_irq_handler>
 8002ac0:	6823      	ldr	r3, [r4, #0]
 8002ac2:	691a      	ldr	r2, [r3, #16]
 8002ac4:	0751      	lsls	r1, r2, #29
 8002ac6:	d513      	bpl.n	8002af0 <timer_irq_handler+0x4c>
 8002ac8:	68da      	ldr	r2, [r3, #12]
 8002aca:	0752      	lsls	r2, r2, #29
 8002acc:	d510      	bpl.n	8002af0 <timer_irq_handler+0x4c>
 8002ace:	f06f 0204 	mvn.w	r2, #4
 8002ad2:	4e09      	ldr	r6, [pc, #36]	; (8002af8 <timer_irq_handler+0x54>)
 8002ad4:	611a      	str	r2, [r3, #16]
 8002ad6:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8002ad8:	6833      	ldr	r3, [r6, #0]
 8002ada:	1aeb      	subs	r3, r5, r3
 8002adc:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8002ae0:	d306      	bcc.n	8002af0 <timer_irq_handler+0x4c>
 8002ae2:	f000 fd7f 	bl	80035e4 <HAL_IncTick>
 8002ae6:	6823      	ldr	r3, [r4, #0]
 8002ae8:	f505 727a 	add.w	r2, r5, #1000	; 0x3e8
 8002aec:	639a      	str	r2, [r3, #56]	; 0x38
 8002aee:	6035      	str	r5, [r6, #0]
 8002af0:	bd70      	pop	{r4, r5, r6, pc}
 8002af2:	bf00      	nop
 8002af4:	20002788 	.word	0x20002788
 8002af8:	2000197c 	.word	0x2000197c

08002afc <HAL_InitTick>:
 8002afc:	b530      	push	{r4, r5, lr}
 8002afe:	b089      	sub	sp, #36	; 0x24
 8002b00:	a901      	add	r1, sp, #4
 8002b02:	a803      	add	r0, sp, #12
 8002b04:	f001 f9f2 	bl	8003eec <HAL_RCC_GetClockConfig>
 8002b08:	f001 f9c0 	bl	8003e8c <HAL_RCC_GetPCLK1Freq>
 8002b0c:	2300      	movs	r3, #0
 8002b0e:	9302      	str	r3, [sp, #8]
 8002b10:	4b24      	ldr	r3, [pc, #144]	; (8002ba4 <HAL_InitTick+0xa8>)
 8002b12:	9001      	str	r0, [sp, #4]
 8002b14:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002b16:	4c24      	ldr	r4, [pc, #144]	; (8002ba8 <HAL_InitTick+0xac>)
 8002b18:	f042 0208 	orr.w	r2, r2, #8
 8002b1c:	641a      	str	r2, [r3, #64]	; 0x40
 8002b1e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002b20:	f002 0208 	and.w	r2, r2, #8
 8002b24:	9202      	str	r2, [sp, #8]
 8002b26:	9a02      	ldr	r2, [sp, #8]
 8002b28:	6a1a      	ldr	r2, [r3, #32]
 8002b2a:	f042 0208 	orr.w	r2, r2, #8
 8002b2e:	621a      	str	r2, [r3, #32]
 8002b30:	6a1a      	ldr	r2, [r3, #32]
 8002b32:	f022 0208 	bic.w	r2, r2, #8
 8002b36:	621a      	str	r2, [r3, #32]
 8002b38:	9a06      	ldr	r2, [sp, #24]
 8002b3a:	f5a3 330b 	sub.w	r3, r3, #142336	; 0x22c00
 8002b3e:	6023      	str	r3, [r4, #0]
 8002b40:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8002b44:	60e3      	str	r3, [r4, #12]
 8002b46:	4b19      	ldr	r3, [pc, #100]	; (8002bac <HAL_InitTick+0xb0>)
 8002b48:	bb4a      	cbnz	r2, 8002b9e <HAL_InitTick+0xa2>
 8002b4a:	fbb0 f0f3 	udiv	r0, r0, r3
 8002b4e:	3801      	subs	r0, #1
 8002b50:	2500      	movs	r5, #0
 8002b52:	6060      	str	r0, [r4, #4]
 8002b54:	4814      	ldr	r0, [pc, #80]	; (8002ba8 <HAL_InitTick+0xac>)
 8002b56:	6125      	str	r5, [r4, #16]
 8002b58:	60a5      	str	r5, [r4, #8]
 8002b5a:	6165      	str	r5, [r4, #20]
 8002b5c:	f000 fee8 	bl	8003930 <HAL_TIM_OC_Init>
 8002b60:	4913      	ldr	r1, [pc, #76]	; (8002bb0 <HAL_InitTick+0xb4>)
 8002b62:	2032      	movs	r0, #50	; 0x32
 8002b64:	f000 fd06 	bl	8003574 <__NVIC_SetVector>
 8002b68:	4b12      	ldr	r3, [pc, #72]	; (8002bb4 <HAL_InitTick+0xb8>)
 8002b6a:	480f      	ldr	r0, [pc, #60]	; (8002ba8 <HAL_InitTick+0xac>)
 8002b6c:	f44f 2280 	mov.w	r2, #262144	; 0x40000
 8002b70:	605a      	str	r2, [r3, #4]
 8002b72:	4629      	mov	r1, r5
 8002b74:	f000 ff18 	bl	80039a8 <HAL_TIM_OC_Start>
 8002b78:	2104      	movs	r1, #4
 8002b7a:	480b      	ldr	r0, [pc, #44]	; (8002ba8 <HAL_InitTick+0xac>)
 8002b7c:	f000 ff14 	bl	80039a8 <HAL_TIM_OC_Start>
 8002b80:	6823      	ldr	r3, [r4, #0]
 8002b82:	4a0d      	ldr	r2, [pc, #52]	; (8002bb8 <HAL_InitTick+0xbc>)
 8002b84:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8002b86:	6011      	str	r1, [r2, #0]
 8002b88:	6812      	ldr	r2, [r2, #0]
 8002b8a:	f502 727a 	add.w	r2, r2, #1000	; 0x3e8
 8002b8e:	639a      	str	r2, [r3, #56]	; 0x38
 8002b90:	68da      	ldr	r2, [r3, #12]
 8002b92:	4628      	mov	r0, r5
 8002b94:	f042 0204 	orr.w	r2, r2, #4
 8002b98:	60da      	str	r2, [r3, #12]
 8002b9a:	b009      	add	sp, #36	; 0x24
 8002b9c:	bd30      	pop	{r4, r5, pc}
 8002b9e:	0040      	lsls	r0, r0, #1
 8002ba0:	e7d3      	b.n	8002b4a <HAL_InitTick+0x4e>
 8002ba2:	bf00      	nop
 8002ba4:	40023800 	.word	0x40023800
 8002ba8:	20002788 	.word	0x20002788
 8002bac:	000f4240 	.word	0x000f4240
 8002bb0:	08002aa5 	.word	0x08002aa5
 8002bb4:	e000e100 	.word	0xe000e100
 8002bb8:	2000197c 	.word	0x2000197c

08002bbc <HAL_SuspendTick>:
 8002bbc:	4b03      	ldr	r3, [pc, #12]	; (8002bcc <HAL_SuspendTick+0x10>)
 8002bbe:	4a04      	ldr	r2, [pc, #16]	; (8002bd0 <HAL_SuspendTick+0x14>)
 8002bc0:	6013      	str	r3, [r2, #0]
 8002bc2:	68da      	ldr	r2, [r3, #12]
 8002bc4:	f022 0204 	bic.w	r2, r2, #4
 8002bc8:	60da      	str	r2, [r3, #12]
 8002bca:	4770      	bx	lr
 8002bcc:	40000c00 	.word	0x40000c00
 8002bd0:	20002788 	.word	0x20002788

08002bd4 <HAL_ResumeTick>:
 8002bd4:	4b03      	ldr	r3, [pc, #12]	; (8002be4 <HAL_ResumeTick+0x10>)
 8002bd6:	4a04      	ldr	r2, [pc, #16]	; (8002be8 <HAL_ResumeTick+0x14>)
 8002bd8:	6013      	str	r3, [r2, #0]
 8002bda:	68da      	ldr	r2, [r3, #12]
 8002bdc:	f042 0204 	orr.w	r2, r2, #4
 8002be0:	60da      	str	r2, [r3, #12]
 8002be2:	4770      	bx	lr
 8002be4:	40000c00 	.word	0x40000c00
 8002be8:	20002788 	.word	0x20002788

08002bec <Set_GPIO_Clock>:
 8002bec:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8002bee:	2300      	movs	r3, #0
 8002bf0:	2807      	cmp	r0, #7
 8002bf2:	d855      	bhi.n	8002ca0 <Set_GPIO_Clock+0xb4>
 8002bf4:	e8df f000 	tbb	[pc, r0]
 8002bf8:	2d201304 	.word	0x2d201304
 8002bfc:	4754543a 	.word	0x4754543a
 8002c00:	9300      	str	r3, [sp, #0]
 8002c02:	4b2a      	ldr	r3, [pc, #168]	; (8002cac <Set_GPIO_Clock+0xc0>)
 8002c04:	482a      	ldr	r0, [pc, #168]	; (8002cb0 <Set_GPIO_Clock+0xc4>)
 8002c06:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002c08:	f042 0201 	orr.w	r2, r2, #1
 8002c0c:	631a      	str	r2, [r3, #48]	; 0x30
 8002c0e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002c10:	f003 0301 	and.w	r3, r3, #1
 8002c14:	9300      	str	r3, [sp, #0]
 8002c16:	9b00      	ldr	r3, [sp, #0]
 8002c18:	b007      	add	sp, #28
 8002c1a:	f85d fb04 	ldr.w	pc, [sp], #4
 8002c1e:	9301      	str	r3, [sp, #4]
 8002c20:	4b22      	ldr	r3, [pc, #136]	; (8002cac <Set_GPIO_Clock+0xc0>)
 8002c22:	4824      	ldr	r0, [pc, #144]	; (8002cb4 <Set_GPIO_Clock+0xc8>)
 8002c24:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002c26:	f042 0202 	orr.w	r2, r2, #2
 8002c2a:	631a      	str	r2, [r3, #48]	; 0x30
 8002c2c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002c2e:	f003 0302 	and.w	r3, r3, #2
 8002c32:	9301      	str	r3, [sp, #4]
 8002c34:	9b01      	ldr	r3, [sp, #4]
 8002c36:	e7ef      	b.n	8002c18 <Set_GPIO_Clock+0x2c>
 8002c38:	9302      	str	r3, [sp, #8]
 8002c3a:	4b1c      	ldr	r3, [pc, #112]	; (8002cac <Set_GPIO_Clock+0xc0>)
 8002c3c:	481e      	ldr	r0, [pc, #120]	; (8002cb8 <Set_GPIO_Clock+0xcc>)
 8002c3e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002c40:	f042 0204 	orr.w	r2, r2, #4
 8002c44:	631a      	str	r2, [r3, #48]	; 0x30
 8002c46:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002c48:	f003 0304 	and.w	r3, r3, #4
 8002c4c:	9302      	str	r3, [sp, #8]
 8002c4e:	9b02      	ldr	r3, [sp, #8]
 8002c50:	e7e2      	b.n	8002c18 <Set_GPIO_Clock+0x2c>
 8002c52:	9303      	str	r3, [sp, #12]
 8002c54:	4b15      	ldr	r3, [pc, #84]	; (8002cac <Set_GPIO_Clock+0xc0>)
 8002c56:	4819      	ldr	r0, [pc, #100]	; (8002cbc <Set_GPIO_Clock+0xd0>)
 8002c58:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002c5a:	f042 0208 	orr.w	r2, r2, #8
 8002c5e:	631a      	str	r2, [r3, #48]	; 0x30
 8002c60:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002c62:	f003 0308 	and.w	r3, r3, #8
 8002c66:	9303      	str	r3, [sp, #12]
 8002c68:	9b03      	ldr	r3, [sp, #12]
 8002c6a:	e7d5      	b.n	8002c18 <Set_GPIO_Clock+0x2c>
 8002c6c:	9304      	str	r3, [sp, #16]
 8002c6e:	4b0f      	ldr	r3, [pc, #60]	; (8002cac <Set_GPIO_Clock+0xc0>)
 8002c70:	4813      	ldr	r0, [pc, #76]	; (8002cc0 <Set_GPIO_Clock+0xd4>)
 8002c72:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002c74:	f042 0210 	orr.w	r2, r2, #16
 8002c78:	631a      	str	r2, [r3, #48]	; 0x30
 8002c7a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002c7c:	f003 0310 	and.w	r3, r3, #16
 8002c80:	9304      	str	r3, [sp, #16]
 8002c82:	9b04      	ldr	r3, [sp, #16]
 8002c84:	e7c8      	b.n	8002c18 <Set_GPIO_Clock+0x2c>
 8002c86:	9305      	str	r3, [sp, #20]
 8002c88:	4b08      	ldr	r3, [pc, #32]	; (8002cac <Set_GPIO_Clock+0xc0>)
 8002c8a:	480e      	ldr	r0, [pc, #56]	; (8002cc4 <Set_GPIO_Clock+0xd8>)
 8002c8c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002c8e:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8002c92:	631a      	str	r2, [r3, #48]	; 0x30
 8002c94:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002c96:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002c9a:	9305      	str	r3, [sp, #20]
 8002c9c:	9b05      	ldr	r3, [sp, #20]
 8002c9e:	e7bb      	b.n	8002c18 <Set_GPIO_Clock+0x2c>
 8002ca0:	4809      	ldr	r0, [pc, #36]	; (8002cc8 <Set_GPIO_Clock+0xdc>)
 8002ca2:	f7fe fc69 	bl	8001578 <error>
 8002ca6:	2000      	movs	r0, #0
 8002ca8:	e7b6      	b.n	8002c18 <Set_GPIO_Clock+0x2c>
 8002caa:	bf00      	nop
 8002cac:	40023800 	.word	0x40023800
 8002cb0:	40020000 	.word	0x40020000
 8002cb4:	40020400 	.word	0x40020400
 8002cb8:	40020800 	.word	0x40020800
 8002cbc:	40020c00 	.word	0x40020c00
 8002cc0:	40021000 	.word	0x40021000
 8002cc4:	40021c00 	.word	0x40021c00
 8002cc8:	08005c58 	.word	0x08005c58

08002ccc <gpio_set>:
 8002ccc:	b510      	push	{r4, lr}
 8002cce:	2100      	movs	r1, #0
 8002cd0:	4604      	mov	r4, r0
 8002cd2:	f004 040f 	and.w	r4, r4, #15
 8002cd6:	f000 f8bf 	bl	8002e58 <pin_function>
 8002cda:	2001      	movs	r0, #1
 8002cdc:	40a0      	lsls	r0, r4
 8002cde:	bd10      	pop	{r4, pc}

08002ce0 <gpio_init>:
 8002ce0:	b570      	push	{r4, r5, r6, lr}
 8002ce2:	4604      	mov	r4, r0
 8002ce4:	1c4b      	adds	r3, r1, #1
 8002ce6:	460e      	mov	r6, r1
 8002ce8:	8221      	strh	r1, [r4, #16]
 8002cea:	d016      	beq.n	8002d1a <gpio_init+0x3a>
 8002cec:	f3c1 1003 	ubfx	r0, r1, #4, #4
 8002cf0:	f7ff ff7c 	bl	8002bec <Set_GPIO_Clock>
 8002cf4:	4605      	mov	r5, r0
 8002cf6:	4630      	mov	r0, r6
 8002cf8:	f7ff ffe8 	bl	8002ccc <gpio_set>
 8002cfc:	8a23      	ldrh	r3, [r4, #16]
 8002cfe:	4a07      	ldr	r2, [pc, #28]	; (8002d1c <gpio_init+0x3c>)
 8002d00:	6165      	str	r5, [r4, #20]
 8002d02:	f003 030f 	and.w	r3, r3, #15
 8002d06:	6020      	str	r0, [r4, #0]
 8002d08:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002d0c:	61a3      	str	r3, [r4, #24]
 8002d0e:	f105 0310 	add.w	r3, r5, #16
 8002d12:	3518      	adds	r5, #24
 8002d14:	6063      	str	r3, [r4, #4]
 8002d16:	60a5      	str	r5, [r4, #8]
 8002d18:	60e5      	str	r5, [r4, #12]
 8002d1a:	bd70      	pop	{r4, r5, r6, pc}
 8002d1c:	08005c7c 	.word	0x08005c7c

08002d20 <gpio_mode>:
 8002d20:	f9b0 0010 	ldrsh.w	r0, [r0, #16]
 8002d24:	f000 b91c 	b.w	8002f60 <pin_mode>

08002d28 <gpio_dir>:
 8002d28:	b510      	push	{r4, lr}
 8002d2a:	6983      	ldr	r3, [r0, #24]
 8002d2c:	6944      	ldr	r4, [r0, #20]
 8002d2e:	b971      	cbnz	r1, 8002d4e <gpio_dir+0x26>
 8002d30:	6821      	ldr	r1, [r4, #0]
 8002d32:	fa93 f2a3 	rbit	r2, r3
 8002d36:	fab2 f282 	clz	r2, r2
 8002d3a:	2003      	movs	r0, #3
 8002d3c:	0052      	lsls	r2, r2, #1
 8002d3e:	fa00 f202 	lsl.w	r2, r0, r2
 8002d42:	ea21 0202 	bic.w	r2, r1, r2
 8002d46:	fa93 f3a3 	rbit	r3, r3
 8002d4a:	6022      	str	r2, [r4, #0]
 8002d4c:	bd10      	pop	{r4, pc}
 8002d4e:	6822      	ldr	r2, [r4, #0]
 8002d50:	fa93 f1a3 	rbit	r1, r3
 8002d54:	fab1 f181 	clz	r1, r1
 8002d58:	fa93 f3a3 	rbit	r3, r3
 8002d5c:	2003      	movs	r0, #3
 8002d5e:	0049      	lsls	r1, r1, #1
 8002d60:	fa00 f101 	lsl.w	r1, r0, r1
 8002d64:	fab3 f383 	clz	r3, r3
 8002d68:	ea22 0201 	bic.w	r2, r2, r1
 8002d6c:	005b      	lsls	r3, r3, #1
 8002d6e:	2101      	movs	r1, #1
 8002d70:	fa01 f303 	lsl.w	r3, r1, r3
 8002d74:	4313      	orrs	r3, r2
 8002d76:	6023      	str	r3, [r4, #0]
 8002d78:	bd10      	pop	{r4, pc}

08002d7a <hal_sleep>:
 8002d7a:	b508      	push	{r3, lr}
 8002d7c:	f7ff ff1e 	bl	8002bbc <HAL_SuspendTick>
 8002d80:	2101      	movs	r1, #1
 8002d82:	2000      	movs	r0, #0
 8002d84:	f000 fe12 	bl	80039ac <HAL_PWR_EnterSLEEPMode>
 8002d88:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8002d8c:	f7ff bf22 	b.w	8002bd4 <HAL_ResumeTick>

08002d90 <us_ticker_init>:
 8002d90:	4b05      	ldr	r3, [pc, #20]	; (8002da8 <us_ticker_init+0x18>)
 8002d92:	6818      	ldr	r0, [r3, #0]
 8002d94:	b930      	cbnz	r0, 8002da4 <us_ticker_init+0x14>
 8002d96:	2201      	movs	r2, #1
 8002d98:	601a      	str	r2, [r3, #0]
 8002d9a:	4b04      	ldr	r3, [pc, #16]	; (8002dac <us_ticker_init+0x1c>)
 8002d9c:	4a04      	ldr	r2, [pc, #16]	; (8002db0 <us_ticker_init+0x20>)
 8002d9e:	601a      	str	r2, [r3, #0]
 8002da0:	f7ff beac 	b.w	8002afc <HAL_InitTick>
 8002da4:	4770      	bx	lr
 8002da6:	bf00      	nop
 8002da8:	20001980 	.word	0x20001980
 8002dac:	20002788 	.word	0x20002788
 8002db0:	40000c00 	.word	0x40000c00

08002db4 <us_ticker_read>:
 8002db4:	b508      	push	{r3, lr}
 8002db6:	4b04      	ldr	r3, [pc, #16]	; (8002dc8 <us_ticker_read+0x14>)
 8002db8:	681b      	ldr	r3, [r3, #0]
 8002dba:	b90b      	cbnz	r3, 8002dc0 <us_ticker_read+0xc>
 8002dbc:	f7ff ffe8 	bl	8002d90 <us_ticker_init>
 8002dc0:	4b02      	ldr	r3, [pc, #8]	; (8002dcc <us_ticker_read+0x18>)
 8002dc2:	6a58      	ldr	r0, [r3, #36]	; 0x24
 8002dc4:	bd08      	pop	{r3, pc}
 8002dc6:	bf00      	nop
 8002dc8:	20001980 	.word	0x20001980
 8002dcc:	40000c00 	.word	0x40000c00

08002dd0 <us_ticker_set_interrupt>:
 8002dd0:	4b04      	ldr	r3, [pc, #16]	; (8002de4 <us_ticker_set_interrupt+0x14>)
 8002dd2:	4a05      	ldr	r2, [pc, #20]	; (8002de8 <us_ticker_set_interrupt+0x18>)
 8002dd4:	6013      	str	r3, [r2, #0]
 8002dd6:	6358      	str	r0, [r3, #52]	; 0x34
 8002dd8:	68da      	ldr	r2, [r3, #12]
 8002dda:	f042 0202 	orr.w	r2, r2, #2
 8002dde:	60da      	str	r2, [r3, #12]
 8002de0:	4770      	bx	lr
 8002de2:	bf00      	nop
 8002de4:	40000c00 	.word	0x40000c00
 8002de8:	20002788 	.word	0x20002788

08002dec <us_ticker_disable_interrupt>:
 8002dec:	4b03      	ldr	r3, [pc, #12]	; (8002dfc <us_ticker_disable_interrupt+0x10>)
 8002dee:	4a04      	ldr	r2, [pc, #16]	; (8002e00 <us_ticker_disable_interrupt+0x14>)
 8002df0:	6013      	str	r3, [r2, #0]
 8002df2:	68da      	ldr	r2, [r3, #12]
 8002df4:	f022 0202 	bic.w	r2, r2, #2
 8002df8:	60da      	str	r2, [r3, #12]
 8002dfa:	4770      	bx	lr
 8002dfc:	40000c00 	.word	0x40000c00
 8002e00:	20002788 	.word	0x20002788

08002e04 <us_ticker_clear_interrupt>:
 8002e04:	4a03      	ldr	r2, [pc, #12]	; (8002e14 <us_ticker_clear_interrupt+0x10>)
 8002e06:	4b04      	ldr	r3, [pc, #16]	; (8002e18 <us_ticker_clear_interrupt+0x14>)
 8002e08:	6013      	str	r3, [r2, #0]
 8002e0a:	f06f 0202 	mvn.w	r2, #2
 8002e0e:	611a      	str	r2, [r3, #16]
 8002e10:	4770      	bx	lr
 8002e12:	bf00      	nop
 8002e14:	20002788 	.word	0x20002788
 8002e18:	40000c00 	.word	0x40000c00

08002e1c <LL_GPIO_SetPinPull>:
 8002e1c:	b530      	push	{r4, r5, lr}
 8002e1e:	68c3      	ldr	r3, [r0, #12]
 8002e20:	fa91 f4a1 	rbit	r4, r1
 8002e24:	fab4 f484 	clz	r4, r4
 8002e28:	fa91 f1a1 	rbit	r1, r1
 8002e2c:	2503      	movs	r5, #3
 8002e2e:	fab1 f181 	clz	r1, r1
 8002e32:	0064      	lsls	r4, r4, #1
 8002e34:	fa05 f404 	lsl.w	r4, r5, r4
 8002e38:	0049      	lsls	r1, r1, #1
 8002e3a:	ea23 0304 	bic.w	r3, r3, r4
 8002e3e:	fa02 f101 	lsl.w	r1, r2, r1
 8002e42:	4319      	orrs	r1, r3
 8002e44:	60c1      	str	r1, [r0, #12]
 8002e46:	bd30      	pop	{r4, r5, pc}

08002e48 <stm_pin_PullConfig>:
 8002e48:	2a01      	cmp	r2, #1
 8002e4a:	d002      	beq.n	8002e52 <stm_pin_PullConfig+0xa>
 8002e4c:	2a02      	cmp	r2, #2
 8002e4e:	bf18      	it	ne
 8002e50:	2200      	movne	r2, #0
 8002e52:	f7ff bfe3 	b.w	8002e1c <LL_GPIO_SetPinPull>
	...

08002e58 <pin_function>:
 8002e58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002e5c:	4b3f      	ldr	r3, [pc, #252]	; (8002f5c <pin_function+0x104>)
 8002e5e:	f000 080f 	and.w	r8, r0, #15
 8002e62:	f3c0 1003 	ubfx	r0, r0, #4, #4
 8002e66:	f853 4028 	ldr.w	r4, [r3, r8, lsl #2]
 8002e6a:	460e      	mov	r6, r1
 8002e6c:	f001 0507 	and.w	r5, r1, #7
 8002e70:	f7ff febc 	bl	8002bec <Set_GPIO_Clock>
 8002e74:	6883      	ldr	r3, [r0, #8]
 8002e76:	fa94 f1a4 	rbit	r1, r4
 8002e7a:	fab1 f181 	clz	r1, r1
 8002e7e:	fa94 f2a4 	rbit	r2, r4
 8002e82:	2703      	movs	r7, #3
 8002e84:	0049      	lsls	r1, r1, #1
 8002e86:	fa07 f101 	lsl.w	r1, r7, r1
 8002e8a:	fab2 f282 	clz	r2, r2
 8002e8e:	ea23 0301 	bic.w	r3, r3, r1
 8002e92:	0052      	lsls	r2, r2, #1
 8002e94:	2102      	movs	r1, #2
 8002e96:	fa01 f202 	lsl.w	r2, r1, r2
 8002e9a:	4313      	orrs	r3, r2
 8002e9c:	428d      	cmp	r5, r1
 8002e9e:	6083      	str	r3, [r0, #8]
 8002ea0:	d028      	beq.n	8002ef4 <pin_function+0x9c>
 8002ea2:	42bd      	cmp	r5, r7
 8002ea4:	d041      	beq.n	8002f2a <pin_function+0xd2>
 8002ea6:	2d01      	cmp	r5, #1
 8002ea8:	d03f      	beq.n	8002f2a <pin_function+0xd2>
 8002eaa:	2300      	movs	r3, #0
 8002eac:	6802      	ldr	r2, [r0, #0]
 8002eae:	fa94 f7a4 	rbit	r7, r4
 8002eb2:	fab7 f787 	clz	r7, r7
 8002eb6:	fa94 f1a4 	rbit	r1, r4
 8002eba:	f04f 0e03 	mov.w	lr, #3
 8002ebe:	fab1 f181 	clz	r1, r1
 8002ec2:	007f      	lsls	r7, r7, #1
 8002ec4:	fa0e f707 	lsl.w	r7, lr, r7
 8002ec8:	0049      	lsls	r1, r1, #1
 8002eca:	ea22 0207 	bic.w	r2, r2, r7
 8002ece:	408b      	lsls	r3, r1
 8002ed0:	3d01      	subs	r5, #1
 8002ed2:	4313      	orrs	r3, r2
 8002ed4:	2d01      	cmp	r5, #1
 8002ed6:	6003      	str	r3, [r0, #0]
 8002ed8:	d805      	bhi.n	8002ee6 <pin_function+0x8e>
 8002eda:	6843      	ldr	r3, [r0, #4]
 8002edc:	0732      	lsls	r2, r6, #28
 8002ede:	bf4c      	ite	mi
 8002ee0:	4323      	orrmi	r3, r4
 8002ee2:	43a3      	bicpl	r3, r4
 8002ee4:	6043      	str	r3, [r0, #4]
 8002ee6:	f3c6 1201 	ubfx	r2, r6, #4, #2
 8002eea:	4621      	mov	r1, r4
 8002eec:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002ef0:	f7ff bfaa 	b.w	8002e48 <stm_pin_PullConfig>
 8002ef4:	f1b8 0f07 	cmp.w	r8, #7
 8002ef8:	f3c6 2703 	ubfx	r7, r6, #8, #4
 8002efc:	d917      	bls.n	8002f2e <pin_function+0xd6>
 8002efe:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8002f00:	0a23      	lsrs	r3, r4, #8
 8002f02:	fa93 f1a3 	rbit	r1, r3
 8002f06:	fab1 f181 	clz	r1, r1
 8002f0a:	fa93 f3a3 	rbit	r3, r3
 8002f0e:	f04f 0e0f 	mov.w	lr, #15
 8002f12:	fab3 f383 	clz	r3, r3
 8002f16:	0089      	lsls	r1, r1, #2
 8002f18:	fa0e f101 	lsl.w	r1, lr, r1
 8002f1c:	009b      	lsls	r3, r3, #2
 8002f1e:	ea22 0201 	bic.w	r2, r2, r1
 8002f22:	fa07 f303 	lsl.w	r3, r7, r3
 8002f26:	4313      	orrs	r3, r2
 8002f28:	6243      	str	r3, [r0, #36]	; 0x24
 8002f2a:	462b      	mov	r3, r5
 8002f2c:	e7be      	b.n	8002eac <pin_function+0x54>
 8002f2e:	6a02      	ldr	r2, [r0, #32]
 8002f30:	fa94 f3a4 	rbit	r3, r4
 8002f34:	fab3 f383 	clz	r3, r3
 8002f38:	fa94 f1a4 	rbit	r1, r4
 8002f3c:	f04f 0e0f 	mov.w	lr, #15
 8002f40:	fab1 f181 	clz	r1, r1
 8002f44:	009b      	lsls	r3, r3, #2
 8002f46:	fa0e f303 	lsl.w	r3, lr, r3
 8002f4a:	0089      	lsls	r1, r1, #2
 8002f4c:	ea22 0203 	bic.w	r2, r2, r3
 8002f50:	fa07 f301 	lsl.w	r3, r7, r1
 8002f54:	4313      	orrs	r3, r2
 8002f56:	6203      	str	r3, [r0, #32]
 8002f58:	e7e7      	b.n	8002f2a <pin_function+0xd2>
 8002f5a:	bf00      	nop
 8002f5c:	08005c7c 	.word	0x08005c7c

08002f60 <pin_mode>:
 8002f60:	b538      	push	{r3, r4, r5, lr}
 8002f62:	f000 020f 	and.w	r2, r0, #15
 8002f66:	4b19      	ldr	r3, [pc, #100]	; (8002fcc <pin_mode+0x6c>)
 8002f68:	f3c0 1003 	ubfx	r0, r0, #4, #4
 8002f6c:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 8002f70:	460d      	mov	r5, r1
 8002f72:	f7ff fe3b 	bl	8002bec <Set_GPIO_Clock>
 8002f76:	fb04 f204 	mul.w	r2, r4, r4
 8002f7a:	6801      	ldr	r1, [r0, #0]
 8002f7c:	eb02 0342 	add.w	r3, r2, r2, lsl #1
 8002f80:	400b      	ands	r3, r1
 8002f82:	fbb3 f3f2 	udiv	r3, r3, r2
 8002f86:	3b01      	subs	r3, #1
 8002f88:	2b01      	cmp	r3, #1
 8002f8a:	d805      	bhi.n	8002f98 <pin_mode+0x38>
 8002f8c:	1eeb      	subs	r3, r5, #3
 8002f8e:	2b02      	cmp	r3, #2
 8002f90:	6843      	ldr	r3, [r0, #4]
 8002f92:	d809      	bhi.n	8002fa8 <pin_mode+0x48>
 8002f94:	4323      	orrs	r3, r4
 8002f96:	6043      	str	r3, [r0, #4]
 8002f98:	2d03      	cmp	r5, #3
 8002f9a:	d108      	bne.n	8002fae <pin_mode+0x4e>
 8002f9c:	2201      	movs	r2, #1
 8002f9e:	4621      	mov	r1, r4
 8002fa0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002fa4:	f7ff bf50 	b.w	8002e48 <stm_pin_PullConfig>
 8002fa8:	ea23 0304 	bic.w	r3, r3, r4
 8002fac:	6043      	str	r3, [r0, #4]
 8002fae:	2d01      	cmp	r5, #1
 8002fb0:	d0f4      	beq.n	8002f9c <pin_mode+0x3c>
 8002fb2:	2d05      	cmp	r5, #5
 8002fb4:	d001      	beq.n	8002fba <pin_mode+0x5a>
 8002fb6:	2d02      	cmp	r5, #2
 8002fb8:	d101      	bne.n	8002fbe <pin_mode+0x5e>
 8002fba:	2202      	movs	r2, #2
 8002fbc:	e7ef      	b.n	8002f9e <pin_mode+0x3e>
 8002fbe:	4621      	mov	r1, r4
 8002fc0:	2200      	movs	r2, #0
 8002fc2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8002fc6:	f7ff bf29 	b.w	8002e1c <LL_GPIO_SetPinPull>
 8002fca:	bf00      	nop
 8002fcc:	08005c7c 	.word	0x08005c7c

08002fd0 <__NVIC_DisableIRQ>:
 8002fd0:	0943      	lsrs	r3, r0, #5
 8002fd2:	2201      	movs	r2, #1
 8002fd4:	f000 001f 	and.w	r0, r0, #31
 8002fd8:	fa02 f000 	lsl.w	r0, r2, r0
 8002fdc:	3320      	adds	r3, #32
 8002fde:	4a04      	ldr	r2, [pc, #16]	; (8002ff0 <__NVIC_DisableIRQ+0x20>)
 8002fe0:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
 8002fe4:	f3bf 8f4f 	dsb	sy
 8002fe8:	f3bf 8f6f 	isb	sy
 8002fec:	4770      	bx	lr
 8002fee:	bf00      	nop
 8002ff0:	e000e100 	.word	0xe000e100

08002ff4 <init_uart>:
 8002ff4:	6842      	ldr	r2, [r0, #4]
 8002ff6:	4916      	ldr	r1, [pc, #88]	; (8003050 <init_uart+0x5c>)
 8002ff8:	0192      	lsls	r2, r2, #6
 8002ffa:	b510      	push	{r4, lr}
 8002ffc:	188b      	adds	r3, r1, r2
 8002ffe:	6804      	ldr	r4, [r0, #0]
 8003000:	508c      	str	r4, [r1, r2]
 8003002:	6882      	ldr	r2, [r0, #8]
 8003004:	605a      	str	r2, [r3, #4]
 8003006:	68c2      	ldr	r2, [r0, #12]
 8003008:	609a      	str	r2, [r3, #8]
 800300a:	6902      	ldr	r2, [r0, #16]
 800300c:	60da      	str	r2, [r3, #12]
 800300e:	6942      	ldr	r2, [r0, #20]
 8003010:	611a      	str	r2, [r3, #16]
 8003012:	6a02      	ldr	r2, [r0, #32]
 8003014:	619a      	str	r2, [r3, #24]
 8003016:	2200      	movs	r2, #0
 8003018:	61da      	str	r2, [r3, #28]
 800301a:	84da      	strh	r2, [r3, #38]	; 0x26
 800301c:	849a      	strh	r2, [r3, #36]	; 0x24
 800301e:	85da      	strh	r2, [r3, #46]	; 0x2e
 8003020:	859a      	strh	r2, [r3, #44]	; 0x2c
 8003022:	f9b0 201a 	ldrsh.w	r2, [r0, #26]
 8003026:	3201      	adds	r2, #1
 8003028:	d10a      	bne.n	8003040 <init_uart+0x4c>
 800302a:	2208      	movs	r2, #8
 800302c:	615a      	str	r2, [r3, #20]
 800302e:	4618      	mov	r0, r3
 8003030:	f000 fc03 	bl	800383a <HAL_UART_Init>
 8003034:	b158      	cbz	r0, 800304e <init_uart+0x5a>
 8003036:	4807      	ldr	r0, [pc, #28]	; (8003054 <init_uart+0x60>)
 8003038:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800303c:	f7fe ba9c 	b.w	8001578 <error>
 8003040:	f9b0 2018 	ldrsh.w	r2, [r0, #24]
 8003044:	3201      	adds	r2, #1
 8003046:	bf0c      	ite	eq
 8003048:	2204      	moveq	r2, #4
 800304a:	220c      	movne	r2, #12
 800304c:	e7ee      	b.n	800302c <init_uart+0x38>
 800304e:	bd10      	pop	{r4, pc}
 8003050:	200019ac 	.word	0x200019ac
 8003054:	08005cbc 	.word	0x08005cbc

08003058 <uart_irq>:
 8003058:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800305a:	4e19      	ldr	r6, [pc, #100]	; (80030c0 <uart_irq+0x68>)
 800305c:	4607      	mov	r7, r0
 800305e:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8003062:	2800      	cmp	r0, #0
 8003064:	d02a      	beq.n	80030bc <uart_irq+0x64>
 8003066:	4c17      	ldr	r4, [pc, #92]	; (80030c4 <uart_irq+0x6c>)
 8003068:	01bd      	lsls	r5, r7, #6
 800306a:	5963      	ldr	r3, [r4, r5]
 800306c:	681a      	ldr	r2, [r3, #0]
 800306e:	0652      	lsls	r2, r2, #25
 8003070:	d50a      	bpl.n	8003088 <uart_irq+0x30>
 8003072:	68db      	ldr	r3, [r3, #12]
 8003074:	0659      	lsls	r1, r3, #25
 8003076:	d507      	bpl.n	8003088 <uart_irq+0x30>
 8003078:	4b13      	ldr	r3, [pc, #76]	; (80030c8 <uart_irq+0x70>)
 800307a:	2101      	movs	r1, #1
 800307c:	681b      	ldr	r3, [r3, #0]
 800307e:	4798      	blx	r3
 8003080:	5963      	ldr	r3, [r4, r5]
 8003082:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8003086:	601a      	str	r2, [r3, #0]
 8003088:	5963      	ldr	r3, [r4, r5]
 800308a:	681a      	ldr	r2, [r3, #0]
 800308c:	0692      	lsls	r2, r2, #26
 800308e:	d50c      	bpl.n	80030aa <uart_irq+0x52>
 8003090:	68db      	ldr	r3, [r3, #12]
 8003092:	0698      	lsls	r0, r3, #26
 8003094:	d509      	bpl.n	80030aa <uart_irq+0x52>
 8003096:	4b0c      	ldr	r3, [pc, #48]	; (80030c8 <uart_irq+0x70>)
 8003098:	f856 0027 	ldr.w	r0, [r6, r7, lsl #2]
 800309c:	681b      	ldr	r3, [r3, #0]
 800309e:	2100      	movs	r1, #0
 80030a0:	4798      	blx	r3
 80030a2:	5963      	ldr	r3, [r4, r5]
 80030a4:	f06f 0220 	mvn.w	r2, #32
 80030a8:	601a      	str	r2, [r3, #0]
 80030aa:	5963      	ldr	r3, [r4, r5]
 80030ac:	681a      	ldr	r2, [r3, #0]
 80030ae:	0711      	lsls	r1, r2, #28
 80030b0:	d504      	bpl.n	80030bc <uart_irq+0x64>
 80030b2:	695a      	ldr	r2, [r3, #20]
 80030b4:	07d2      	lsls	r2, r2, #31
 80030b6:	bf44      	itt	mi
 80030b8:	685b      	ldrmi	r3, [r3, #4]
 80030ba:	9301      	strmi	r3, [sp, #4]
 80030bc:	b003      	add	sp, #12
 80030be:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80030c0:	20001988 	.word	0x20001988
 80030c4:	200019ac 	.word	0x200019ac
 80030c8:	20001984 	.word	0x20001984

080030cc <uart1_irq>:
 80030cc:	2000      	movs	r0, #0
 80030ce:	f7ff bfc3 	b.w	8003058 <uart_irq>

080030d2 <uart2_irq>:
 80030d2:	2001      	movs	r0, #1
 80030d4:	f7ff bfc0 	b.w	8003058 <uart_irq>

080030d8 <uart6_irq>:
 80030d8:	2005      	movs	r0, #5
 80030da:	f7ff bfbd 	b.w	8003058 <uart_irq>
	...

080030e0 <serial_init>:
 80030e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80030e2:	460e      	mov	r6, r1
 80030e4:	b085      	sub	sp, #20
 80030e6:	4604      	mov	r4, r0
 80030e8:	4945      	ldr	r1, [pc, #276]	; (8003200 <serial_init+0x120>)
 80030ea:	4630      	mov	r0, r6
 80030ec:	4615      	mov	r5, r2
 80030ee:	f7fe fa03 	bl	80014f8 <pinmap_peripheral>
 80030f2:	4944      	ldr	r1, [pc, #272]	; (8003204 <serial_init+0x124>)
 80030f4:	4607      	mov	r7, r0
 80030f6:	4628      	mov	r0, r5
 80030f8:	f7fe f9fe 	bl	80014f8 <pinmap_peripheral>
 80030fc:	4601      	mov	r1, r0
 80030fe:	4638      	mov	r0, r7
 8003100:	f7fe f9dc 	bl	80014bc <pinmap_merge>
 8003104:	4b40      	ldr	r3, [pc, #256]	; (8003208 <serial_init+0x128>)
 8003106:	6020      	str	r0, [r4, #0]
 8003108:	4298      	cmp	r0, r3
 800310a:	d01e      	beq.n	800314a <serial_init+0x6a>
 800310c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8003110:	4298      	cmp	r0, r3
 8003112:	d05e      	beq.n	80031d2 <serial_init+0xf2>
 8003114:	f5a3 4350 	sub.w	r3, r3, #53248	; 0xd000
 8003118:	4298      	cmp	r0, r3
 800311a:	d12b      	bne.n	8003174 <serial_init+0x94>
 800311c:	4b3b      	ldr	r3, [pc, #236]	; (800320c <serial_init+0x12c>)
 800311e:	6a1a      	ldr	r2, [r3, #32]
 8003120:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8003124:	621a      	str	r2, [r3, #32]
 8003126:	6a1a      	ldr	r2, [r3, #32]
 8003128:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
 800312c:	621a      	str	r2, [r3, #32]
 800312e:	2200      	movs	r2, #0
 8003130:	9202      	str	r2, [sp, #8]
 8003132:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003134:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8003138:	641a      	str	r2, [r3, #64]	; 0x40
 800313a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800313c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003140:	9302      	str	r3, [sp, #8]
 8003142:	9b02      	ldr	r3, [sp, #8]
 8003144:	2301      	movs	r3, #1
 8003146:	6063      	str	r3, [r4, #4]
 8003148:	e014      	b.n	8003174 <serial_init+0x94>
 800314a:	4b30      	ldr	r3, [pc, #192]	; (800320c <serial_init+0x12c>)
 800314c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800314e:	f042 0210 	orr.w	r2, r2, #16
 8003152:	625a      	str	r2, [r3, #36]	; 0x24
 8003154:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003156:	2100      	movs	r1, #0
 8003158:	f022 0210 	bic.w	r2, r2, #16
 800315c:	625a      	str	r2, [r3, #36]	; 0x24
 800315e:	9101      	str	r1, [sp, #4]
 8003160:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8003162:	f042 0210 	orr.w	r2, r2, #16
 8003166:	645a      	str	r2, [r3, #68]	; 0x44
 8003168:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800316a:	6061      	str	r1, [r4, #4]
 800316c:	f003 0310 	and.w	r3, r3, #16
 8003170:	9301      	str	r3, [sp, #4]
 8003172:	9b01      	ldr	r3, [sp, #4]
 8003174:	4922      	ldr	r1, [pc, #136]	; (8003200 <serial_init+0x120>)
 8003176:	4630      	mov	r0, r6
 8003178:	f7fe f982 	bl	8001480 <pinmap_pinout>
 800317c:	4921      	ldr	r1, [pc, #132]	; (8003204 <serial_init+0x124>)
 800317e:	4628      	mov	r0, r5
 8003180:	f7fe f97e 	bl	8001480 <pinmap_pinout>
 8003184:	1c72      	adds	r2, r6, #1
 8003186:	d003      	beq.n	8003190 <serial_init+0xb0>
 8003188:	2101      	movs	r1, #1
 800318a:	4630      	mov	r0, r6
 800318c:	f7ff fee8 	bl	8002f60 <pin_mode>
 8003190:	1c6b      	adds	r3, r5, #1
 8003192:	d003      	beq.n	800319c <serial_init+0xbc>
 8003194:	2101      	movs	r1, #1
 8003196:	4628      	mov	r0, r5
 8003198:	f7ff fee2 	bl	8002f60 <pin_mode>
 800319c:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 80031a0:	60a3      	str	r3, [r4, #8]
 80031a2:	2300      	movs	r3, #0
 80031a4:	60e3      	str	r3, [r4, #12]
 80031a6:	6123      	str	r3, [r4, #16]
 80031a8:	6163      	str	r3, [r4, #20]
 80031aa:	6223      	str	r3, [r4, #32]
 80031ac:	8326      	strh	r6, [r4, #24]
 80031ae:	8365      	strh	r5, [r4, #26]
 80031b0:	4620      	mov	r0, r4
 80031b2:	f7ff ff1f 	bl	8002ff4 <init_uart>
 80031b6:	6822      	ldr	r2, [r4, #0]
 80031b8:	4b15      	ldr	r3, [pc, #84]	; (8003210 <serial_init+0x130>)
 80031ba:	429a      	cmp	r2, r3
 80031bc:	d107      	bne.n	80031ce <serial_init+0xee>
 80031be:	4b15      	ldr	r3, [pc, #84]	; (8003214 <serial_init+0x134>)
 80031c0:	4815      	ldr	r0, [pc, #84]	; (8003218 <serial_init+0x138>)
 80031c2:	2201      	movs	r2, #1
 80031c4:	601a      	str	r2, [r3, #0]
 80031c6:	4621      	mov	r1, r4
 80031c8:	224c      	movs	r2, #76	; 0x4c
 80031ca:	f001 fe91 	bl	8004ef0 <memcpy>
 80031ce:	b005      	add	sp, #20
 80031d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80031d2:	4b0e      	ldr	r3, [pc, #56]	; (800320c <serial_init+0x12c>)
 80031d4:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80031d6:	f042 0220 	orr.w	r2, r2, #32
 80031da:	625a      	str	r2, [r3, #36]	; 0x24
 80031dc:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80031de:	f022 0220 	bic.w	r2, r2, #32
 80031e2:	625a      	str	r2, [r3, #36]	; 0x24
 80031e4:	2200      	movs	r2, #0
 80031e6:	9203      	str	r2, [sp, #12]
 80031e8:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80031ea:	f042 0220 	orr.w	r2, r2, #32
 80031ee:	645a      	str	r2, [r3, #68]	; 0x44
 80031f0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80031f2:	f003 0320 	and.w	r3, r3, #32
 80031f6:	9303      	str	r3, [sp, #12]
 80031f8:	9b03      	ldr	r3, [sp, #12]
 80031fa:	2305      	movs	r3, #5
 80031fc:	e7a3      	b.n	8003146 <serial_init+0x66>
 80031fe:	bf00      	nop
 8003200:	08005d1c 	.word	0x08005d1c
 8003204:	08005cd4 	.word	0x08005cd4
 8003208:	40011000 	.word	0x40011000
 800320c:	40023800 	.word	0x40023800
 8003210:	40004400 	.word	0x40004400
 8003214:	200019a8 	.word	0x200019a8
 8003218:	200027c4 	.word	0x200027c4

0800321c <serial_baud>:
 800321c:	6081      	str	r1, [r0, #8]
 800321e:	f7ff bee9 	b.w	8002ff4 <init_uart>
	...

08003224 <serial_irq_handler>:
 8003224:	4b03      	ldr	r3, [pc, #12]	; (8003234 <serial_irq_handler+0x10>)
 8003226:	6019      	str	r1, [r3, #0]
 8003228:	6841      	ldr	r1, [r0, #4]
 800322a:	4b03      	ldr	r3, [pc, #12]	; (8003238 <serial_irq_handler+0x14>)
 800322c:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
 8003230:	4770      	bx	lr
 8003232:	bf00      	nop
 8003234:	20001984 	.word	0x20001984
 8003238:	20001988 	.word	0x20001988

0800323c <serial_irq_set>:
 800323c:	b538      	push	{r3, r4, r5, lr}
 800323e:	6843      	ldr	r3, [r0, #4]
 8003240:	2b01      	cmp	r3, #1
 8003242:	460d      	mov	r5, r1
 8003244:	d01a      	beq.n	800327c <serial_irq_set+0x40>
 8003246:	2b05      	cmp	r3, #5
 8003248:	d01b      	beq.n	8003282 <serial_irq_set+0x46>
 800324a:	b9eb      	cbnz	r3, 8003288 <serial_irq_set+0x4c>
 800324c:	491c      	ldr	r1, [pc, #112]	; (80032c0 <serial_irq_set+0x84>)
 800324e:	2425      	movs	r4, #37	; 0x25
 8003250:	481c      	ldr	r0, [pc, #112]	; (80032c4 <serial_irq_set+0x88>)
 8003252:	019b      	lsls	r3, r3, #6
 8003254:	b1f2      	cbz	r2, 8003294 <serial_irq_set+0x58>
 8003256:	58c2      	ldr	r2, [r0, r3]
 8003258:	68d3      	ldr	r3, [r2, #12]
 800325a:	b9c5      	cbnz	r5, 800328e <serial_irq_set+0x52>
 800325c:	f043 0320 	orr.w	r3, r3, #32
 8003260:	60d3      	str	r3, [r2, #12]
 8003262:	4620      	mov	r0, r4
 8003264:	f000 f986 	bl	8003574 <__NVIC_SetVector>
 8003268:	0962      	lsrs	r2, r4, #5
 800326a:	2301      	movs	r3, #1
 800326c:	f004 0407 	and.w	r4, r4, #7
 8003270:	fa03 f404 	lsl.w	r4, r3, r4
 8003274:	4b14      	ldr	r3, [pc, #80]	; (80032c8 <serial_irq_set+0x8c>)
 8003276:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800327a:	bd38      	pop	{r3, r4, r5, pc}
 800327c:	4913      	ldr	r1, [pc, #76]	; (80032cc <serial_irq_set+0x90>)
 800327e:	2426      	movs	r4, #38	; 0x26
 8003280:	e7e6      	b.n	8003250 <serial_irq_set+0x14>
 8003282:	4913      	ldr	r1, [pc, #76]	; (80032d0 <serial_irq_set+0x94>)
 8003284:	2447      	movs	r4, #71	; 0x47
 8003286:	e7e3      	b.n	8003250 <serial_irq_set+0x14>
 8003288:	2100      	movs	r1, #0
 800328a:	460c      	mov	r4, r1
 800328c:	e7e0      	b.n	8003250 <serial_irq_set+0x14>
 800328e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003292:	e7e5      	b.n	8003260 <serial_irq_set+0x24>
 8003294:	58c3      	ldr	r3, [r0, r3]
 8003296:	68da      	ldr	r2, [r3, #12]
 8003298:	b935      	cbnz	r5, 80032a8 <serial_irq_set+0x6c>
 800329a:	f022 0220 	bic.w	r2, r2, #32
 800329e:	60da      	str	r2, [r3, #12]
 80032a0:	68db      	ldr	r3, [r3, #12]
 80032a2:	061a      	lsls	r2, r3, #24
 80032a4:	d506      	bpl.n	80032b4 <serial_irq_set+0x78>
 80032a6:	bd38      	pop	{r3, r4, r5, pc}
 80032a8:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80032ac:	60da      	str	r2, [r3, #12]
 80032ae:	68db      	ldr	r3, [r3, #12]
 80032b0:	069b      	lsls	r3, r3, #26
 80032b2:	d404      	bmi.n	80032be <serial_irq_set+0x82>
 80032b4:	4620      	mov	r0, r4
 80032b6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80032ba:	f7ff be89 	b.w	8002fd0 <__NVIC_DisableIRQ>
 80032be:	bd38      	pop	{r3, r4, r5, pc}
 80032c0:	080030cd 	.word	0x080030cd
 80032c4:	200019ac 	.word	0x200019ac
 80032c8:	e000e100 	.word	0xe000e100
 80032cc:	080030d3 	.word	0x080030d3
 80032d0:	080030d9 	.word	0x080030d9

080032d4 <serial_readable>:
 80032d4:	6843      	ldr	r3, [r0, #4]
 80032d6:	4a03      	ldr	r2, [pc, #12]	; (80032e4 <serial_readable+0x10>)
 80032d8:	019b      	lsls	r3, r3, #6
 80032da:	58d3      	ldr	r3, [r2, r3]
 80032dc:	6818      	ldr	r0, [r3, #0]
 80032de:	f3c0 1040 	ubfx	r0, r0, #5, #1
 80032e2:	4770      	bx	lr
 80032e4:	200019ac 	.word	0x200019ac

080032e8 <serial_getc>:
 80032e8:	6841      	ldr	r1, [r0, #4]
 80032ea:	b510      	push	{r4, lr}
 80032ec:	4604      	mov	r4, r0
 80032ee:	4620      	mov	r0, r4
 80032f0:	f7ff fff0 	bl	80032d4 <serial_readable>
 80032f4:	2800      	cmp	r0, #0
 80032f6:	d0fa      	beq.n	80032ee <serial_getc+0x6>
 80032f8:	0189      	lsls	r1, r1, #6
 80032fa:	4b03      	ldr	r3, [pc, #12]	; (8003308 <serial_getc+0x20>)
 80032fc:	585b      	ldr	r3, [r3, r1]
 80032fe:	6858      	ldr	r0, [r3, #4]
 8003300:	f3c0 0008 	ubfx	r0, r0, #0, #9
 8003304:	bd10      	pop	{r4, pc}
 8003306:	bf00      	nop
 8003308:	200019ac 	.word	0x200019ac

0800330c <serial_writable>:
 800330c:	6843      	ldr	r3, [r0, #4]
 800330e:	4a03      	ldr	r2, [pc, #12]	; (800331c <serial_writable+0x10>)
 8003310:	019b      	lsls	r3, r3, #6
 8003312:	58d3      	ldr	r3, [r2, r3]
 8003314:	6818      	ldr	r0, [r3, #0]
 8003316:	f3c0 10c0 	ubfx	r0, r0, #7, #1
 800331a:	4770      	bx	lr
 800331c:	200019ac 	.word	0x200019ac

08003320 <serial_putc>:
 8003320:	b538      	push	{r3, r4, r5, lr}
 8003322:	6844      	ldr	r4, [r0, #4]
 8003324:	4605      	mov	r5, r0
 8003326:	4628      	mov	r0, r5
 8003328:	f7ff fff0 	bl	800330c <serial_writable>
 800332c:	2800      	cmp	r0, #0
 800332e:	d0fa      	beq.n	8003326 <serial_putc+0x6>
 8003330:	01a4      	lsls	r4, r4, #6
 8003332:	4b03      	ldr	r3, [pc, #12]	; (8003340 <serial_putc+0x20>)
 8003334:	591b      	ldr	r3, [r3, r4]
 8003336:	f3c1 0108 	ubfx	r1, r1, #0, #9
 800333a:	6059      	str	r1, [r3, #4]
 800333c:	bd38      	pop	{r3, r4, r5, pc}
 800333e:	bf00      	nop
 8003340:	200019ac 	.word	0x200019ac

08003344 <mbed_sdk_init>:
 8003344:	b508      	push	{r3, lr}
 8003346:	f000 f819 	bl	800337c <SystemCoreClockUpdate>
 800334a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800334e:	f000 b931 	b.w	80035b4 <HAL_Init>

08003352 <SetSysClock_PLL_HSE.part.0>:
 8003352:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8003354:	230f      	movs	r3, #15
 8003356:	9301      	str	r3, [sp, #4]
 8003358:	2102      	movs	r1, #2
 800335a:	2300      	movs	r3, #0
 800335c:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8003360:	a801      	add	r0, sp, #4
 8003362:	9102      	str	r1, [sp, #8]
 8003364:	9303      	str	r3, [sp, #12]
 8003366:	9204      	str	r2, [sp, #16]
 8003368:	9305      	str	r3, [sp, #20]
 800336a:	f000 fcd9 	bl	8003d20 <HAL_RCC_ClockConfig>
 800336e:	fab0 f080 	clz	r0, r0
 8003372:	0940      	lsrs	r0, r0, #5
 8003374:	b007      	add	sp, #28
 8003376:	f85d fb04 	ldr.w	pc, [sp], #4
	...

0800337c <SystemCoreClockUpdate>:
 800337c:	4a17      	ldr	r2, [pc, #92]	; (80033dc <SystemCoreClockUpdate+0x60>)
 800337e:	4918      	ldr	r1, [pc, #96]	; (80033e0 <SystemCoreClockUpdate+0x64>)
 8003380:	6893      	ldr	r3, [r2, #8]
 8003382:	f003 030c 	and.w	r3, r3, #12
 8003386:	2b04      	cmp	r3, #4
 8003388:	b510      	push	{r4, lr}
 800338a:	d00d      	beq.n	80033a8 <SystemCoreClockUpdate+0x2c>
 800338c:	2b08      	cmp	r3, #8
 800338e:	d00d      	beq.n	80033ac <SystemCoreClockUpdate+0x30>
 8003390:	4b14      	ldr	r3, [pc, #80]	; (80033e4 <SystemCoreClockUpdate+0x68>)
 8003392:	600b      	str	r3, [r1, #0]
 8003394:	4b11      	ldr	r3, [pc, #68]	; (80033dc <SystemCoreClockUpdate+0x60>)
 8003396:	4a14      	ldr	r2, [pc, #80]	; (80033e8 <SystemCoreClockUpdate+0x6c>)
 8003398:	689b      	ldr	r3, [r3, #8]
 800339a:	f3c3 1303 	ubfx	r3, r3, #4, #4
 800339e:	5cd2      	ldrb	r2, [r2, r3]
 80033a0:	680b      	ldr	r3, [r1, #0]
 80033a2:	40d3      	lsrs	r3, r2
 80033a4:	600b      	str	r3, [r1, #0]
 80033a6:	bd10      	pop	{r4, pc}
 80033a8:	4b10      	ldr	r3, [pc, #64]	; (80033ec <SystemCoreClockUpdate+0x70>)
 80033aa:	e7f2      	b.n	8003392 <SystemCoreClockUpdate+0x16>
 80033ac:	6854      	ldr	r4, [r2, #4]
 80033ae:	6850      	ldr	r0, [r2, #4]
 80033b0:	6852      	ldr	r2, [r2, #4]
 80033b2:	0263      	lsls	r3, r4, #9
 80033b4:	f3c2 1288 	ubfx	r2, r2, #6, #9
 80033b8:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 80033bc:	bf4c      	ite	mi
 80033be:	4b0b      	ldrmi	r3, [pc, #44]	; (80033ec <SystemCoreClockUpdate+0x70>)
 80033c0:	4b08      	ldrpl	r3, [pc, #32]	; (80033e4 <SystemCoreClockUpdate+0x68>)
 80033c2:	fbb3 f3f0 	udiv	r3, r3, r0
 80033c6:	4353      	muls	r3, r2
 80033c8:	4a04      	ldr	r2, [pc, #16]	; (80033dc <SystemCoreClockUpdate+0x60>)
 80033ca:	6852      	ldr	r2, [r2, #4]
 80033cc:	f3c2 4201 	ubfx	r2, r2, #16, #2
 80033d0:	3201      	adds	r2, #1
 80033d2:	0052      	lsls	r2, r2, #1
 80033d4:	fbb3 f3f2 	udiv	r3, r3, r2
 80033d8:	e7db      	b.n	8003392 <SystemCoreClockUpdate+0x16>
 80033da:	bf00      	nop
 80033dc:	40023800 	.word	0x40023800
 80033e0:	200001b0 	.word	0x200001b0
 80033e4:	00f42400 	.word	0x00f42400
 80033e8:	08005d64 	.word	0x08005d64
 80033ec:	007a1200 	.word	0x007a1200

080033f0 <SetSysClock_PLL_HSE>:
 80033f0:	b500      	push	{lr}
 80033f2:	b08f      	sub	sp, #60	; 0x3c
 80033f4:	4b1b      	ldr	r3, [pc, #108]	; (8003464 <SetSysClock_PLL_HSE+0x74>)
 80033f6:	2100      	movs	r1, #0
 80033f8:	9100      	str	r1, [sp, #0]
 80033fa:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80033fc:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8003400:	641a      	str	r2, [r3, #64]	; 0x40
 8003402:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003404:	4a18      	ldr	r2, [pc, #96]	; (8003468 <SetSysClock_PLL_HSE+0x78>)
 8003406:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800340a:	9300      	str	r3, [sp, #0]
 800340c:	9b00      	ldr	r3, [sp, #0]
 800340e:	9101      	str	r1, [sp, #4]
 8003410:	6813      	ldr	r3, [r2, #0]
 8003412:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8003416:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800341a:	6013      	str	r3, [r2, #0]
 800341c:	6813      	ldr	r3, [r2, #0]
 800341e:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8003422:	9301      	str	r3, [sp, #4]
 8003424:	9b01      	ldr	r3, [sp, #4]
 8003426:	2301      	movs	r3, #1
 8003428:	9302      	str	r3, [sp, #8]
 800342a:	b9b8      	cbnz	r0, 800345c <SetSysClock_PLL_HSE+0x6c>
 800342c:	9303      	str	r3, [sp, #12]
 800342e:	2302      	movs	r3, #2
 8003430:	9308      	str	r3, [sp, #32]
 8003432:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8003436:	9309      	str	r3, [sp, #36]	; 0x24
 8003438:	2308      	movs	r3, #8
 800343a:	930a      	str	r3, [sp, #40]	; 0x28
 800343c:	f44f 73a8 	mov.w	r3, #336	; 0x150
 8003440:	930b      	str	r3, [sp, #44]	; 0x2c
 8003442:	2304      	movs	r3, #4
 8003444:	930c      	str	r3, [sp, #48]	; 0x30
 8003446:	a802      	add	r0, sp, #8
 8003448:	2307      	movs	r3, #7
 800344a:	930d      	str	r3, [sp, #52]	; 0x34
 800344c:	f000 fabe 	bl	80039cc <HAL_RCC_OscConfig>
 8003450:	b930      	cbnz	r0, 8003460 <SetSysClock_PLL_HSE+0x70>
 8003452:	f7ff ff7e 	bl	8003352 <SetSysClock_PLL_HSE.part.0>
 8003456:	b00f      	add	sp, #60	; 0x3c
 8003458:	f85d fb04 	ldr.w	pc, [sp], #4
 800345c:	2305      	movs	r3, #5
 800345e:	e7e5      	b.n	800342c <SetSysClock_PLL_HSE+0x3c>
 8003460:	2000      	movs	r0, #0
 8003462:	e7f8      	b.n	8003456 <SetSysClock_PLL_HSE+0x66>
 8003464:	40023800 	.word	0x40023800
 8003468:	40007000 	.word	0x40007000

0800346c <SetSysClock_PLL_HSI>:
 800346c:	b510      	push	{r4, lr}
 800346e:	b08e      	sub	sp, #56	; 0x38
 8003470:	2400      	movs	r4, #0
 8003472:	4b1a      	ldr	r3, [pc, #104]	; (80034dc <SetSysClock_PLL_HSI+0x70>)
 8003474:	9400      	str	r4, [sp, #0]
 8003476:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8003478:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800347c:	641a      	str	r2, [r3, #64]	; 0x40
 800347e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003480:	4a17      	ldr	r2, [pc, #92]	; (80034e0 <SetSysClock_PLL_HSI+0x74>)
 8003482:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003486:	9300      	str	r3, [sp, #0]
 8003488:	9b00      	ldr	r3, [sp, #0]
 800348a:	9401      	str	r4, [sp, #4]
 800348c:	6813      	ldr	r3, [r2, #0]
 800348e:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8003492:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8003496:	6013      	str	r3, [r2, #0]
 8003498:	6813      	ldr	r3, [r2, #0]
 800349a:	9403      	str	r4, [sp, #12]
 800349c:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80034a0:	9301      	str	r3, [sp, #4]
 80034a2:	9b01      	ldr	r3, [sp, #4]
 80034a4:	9409      	str	r4, [sp, #36]	; 0x24
 80034a6:	2303      	movs	r3, #3
 80034a8:	9302      	str	r3, [sp, #8]
 80034aa:	2301      	movs	r3, #1
 80034ac:	9305      	str	r3, [sp, #20]
 80034ae:	2310      	movs	r3, #16
 80034b0:	9306      	str	r3, [sp, #24]
 80034b2:	930a      	str	r3, [sp, #40]	; 0x28
 80034b4:	f44f 73a8 	mov.w	r3, #336	; 0x150
 80034b8:	930b      	str	r3, [sp, #44]	; 0x2c
 80034ba:	2304      	movs	r3, #4
 80034bc:	2202      	movs	r2, #2
 80034be:	930c      	str	r3, [sp, #48]	; 0x30
 80034c0:	a802      	add	r0, sp, #8
 80034c2:	2307      	movs	r3, #7
 80034c4:	9208      	str	r2, [sp, #32]
 80034c6:	930d      	str	r3, [sp, #52]	; 0x34
 80034c8:	f000 fa80 	bl	80039cc <HAL_RCC_OscConfig>
 80034cc:	b918      	cbnz	r0, 80034d6 <SetSysClock_PLL_HSI+0x6a>
 80034ce:	f7ff ff40 	bl	8003352 <SetSysClock_PLL_HSE.part.0>
 80034d2:	b00e      	add	sp, #56	; 0x38
 80034d4:	bd10      	pop	{r4, pc}
 80034d6:	4620      	mov	r0, r4
 80034d8:	e7fb      	b.n	80034d2 <SetSysClock_PLL_HSI+0x66>
 80034da:	bf00      	nop
 80034dc:	40023800 	.word	0x40023800
 80034e0:	40007000 	.word	0x40007000

080034e4 <SetSysClock>:
 80034e4:	b508      	push	{r3, lr}
 80034e6:	2001      	movs	r0, #1
 80034e8:	f7ff ff82 	bl	80033f0 <SetSysClock_PLL_HSE>
 80034ec:	b930      	cbnz	r0, 80034fc <SetSysClock+0x18>
 80034ee:	f7ff ff7f 	bl	80033f0 <SetSysClock_PLL_HSE>
 80034f2:	b918      	cbnz	r0, 80034fc <SetSysClock+0x18>
 80034f4:	f7ff ffba 	bl	800346c <SetSysClock_PLL_HSI>
 80034f8:	b900      	cbnz	r0, 80034fc <SetSysClock+0x18>
 80034fa:	e7fe      	b.n	80034fa <SetSysClock+0x16>
 80034fc:	bd08      	pop	{r3, pc}
	...

08003500 <SystemInit>:
 8003500:	4a17      	ldr	r2, [pc, #92]	; (8003560 <SystemInit+0x60>)
 8003502:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 8003506:	b510      	push	{r4, lr}
 8003508:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800350c:	4c15      	ldr	r4, [pc, #84]	; (8003564 <SystemInit+0x64>)
 800350e:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8003512:	6823      	ldr	r3, [r4, #0]
 8003514:	2100      	movs	r1, #0
 8003516:	f043 0301 	orr.w	r3, r3, #1
 800351a:	6023      	str	r3, [r4, #0]
 800351c:	60a1      	str	r1, [r4, #8]
 800351e:	6823      	ldr	r3, [r4, #0]
 8003520:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 8003524:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8003528:	6023      	str	r3, [r4, #0]
 800352a:	4b0f      	ldr	r3, [pc, #60]	; (8003568 <SystemInit+0x68>)
 800352c:	6063      	str	r3, [r4, #4]
 800352e:	6823      	ldr	r3, [r4, #0]
 8003530:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8003534:	6023      	str	r3, [r4, #0]
 8003536:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 800353a:	60e1      	str	r1, [r4, #12]
 800353c:	6093      	str	r3, [r2, #8]
 800353e:	4b0b      	ldr	r3, [pc, #44]	; (800356c <SystemInit+0x6c>)
 8003540:	4a0b      	ldr	r2, [pc, #44]	; (8003570 <SystemInit+0x70>)
 8003542:	601a      	str	r2, [r3, #0]
 8003544:	f000 f836 	bl	80035b4 <HAL_Init>
 8003548:	f7ff ffcc 	bl	80034e4 <SetSysClock>
 800354c:	6a23      	ldr	r3, [r4, #32]
 800354e:	f043 0308 	orr.w	r3, r3, #8
 8003552:	6223      	str	r3, [r4, #32]
 8003554:	6a23      	ldr	r3, [r4, #32]
 8003556:	f023 0308 	bic.w	r3, r3, #8
 800355a:	6223      	str	r3, [r4, #32]
 800355c:	bd10      	pop	{r4, pc}
 800355e:	bf00      	nop
 8003560:	e000ed00 	.word	0xe000ed00
 8003564:	40023800 	.word	0x40023800
 8003568:	24003010 	.word	0x24003010
 800356c:	200001b0 	.word	0x200001b0
 8003570:	00f42400 	.word	0x00f42400

08003574 <__NVIC_SetVector>:
 8003574:	b530      	push	{r4, r5, lr}
 8003576:	4c0c      	ldr	r4, [pc, #48]	; (80035a8 <__NVIC_SetVector+0x34>)
 8003578:	68a2      	ldr	r2, [r4, #8]
 800357a:	68a4      	ldr	r4, [r4, #8]
 800357c:	f1b4 6f00 	cmp.w	r4, #134217728	; 0x8000000
 8003580:	4613      	mov	r3, r2
 8003582:	d10c      	bne.n	800359e <__NVIC_SetVector+0x2a>
 8003584:	1f13      	subs	r3, r2, #4
 8003586:	4c09      	ldr	r4, [pc, #36]	; (80035ac <__NVIC_SetVector+0x38>)
 8003588:	4a09      	ldr	r2, [pc, #36]	; (80035b0 <__NVIC_SetVector+0x3c>)
 800358a:	f853 5f04 	ldr.w	r5, [r3, #4]!
 800358e:	f842 5f04 	str.w	r5, [r2, #4]!
 8003592:	42a2      	cmp	r2, r4
 8003594:	d1f9      	bne.n	800358a <__NVIC_SetVector+0x16>
 8003596:	4a04      	ldr	r2, [pc, #16]	; (80035a8 <__NVIC_SetVector+0x34>)
 8003598:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
 800359c:	6093      	str	r3, [r2, #8]
 800359e:	3010      	adds	r0, #16
 80035a0:	f843 1020 	str.w	r1, [r3, r0, lsl #2]
 80035a4:	bd30      	pop	{r4, r5, pc}
 80035a6:	bf00      	nop
 80035a8:	e000ed00 	.word	0xe000ed00
 80035ac:	20000190 	.word	0x20000190
 80035b0:	1ffffffc 	.word	0x1ffffffc

080035b4 <HAL_Init>:
 80035b4:	b508      	push	{r3, lr}
 80035b6:	4b0a      	ldr	r3, [pc, #40]	; (80035e0 <HAL_Init+0x2c>)
 80035b8:	681a      	ldr	r2, [r3, #0]
 80035ba:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80035be:	601a      	str	r2, [r3, #0]
 80035c0:	681a      	ldr	r2, [r3, #0]
 80035c2:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80035c6:	601a      	str	r2, [r3, #0]
 80035c8:	681a      	ldr	r2, [r3, #0]
 80035ca:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80035ce:	601a      	str	r2, [r3, #0]
 80035d0:	200f      	movs	r0, #15
 80035d2:	f7ff fa93 	bl	8002afc <HAL_InitTick>
 80035d6:	f000 f813 	bl	8003600 <HAL_MspInit>
 80035da:	2000      	movs	r0, #0
 80035dc:	bd08      	pop	{r3, pc}
 80035de:	bf00      	nop
 80035e0:	40023c00 	.word	0x40023c00

080035e4 <HAL_IncTick>:
 80035e4:	4a02      	ldr	r2, [pc, #8]	; (80035f0 <HAL_IncTick+0xc>)
 80035e6:	6813      	ldr	r3, [r2, #0]
 80035e8:	3301      	adds	r3, #1
 80035ea:	6013      	str	r3, [r2, #0]
 80035ec:	4770      	bx	lr
 80035ee:	bf00      	nop
 80035f0:	20002810 	.word	0x20002810

080035f4 <HAL_GetTick>:
 80035f4:	4b01      	ldr	r3, [pc, #4]	; (80035fc <HAL_GetTick+0x8>)
 80035f6:	6818      	ldr	r0, [r3, #0]
 80035f8:	4770      	bx	lr
 80035fa:	bf00      	nop
 80035fc:	20002810 	.word	0x20002810

08003600 <HAL_MspInit>:
 8003600:	4770      	bx	lr
	...

08003604 <UART_SetConfig>:
 8003604:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 8003608:	6806      	ldr	r6, [r0, #0]
 800360a:	68c2      	ldr	r2, [r0, #12]
 800360c:	6933      	ldr	r3, [r6, #16]
 800360e:	69c1      	ldr	r1, [r0, #28]
 8003610:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8003614:	4313      	orrs	r3, r2
 8003616:	6133      	str	r3, [r6, #16]
 8003618:	4604      	mov	r4, r0
 800361a:	6883      	ldr	r3, [r0, #8]
 800361c:	6900      	ldr	r0, [r0, #16]
 800361e:	68f2      	ldr	r2, [r6, #12]
 8003620:	4303      	orrs	r3, r0
 8003622:	6960      	ldr	r0, [r4, #20]
 8003624:	f422 4216 	bic.w	r2, r2, #38400	; 0x9600
 8003628:	4303      	orrs	r3, r0
 800362a:	f022 020c 	bic.w	r2, r2, #12
 800362e:	430b      	orrs	r3, r1
 8003630:	4313      	orrs	r3, r2
 8003632:	60f3      	str	r3, [r6, #12]
 8003634:	6973      	ldr	r3, [r6, #20]
 8003636:	69a2      	ldr	r2, [r4, #24]
 8003638:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800363c:	4313      	orrs	r3, r2
 800363e:	f5b1 4f00 	cmp.w	r1, #32768	; 0x8000
 8003642:	6173      	str	r3, [r6, #20]
 8003644:	4b7a      	ldr	r3, [pc, #488]	; (8003830 <UART_SetConfig+0x22c>)
 8003646:	d17c      	bne.n	8003742 <UART_SetConfig+0x13e>
 8003648:	429e      	cmp	r6, r3
 800364a:	d003      	beq.n	8003654 <UART_SetConfig+0x50>
 800364c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8003650:	429e      	cmp	r6, r3
 8003652:	d144      	bne.n	80036de <UART_SetConfig+0xda>
 8003654:	f000 fc32 	bl	8003ebc <HAL_RCC_GetPCLK2Freq>
 8003658:	2519      	movs	r5, #25
 800365a:	fb05 f300 	mul.w	r3, r5, r0
 800365e:	6860      	ldr	r0, [r4, #4]
 8003660:	f04f 0964 	mov.w	r9, #100	; 0x64
 8003664:	0040      	lsls	r0, r0, #1
 8003666:	fbb3 f3f0 	udiv	r3, r3, r0
 800366a:	fbb3 f3f9 	udiv	r3, r3, r9
 800366e:	ea4f 1803 	mov.w	r8, r3, lsl #4
 8003672:	f000 fc23 	bl	8003ebc <HAL_RCC_GetPCLK2Freq>
 8003676:	6863      	ldr	r3, [r4, #4]
 8003678:	4368      	muls	r0, r5
 800367a:	005b      	lsls	r3, r3, #1
 800367c:	fbb0 f7f3 	udiv	r7, r0, r3
 8003680:	f000 fc1c 	bl	8003ebc <HAL_RCC_GetPCLK2Freq>
 8003684:	6863      	ldr	r3, [r4, #4]
 8003686:	4368      	muls	r0, r5
 8003688:	005b      	lsls	r3, r3, #1
 800368a:	fbb0 f3f3 	udiv	r3, r0, r3
 800368e:	fbb3 f3f9 	udiv	r3, r3, r9
 8003692:	fb09 7313 	mls	r3, r9, r3, r7
 8003696:	00db      	lsls	r3, r3, #3
 8003698:	3332      	adds	r3, #50	; 0x32
 800369a:	fbb3 f3f9 	udiv	r3, r3, r9
 800369e:	005b      	lsls	r3, r3, #1
 80036a0:	f403 77f8 	and.w	r7, r3, #496	; 0x1f0
 80036a4:	f000 fc0a 	bl	8003ebc <HAL_RCC_GetPCLK2Freq>
 80036a8:	6862      	ldr	r2, [r4, #4]
 80036aa:	4368      	muls	r0, r5
 80036ac:	0052      	lsls	r2, r2, #1
 80036ae:	fbb0 faf2 	udiv	r10, r0, r2
 80036b2:	f000 fc03 	bl	8003ebc <HAL_RCC_GetPCLK2Freq>
 80036b6:	6863      	ldr	r3, [r4, #4]
 80036b8:	4368      	muls	r0, r5
 80036ba:	005b      	lsls	r3, r3, #1
 80036bc:	fbb0 f3f3 	udiv	r3, r0, r3
 80036c0:	fbb3 f3f9 	udiv	r3, r3, r9
 80036c4:	fb09 a313 	mls	r3, r9, r3, r10
 80036c8:	00db      	lsls	r3, r3, #3
 80036ca:	3332      	adds	r3, #50	; 0x32
 80036cc:	fbb3 f3f9 	udiv	r3, r3, r9
 80036d0:	f003 0307 	and.w	r3, r3, #7
 80036d4:	4443      	add	r3, r8
 80036d6:	443b      	add	r3, r7
 80036d8:	60b3      	str	r3, [r6, #8]
 80036da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 80036de:	f000 fbd5 	bl	8003e8c <HAL_RCC_GetPCLK1Freq>
 80036e2:	2519      	movs	r5, #25
 80036e4:	fb05 f300 	mul.w	r3, r5, r0
 80036e8:	6860      	ldr	r0, [r4, #4]
 80036ea:	f04f 0964 	mov.w	r9, #100	; 0x64
 80036ee:	0040      	lsls	r0, r0, #1
 80036f0:	fbb3 f3f0 	udiv	r3, r3, r0
 80036f4:	fbb3 f3f9 	udiv	r3, r3, r9
 80036f8:	ea4f 1803 	mov.w	r8, r3, lsl #4
 80036fc:	f000 fbc6 	bl	8003e8c <HAL_RCC_GetPCLK1Freq>
 8003700:	6863      	ldr	r3, [r4, #4]
 8003702:	4368      	muls	r0, r5
 8003704:	005b      	lsls	r3, r3, #1
 8003706:	fbb0 f7f3 	udiv	r7, r0, r3
 800370a:	f000 fbbf 	bl	8003e8c <HAL_RCC_GetPCLK1Freq>
 800370e:	6863      	ldr	r3, [r4, #4]
 8003710:	4368      	muls	r0, r5
 8003712:	005b      	lsls	r3, r3, #1
 8003714:	fbb0 f3f3 	udiv	r3, r0, r3
 8003718:	fbb3 f3f9 	udiv	r3, r3, r9
 800371c:	fb09 7313 	mls	r3, r9, r3, r7
 8003720:	00db      	lsls	r3, r3, #3
 8003722:	3332      	adds	r3, #50	; 0x32
 8003724:	fbb3 f3f9 	udiv	r3, r3, r9
 8003728:	005b      	lsls	r3, r3, #1
 800372a:	f403 77f8 	and.w	r7, r3, #496	; 0x1f0
 800372e:	f000 fbad 	bl	8003e8c <HAL_RCC_GetPCLK1Freq>
 8003732:	6862      	ldr	r2, [r4, #4]
 8003734:	4368      	muls	r0, r5
 8003736:	0052      	lsls	r2, r2, #1
 8003738:	fbb0 faf2 	udiv	r10, r0, r2
 800373c:	f000 fba6 	bl	8003e8c <HAL_RCC_GetPCLK1Freq>
 8003740:	e7b9      	b.n	80036b6 <UART_SetConfig+0xb2>
 8003742:	429e      	cmp	r6, r3
 8003744:	d002      	beq.n	800374c <UART_SetConfig+0x148>
 8003746:	4b3b      	ldr	r3, [pc, #236]	; (8003834 <UART_SetConfig+0x230>)
 8003748:	429e      	cmp	r6, r3
 800374a:	d140      	bne.n	80037ce <UART_SetConfig+0x1ca>
 800374c:	f000 fbb6 	bl	8003ebc <HAL_RCC_GetPCLK2Freq>
 8003750:	6867      	ldr	r7, [r4, #4]
 8003752:	2519      	movs	r5, #25
 8003754:	f04f 0964 	mov.w	r9, #100	; 0x64
 8003758:	fb05 f300 	mul.w	r3, r5, r0
 800375c:	00bf      	lsls	r7, r7, #2
 800375e:	fbb3 f3f7 	udiv	r3, r3, r7
 8003762:	fbb3 f3f9 	udiv	r3, r3, r9
 8003766:	011f      	lsls	r7, r3, #4
 8003768:	f000 fba8 	bl	8003ebc <HAL_RCC_GetPCLK2Freq>
 800376c:	6863      	ldr	r3, [r4, #4]
 800376e:	4368      	muls	r0, r5
 8003770:	009b      	lsls	r3, r3, #2
 8003772:	fbb0 f8f3 	udiv	r8, r0, r3
 8003776:	f000 fba1 	bl	8003ebc <HAL_RCC_GetPCLK2Freq>
 800377a:	6863      	ldr	r3, [r4, #4]
 800377c:	4368      	muls	r0, r5
 800377e:	009b      	lsls	r3, r3, #2
 8003780:	fbb0 f3f3 	udiv	r3, r0, r3
 8003784:	fbb3 f3f9 	udiv	r3, r3, r9
 8003788:	fb09 8313 	mls	r3, r9, r3, r8
 800378c:	011b      	lsls	r3, r3, #4
 800378e:	3332      	adds	r3, #50	; 0x32
 8003790:	fbb3 f3f9 	udiv	r3, r3, r9
 8003794:	f003 08f0 	and.w	r8, r3, #240	; 0xf0
 8003798:	f000 fb90 	bl	8003ebc <HAL_RCC_GetPCLK2Freq>
 800379c:	6862      	ldr	r2, [r4, #4]
 800379e:	4368      	muls	r0, r5
 80037a0:	0092      	lsls	r2, r2, #2
 80037a2:	fbb0 faf2 	udiv	r10, r0, r2
 80037a6:	f000 fb89 	bl	8003ebc <HAL_RCC_GetPCLK2Freq>
 80037aa:	6863      	ldr	r3, [r4, #4]
 80037ac:	4368      	muls	r0, r5
 80037ae:	009b      	lsls	r3, r3, #2
 80037b0:	fbb0 f3f3 	udiv	r3, r0, r3
 80037b4:	fbb3 f3f9 	udiv	r3, r3, r9
 80037b8:	fb09 a313 	mls	r3, r9, r3, r10
 80037bc:	011b      	lsls	r3, r3, #4
 80037be:	3332      	adds	r3, #50	; 0x32
 80037c0:	fbb3 f3f9 	udiv	r3, r3, r9
 80037c4:	f003 030f 	and.w	r3, r3, #15
 80037c8:	ea43 0308 	orr.w	r3, r3, r8
 80037cc:	e783      	b.n	80036d6 <UART_SetConfig+0xd2>
 80037ce:	f000 fb5d 	bl	8003e8c <HAL_RCC_GetPCLK1Freq>
 80037d2:	6867      	ldr	r7, [r4, #4]
 80037d4:	2519      	movs	r5, #25
 80037d6:	f04f 0964 	mov.w	r9, #100	; 0x64
 80037da:	fb05 f300 	mul.w	r3, r5, r0
 80037de:	00bf      	lsls	r7, r7, #2
 80037e0:	fbb3 f3f7 	udiv	r3, r3, r7
 80037e4:	fbb3 f3f9 	udiv	r3, r3, r9
 80037e8:	011f      	lsls	r7, r3, #4
 80037ea:	f000 fb4f 	bl	8003e8c <HAL_RCC_GetPCLK1Freq>
 80037ee:	6863      	ldr	r3, [r4, #4]
 80037f0:	4368      	muls	r0, r5
 80037f2:	009b      	lsls	r3, r3, #2
 80037f4:	fbb0 f8f3 	udiv	r8, r0, r3
 80037f8:	f000 fb48 	bl	8003e8c <HAL_RCC_GetPCLK1Freq>
 80037fc:	6863      	ldr	r3, [r4, #4]
 80037fe:	4368      	muls	r0, r5
 8003800:	009b      	lsls	r3, r3, #2
 8003802:	fbb0 f3f3 	udiv	r3, r0, r3
 8003806:	fbb3 f3f9 	udiv	r3, r3, r9
 800380a:	fb09 8313 	mls	r3, r9, r3, r8
 800380e:	011b      	lsls	r3, r3, #4
 8003810:	3332      	adds	r3, #50	; 0x32
 8003812:	fbb3 f3f9 	udiv	r3, r3, r9
 8003816:	f003 08f0 	and.w	r8, r3, #240	; 0xf0
 800381a:	f000 fb37 	bl	8003e8c <HAL_RCC_GetPCLK1Freq>
 800381e:	6862      	ldr	r2, [r4, #4]
 8003820:	4368      	muls	r0, r5
 8003822:	0092      	lsls	r2, r2, #2
 8003824:	fbb0 faf2 	udiv	r10, r0, r2
 8003828:	f000 fb30 	bl	8003e8c <HAL_RCC_GetPCLK1Freq>
 800382c:	e7bd      	b.n	80037aa <UART_SetConfig+0x1a6>
 800382e:	bf00      	nop
 8003830:	40011000 	.word	0x40011000
 8003834:	40011400 	.word	0x40011400

08003838 <HAL_UART_MspInit>:
 8003838:	4770      	bx	lr

0800383a <HAL_UART_Init>:
 800383a:	b510      	push	{r4, lr}
 800383c:	4604      	mov	r4, r0
 800383e:	b340      	cbz	r0, 8003892 <HAL_UART_Init+0x58>
 8003840:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8003844:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8003848:	b91b      	cbnz	r3, 8003852 <HAL_UART_Init+0x18>
 800384a:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
 800384e:	f7ff fff3 	bl	8003838 <HAL_UART_MspInit>
 8003852:	6822      	ldr	r2, [r4, #0]
 8003854:	2324      	movs	r3, #36	; 0x24
 8003856:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 800385a:	68d3      	ldr	r3, [r2, #12]
 800385c:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8003860:	60d3      	str	r3, [r2, #12]
 8003862:	4620      	mov	r0, r4
 8003864:	f7ff fece 	bl	8003604 <UART_SetConfig>
 8003868:	6823      	ldr	r3, [r4, #0]
 800386a:	691a      	ldr	r2, [r3, #16]
 800386c:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8003870:	611a      	str	r2, [r3, #16]
 8003872:	695a      	ldr	r2, [r3, #20]
 8003874:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8003878:	615a      	str	r2, [r3, #20]
 800387a:	68da      	ldr	r2, [r3, #12]
 800387c:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8003880:	60da      	str	r2, [r3, #12]
 8003882:	2000      	movs	r0, #0
 8003884:	2320      	movs	r3, #32
 8003886:	63e0      	str	r0, [r4, #60]	; 0x3c
 8003888:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 800388c:	f884 303a 	strb.w	r3, [r4, #58]	; 0x3a
 8003890:	bd10      	pop	{r4, pc}
 8003892:	2001      	movs	r0, #1
 8003894:	bd10      	pop	{r4, pc}

08003896 <HAL_TIM_OC_MspInit>:
 8003896:	4770      	bx	lr

08003898 <TIM_Base_SetConfig>:
 8003898:	4a22      	ldr	r2, [pc, #136]	; (8003924 <TIM_Base_SetConfig+0x8c>)
 800389a:	6803      	ldr	r3, [r0, #0]
 800389c:	4290      	cmp	r0, r2
 800389e:	d00e      	beq.n	80038be <TIM_Base_SetConfig+0x26>
 80038a0:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80038a4:	d00b      	beq.n	80038be <TIM_Base_SetConfig+0x26>
 80038a6:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80038aa:	4290      	cmp	r0, r2
 80038ac:	d007      	beq.n	80038be <TIM_Base_SetConfig+0x26>
 80038ae:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80038b2:	4290      	cmp	r0, r2
 80038b4:	d003      	beq.n	80038be <TIM_Base_SetConfig+0x26>
 80038b6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80038ba:	4290      	cmp	r0, r2
 80038bc:	d119      	bne.n	80038f2 <TIM_Base_SetConfig+0x5a>
 80038be:	684a      	ldr	r2, [r1, #4]
 80038c0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80038c4:	4313      	orrs	r3, r2
 80038c6:	4a17      	ldr	r2, [pc, #92]	; (8003924 <TIM_Base_SetConfig+0x8c>)
 80038c8:	4290      	cmp	r0, r2
 80038ca:	d104      	bne.n	80038d6 <TIM_Base_SetConfig+0x3e>
 80038cc:	68ca      	ldr	r2, [r1, #12]
 80038ce:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80038d2:	4313      	orrs	r3, r2
 80038d4:	e018      	b.n	8003908 <TIM_Base_SetConfig+0x70>
 80038d6:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80038da:	d0f7      	beq.n	80038cc <TIM_Base_SetConfig+0x34>
 80038dc:	4a12      	ldr	r2, [pc, #72]	; (8003928 <TIM_Base_SetConfig+0x90>)
 80038de:	4290      	cmp	r0, r2
 80038e0:	d0f4      	beq.n	80038cc <TIM_Base_SetConfig+0x34>
 80038e2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80038e6:	4290      	cmp	r0, r2
 80038e8:	d0f0      	beq.n	80038cc <TIM_Base_SetConfig+0x34>
 80038ea:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80038ee:	4290      	cmp	r0, r2
 80038f0:	d0ec      	beq.n	80038cc <TIM_Base_SetConfig+0x34>
 80038f2:	4a0e      	ldr	r2, [pc, #56]	; (800392c <TIM_Base_SetConfig+0x94>)
 80038f4:	4290      	cmp	r0, r2
 80038f6:	d0e9      	beq.n	80038cc <TIM_Base_SetConfig+0x34>
 80038f8:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80038fc:	4290      	cmp	r0, r2
 80038fe:	d0e5      	beq.n	80038cc <TIM_Base_SetConfig+0x34>
 8003900:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8003904:	4290      	cmp	r0, r2
 8003906:	d0e1      	beq.n	80038cc <TIM_Base_SetConfig+0x34>
 8003908:	6003      	str	r3, [r0, #0]
 800390a:	688b      	ldr	r3, [r1, #8]
 800390c:	62c3      	str	r3, [r0, #44]	; 0x2c
 800390e:	680b      	ldr	r3, [r1, #0]
 8003910:	6283      	str	r3, [r0, #40]	; 0x28
 8003912:	4b04      	ldr	r3, [pc, #16]	; (8003924 <TIM_Base_SetConfig+0x8c>)
 8003914:	4298      	cmp	r0, r3
 8003916:	bf04      	itt	eq
 8003918:	690b      	ldreq	r3, [r1, #16]
 800391a:	6303      	streq	r3, [r0, #48]	; 0x30
 800391c:	2301      	movs	r3, #1
 800391e:	6143      	str	r3, [r0, #20]
 8003920:	4770      	bx	lr
 8003922:	bf00      	nop
 8003924:	40010000 	.word	0x40010000
 8003928:	40000400 	.word	0x40000400
 800392c:	40014000 	.word	0x40014000

08003930 <HAL_TIM_OC_Init>:
 8003930:	b510      	push	{r4, lr}
 8003932:	4604      	mov	r4, r0
 8003934:	b1a0      	cbz	r0, 8003960 <HAL_TIM_OC_Init+0x30>
 8003936:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800393a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800393e:	b91b      	cbnz	r3, 8003948 <HAL_TIM_OC_Init+0x18>
 8003940:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
 8003944:	f7ff ffa7 	bl	8003896 <HAL_TIM_OC_MspInit>
 8003948:	2302      	movs	r3, #2
 800394a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 800394e:	6820      	ldr	r0, [r4, #0]
 8003950:	1d21      	adds	r1, r4, #4
 8003952:	f7ff ffa1 	bl	8003898 <TIM_Base_SetConfig>
 8003956:	2301      	movs	r3, #1
 8003958:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
 800395c:	2000      	movs	r0, #0
 800395e:	bd10      	pop	{r4, pc}
 8003960:	2001      	movs	r0, #1
 8003962:	bd10      	pop	{r4, pc}

08003964 <TIM_CCxChannelCmd>:
 8003964:	6a03      	ldr	r3, [r0, #32]
 8003966:	b510      	push	{r4, lr}
 8003968:	2401      	movs	r4, #1
 800396a:	408c      	lsls	r4, r1
 800396c:	ea23 0304 	bic.w	r3, r3, r4
 8003970:	6203      	str	r3, [r0, #32]
 8003972:	6a03      	ldr	r3, [r0, #32]
 8003974:	408a      	lsls	r2, r1
 8003976:	431a      	orrs	r2, r3
 8003978:	6202      	str	r2, [r0, #32]
 800397a:	bd10      	pop	{r4, pc}

0800397c <HAL_TIM_PWM_Start>:
 800397c:	b510      	push	{r4, lr}
 800397e:	4604      	mov	r4, r0
 8003980:	2201      	movs	r2, #1
 8003982:	6800      	ldr	r0, [r0, #0]
 8003984:	f7ff ffee 	bl	8003964 <TIM_CCxChannelCmd>
 8003988:	6823      	ldr	r3, [r4, #0]
 800398a:	4a06      	ldr	r2, [pc, #24]	; (80039a4 <HAL_TIM_PWM_Start+0x28>)
 800398c:	4293      	cmp	r3, r2
 800398e:	bf02      	ittt	eq
 8003990:	6c5a      	ldreq	r2, [r3, #68]	; 0x44
 8003992:	f442 4200 	orreq.w	r2, r2, #32768	; 0x8000
 8003996:	645a      	streq	r2, [r3, #68]	; 0x44
 8003998:	681a      	ldr	r2, [r3, #0]
 800399a:	f042 0201 	orr.w	r2, r2, #1
 800399e:	601a      	str	r2, [r3, #0]
 80039a0:	2000      	movs	r0, #0
 80039a2:	bd10      	pop	{r4, pc}
 80039a4:	40010000 	.word	0x40010000

080039a8 <HAL_TIM_OC_Start>:
 80039a8:	f7ff bfe8 	b.w	800397c <HAL_TIM_PWM_Start>

080039ac <HAL_PWR_EnterSLEEPMode>:
 80039ac:	4a06      	ldr	r2, [pc, #24]	; (80039c8 <HAL_PWR_EnterSLEEPMode+0x1c>)
 80039ae:	6913      	ldr	r3, [r2, #16]
 80039b0:	2901      	cmp	r1, #1
 80039b2:	f023 0304 	bic.w	r3, r3, #4
 80039b6:	6113      	str	r3, [r2, #16]
 80039b8:	d101      	bne.n	80039be <HAL_PWR_EnterSLEEPMode+0x12>
 80039ba:	bf30      	wfi
 80039bc:	4770      	bx	lr
 80039be:	bf40      	sev
 80039c0:	bf20      	wfe
 80039c2:	bf20      	wfe
 80039c4:	4770      	bx	lr
 80039c6:	bf00      	nop
 80039c8:	e000ed00 	.word	0xe000ed00

080039cc <HAL_RCC_OscConfig>:
 80039cc:	6803      	ldr	r3, [r0, #0]
 80039ce:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80039d0:	07dd      	lsls	r5, r3, #31
 80039d2:	4604      	mov	r4, r0
 80039d4:	d438      	bmi.n	8003a48 <HAL_RCC_OscConfig+0x7c>
 80039d6:	6823      	ldr	r3, [r4, #0]
 80039d8:	0798      	lsls	r0, r3, #30
 80039da:	d471      	bmi.n	8003ac0 <HAL_RCC_OscConfig+0xf4>
 80039dc:	6823      	ldr	r3, [r4, #0]
 80039de:	071e      	lsls	r6, r3, #28
 80039e0:	f100 80bd 	bmi.w	8003b5e <HAL_RCC_OscConfig+0x192>
 80039e4:	6823      	ldr	r3, [r4, #0]
 80039e6:	075d      	lsls	r5, r3, #29
 80039e8:	d528      	bpl.n	8003a3c <HAL_RCC_OscConfig+0x70>
 80039ea:	2300      	movs	r3, #0
 80039ec:	9301      	str	r3, [sp, #4]
 80039ee:	4ba8      	ldr	r3, [pc, #672]	; (8003c90 <HAL_RCC_OscConfig+0x2c4>)
 80039f0:	4da8      	ldr	r5, [pc, #672]	; (8003c94 <HAL_RCC_OscConfig+0x2c8>)
 80039f2:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80039f4:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80039f8:	641a      	str	r2, [r3, #64]	; 0x40
 80039fa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80039fc:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003a00:	9301      	str	r3, [sp, #4]
 8003a02:	9b01      	ldr	r3, [sp, #4]
 8003a04:	682b      	ldr	r3, [r5, #0]
 8003a06:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8003a0a:	602b      	str	r3, [r5, #0]
 8003a0c:	f7ff fdf2 	bl	80035f4 <HAL_GetTick>
 8003a10:	4606      	mov	r6, r0
 8003a12:	682b      	ldr	r3, [r5, #0]
 8003a14:	05da      	lsls	r2, r3, #23
 8003a16:	f140 80c4 	bpl.w	8003ba2 <HAL_RCC_OscConfig+0x1d6>
 8003a1a:	4b9f      	ldr	r3, [pc, #636]	; (8003c98 <HAL_RCC_OscConfig+0x2cc>)
 8003a1c:	7a22      	ldrb	r2, [r4, #8]
 8003a1e:	701a      	strb	r2, [r3, #0]
 8003a20:	68a3      	ldr	r3, [r4, #8]
 8003a22:	2b00      	cmp	r3, #0
 8003a24:	f000 80cb 	beq.w	8003bbe <HAL_RCC_OscConfig+0x1f2>
 8003a28:	f7ff fde4 	bl	80035f4 <HAL_GetTick>
 8003a2c:	4d98      	ldr	r5, [pc, #608]	; (8003c90 <HAL_RCC_OscConfig+0x2c4>)
 8003a2e:	4606      	mov	r6, r0
 8003a30:	f241 3788 	movw	r7, #5000	; 0x1388
 8003a34:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8003a36:	079b      	lsls	r3, r3, #30
 8003a38:	f140 80ba 	bpl.w	8003bb0 <HAL_RCC_OscConfig+0x1e4>
 8003a3c:	69a2      	ldr	r2, [r4, #24]
 8003a3e:	2a00      	cmp	r2, #0
 8003a40:	f040 80cd 	bne.w	8003bde <HAL_RCC_OscConfig+0x212>
 8003a44:	2000      	movs	r0, #0
 8003a46:	e015      	b.n	8003a74 <HAL_RCC_OscConfig+0xa8>
 8003a48:	4b91      	ldr	r3, [pc, #580]	; (8003c90 <HAL_RCC_OscConfig+0x2c4>)
 8003a4a:	689a      	ldr	r2, [r3, #8]
 8003a4c:	f002 020c 	and.w	r2, r2, #12
 8003a50:	2a04      	cmp	r2, #4
 8003a52:	d007      	beq.n	8003a64 <HAL_RCC_OscConfig+0x98>
 8003a54:	689a      	ldr	r2, [r3, #8]
 8003a56:	f002 020c 	and.w	r2, r2, #12
 8003a5a:	2a08      	cmp	r2, #8
 8003a5c:	d10c      	bne.n	8003a78 <HAL_RCC_OscConfig+0xac>
 8003a5e:	685b      	ldr	r3, [r3, #4]
 8003a60:	0259      	lsls	r1, r3, #9
 8003a62:	d509      	bpl.n	8003a78 <HAL_RCC_OscConfig+0xac>
 8003a64:	4b8a      	ldr	r3, [pc, #552]	; (8003c90 <HAL_RCC_OscConfig+0x2c4>)
 8003a66:	681b      	ldr	r3, [r3, #0]
 8003a68:	039a      	lsls	r2, r3, #14
 8003a6a:	d5b4      	bpl.n	80039d6 <HAL_RCC_OscConfig+0xa>
 8003a6c:	6863      	ldr	r3, [r4, #4]
 8003a6e:	2b00      	cmp	r3, #0
 8003a70:	d1b1      	bne.n	80039d6 <HAL_RCC_OscConfig+0xa>
 8003a72:	2001      	movs	r0, #1
 8003a74:	b003      	add	sp, #12
 8003a76:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003a78:	4b88      	ldr	r3, [pc, #544]	; (8003c9c <HAL_RCC_OscConfig+0x2d0>)
 8003a7a:	7922      	ldrb	r2, [r4, #4]
 8003a7c:	701a      	strb	r2, [r3, #0]
 8003a7e:	6863      	ldr	r3, [r4, #4]
 8003a80:	b17b      	cbz	r3, 8003aa2 <HAL_RCC_OscConfig+0xd6>
 8003a82:	f7ff fdb7 	bl	80035f4 <HAL_GetTick>
 8003a86:	4d82      	ldr	r5, [pc, #520]	; (8003c90 <HAL_RCC_OscConfig+0x2c4>)
 8003a88:	4606      	mov	r6, r0
 8003a8a:	f241 3788 	movw	r7, #5000	; 0x1388
 8003a8e:	682b      	ldr	r3, [r5, #0]
 8003a90:	039b      	lsls	r3, r3, #14
 8003a92:	d4a0      	bmi.n	80039d6 <HAL_RCC_OscConfig+0xa>
 8003a94:	f7ff fdae 	bl	80035f4 <HAL_GetTick>
 8003a98:	1b80      	subs	r0, r0, r6
 8003a9a:	42b8      	cmp	r0, r7
 8003a9c:	d9f7      	bls.n	8003a8e <HAL_RCC_OscConfig+0xc2>
 8003a9e:	2003      	movs	r0, #3
 8003aa0:	e7e8      	b.n	8003a74 <HAL_RCC_OscConfig+0xa8>
 8003aa2:	f7ff fda7 	bl	80035f4 <HAL_GetTick>
 8003aa6:	4d7a      	ldr	r5, [pc, #488]	; (8003c90 <HAL_RCC_OscConfig+0x2c4>)
 8003aa8:	4606      	mov	r6, r0
 8003aaa:	f241 3788 	movw	r7, #5000	; 0x1388
 8003aae:	682b      	ldr	r3, [r5, #0]
 8003ab0:	0398      	lsls	r0, r3, #14
 8003ab2:	d590      	bpl.n	80039d6 <HAL_RCC_OscConfig+0xa>
 8003ab4:	f7ff fd9e 	bl	80035f4 <HAL_GetTick>
 8003ab8:	1b80      	subs	r0, r0, r6
 8003aba:	42b8      	cmp	r0, r7
 8003abc:	d9f7      	bls.n	8003aae <HAL_RCC_OscConfig+0xe2>
 8003abe:	e7ee      	b.n	8003a9e <HAL_RCC_OscConfig+0xd2>
 8003ac0:	4b73      	ldr	r3, [pc, #460]	; (8003c90 <HAL_RCC_OscConfig+0x2c4>)
 8003ac2:	689a      	ldr	r2, [r3, #8]
 8003ac4:	f012 0f0c 	tst.w	r2, #12
 8003ac8:	d007      	beq.n	8003ada <HAL_RCC_OscConfig+0x10e>
 8003aca:	689a      	ldr	r2, [r3, #8]
 8003acc:	f002 020c 	and.w	r2, r2, #12
 8003ad0:	2a08      	cmp	r2, #8
 8003ad2:	d116      	bne.n	8003b02 <HAL_RCC_OscConfig+0x136>
 8003ad4:	685b      	ldr	r3, [r3, #4]
 8003ad6:	0259      	lsls	r1, r3, #9
 8003ad8:	d413      	bmi.n	8003b02 <HAL_RCC_OscConfig+0x136>
 8003ada:	4b6d      	ldr	r3, [pc, #436]	; (8003c90 <HAL_RCC_OscConfig+0x2c4>)
 8003adc:	681a      	ldr	r2, [r3, #0]
 8003ade:	0792      	lsls	r2, r2, #30
 8003ae0:	d502      	bpl.n	8003ae8 <HAL_RCC_OscConfig+0x11c>
 8003ae2:	68e2      	ldr	r2, [r4, #12]
 8003ae4:	2a01      	cmp	r2, #1
 8003ae6:	d1c4      	bne.n	8003a72 <HAL_RCC_OscConfig+0xa6>
 8003ae8:	6818      	ldr	r0, [r3, #0]
 8003aea:	22f8      	movs	r2, #248	; 0xf8
 8003aec:	fa92 f2a2 	rbit	r2, r2
 8003af0:	fab2 f182 	clz	r1, r2
 8003af4:	6922      	ldr	r2, [r4, #16]
 8003af6:	408a      	lsls	r2, r1
 8003af8:	f020 01f8 	bic.w	r1, r0, #248	; 0xf8
 8003afc:	430a      	orrs	r2, r1
 8003afe:	601a      	str	r2, [r3, #0]
 8003b00:	e76c      	b.n	80039dc <HAL_RCC_OscConfig+0x10>
 8003b02:	68e2      	ldr	r2, [r4, #12]
 8003b04:	4b66      	ldr	r3, [pc, #408]	; (8003ca0 <HAL_RCC_OscConfig+0x2d4>)
 8003b06:	b1da      	cbz	r2, 8003b40 <HAL_RCC_OscConfig+0x174>
 8003b08:	2201      	movs	r2, #1
 8003b0a:	601a      	str	r2, [r3, #0]
 8003b0c:	f7ff fd72 	bl	80035f4 <HAL_GetTick>
 8003b10:	4d5f      	ldr	r5, [pc, #380]	; (8003c90 <HAL_RCC_OscConfig+0x2c4>)
 8003b12:	4606      	mov	r6, r0
 8003b14:	682b      	ldr	r3, [r5, #0]
 8003b16:	079b      	lsls	r3, r3, #30
 8003b18:	d50c      	bpl.n	8003b34 <HAL_RCC_OscConfig+0x168>
 8003b1a:	6829      	ldr	r1, [r5, #0]
 8003b1c:	23f8      	movs	r3, #248	; 0xf8
 8003b1e:	fa93 f3a3 	rbit	r3, r3
 8003b22:	fab3 f283 	clz	r2, r3
 8003b26:	6923      	ldr	r3, [r4, #16]
 8003b28:	4093      	lsls	r3, r2
 8003b2a:	f021 02f8 	bic.w	r2, r1, #248	; 0xf8
 8003b2e:	4313      	orrs	r3, r2
 8003b30:	602b      	str	r3, [r5, #0]
 8003b32:	e753      	b.n	80039dc <HAL_RCC_OscConfig+0x10>
 8003b34:	f7ff fd5e 	bl	80035f4 <HAL_GetTick>
 8003b38:	1b80      	subs	r0, r0, r6
 8003b3a:	2802      	cmp	r0, #2
 8003b3c:	d9ea      	bls.n	8003b14 <HAL_RCC_OscConfig+0x148>
 8003b3e:	e7ae      	b.n	8003a9e <HAL_RCC_OscConfig+0xd2>
 8003b40:	601a      	str	r2, [r3, #0]
 8003b42:	f7ff fd57 	bl	80035f4 <HAL_GetTick>
 8003b46:	4d52      	ldr	r5, [pc, #328]	; (8003c90 <HAL_RCC_OscConfig+0x2c4>)
 8003b48:	4606      	mov	r6, r0
 8003b4a:	682b      	ldr	r3, [r5, #0]
 8003b4c:	079f      	lsls	r7, r3, #30
 8003b4e:	f57f af45 	bpl.w	80039dc <HAL_RCC_OscConfig+0x10>
 8003b52:	f7ff fd4f 	bl	80035f4 <HAL_GetTick>
 8003b56:	1b80      	subs	r0, r0, r6
 8003b58:	2802      	cmp	r0, #2
 8003b5a:	d9f6      	bls.n	8003b4a <HAL_RCC_OscConfig+0x17e>
 8003b5c:	e79f      	b.n	8003a9e <HAL_RCC_OscConfig+0xd2>
 8003b5e:	6962      	ldr	r2, [r4, #20]
 8003b60:	4b50      	ldr	r3, [pc, #320]	; (8003ca4 <HAL_RCC_OscConfig+0x2d8>)
 8003b62:	b17a      	cbz	r2, 8003b84 <HAL_RCC_OscConfig+0x1b8>
 8003b64:	2201      	movs	r2, #1
 8003b66:	601a      	str	r2, [r3, #0]
 8003b68:	f7ff fd44 	bl	80035f4 <HAL_GetTick>
 8003b6c:	4d48      	ldr	r5, [pc, #288]	; (8003c90 <HAL_RCC_OscConfig+0x2c4>)
 8003b6e:	4606      	mov	r6, r0
 8003b70:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8003b72:	0798      	lsls	r0, r3, #30
 8003b74:	f53f af36 	bmi.w	80039e4 <HAL_RCC_OscConfig+0x18>
 8003b78:	f7ff fd3c 	bl	80035f4 <HAL_GetTick>
 8003b7c:	1b80      	subs	r0, r0, r6
 8003b7e:	2802      	cmp	r0, #2
 8003b80:	d9f6      	bls.n	8003b70 <HAL_RCC_OscConfig+0x1a4>
 8003b82:	e78c      	b.n	8003a9e <HAL_RCC_OscConfig+0xd2>
 8003b84:	601a      	str	r2, [r3, #0]
 8003b86:	f7ff fd35 	bl	80035f4 <HAL_GetTick>
 8003b8a:	4d41      	ldr	r5, [pc, #260]	; (8003c90 <HAL_RCC_OscConfig+0x2c4>)
 8003b8c:	4606      	mov	r6, r0
 8003b8e:	6f6b      	ldr	r3, [r5, #116]	; 0x74
 8003b90:	0799      	lsls	r1, r3, #30
 8003b92:	f57f af27 	bpl.w	80039e4 <HAL_RCC_OscConfig+0x18>
 8003b96:	f7ff fd2d 	bl	80035f4 <HAL_GetTick>
 8003b9a:	1b80      	subs	r0, r0, r6
 8003b9c:	2802      	cmp	r0, #2
 8003b9e:	d9f6      	bls.n	8003b8e <HAL_RCC_OscConfig+0x1c2>
 8003ba0:	e77d      	b.n	8003a9e <HAL_RCC_OscConfig+0xd2>
 8003ba2:	f7ff fd27 	bl	80035f4 <HAL_GetTick>
 8003ba6:	1b80      	subs	r0, r0, r6
 8003ba8:	2802      	cmp	r0, #2
 8003baa:	f67f af32 	bls.w	8003a12 <HAL_RCC_OscConfig+0x46>
 8003bae:	e776      	b.n	8003a9e <HAL_RCC_OscConfig+0xd2>
 8003bb0:	f7ff fd20 	bl	80035f4 <HAL_GetTick>
 8003bb4:	1b80      	subs	r0, r0, r6
 8003bb6:	42b8      	cmp	r0, r7
 8003bb8:	f67f af3c 	bls.w	8003a34 <HAL_RCC_OscConfig+0x68>
 8003bbc:	e76f      	b.n	8003a9e <HAL_RCC_OscConfig+0xd2>
 8003bbe:	f7ff fd19 	bl	80035f4 <HAL_GetTick>
 8003bc2:	4d33      	ldr	r5, [pc, #204]	; (8003c90 <HAL_RCC_OscConfig+0x2c4>)
 8003bc4:	4606      	mov	r6, r0
 8003bc6:	f241 3788 	movw	r7, #5000	; 0x1388
 8003bca:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8003bcc:	0798      	lsls	r0, r3, #30
 8003bce:	f57f af35 	bpl.w	8003a3c <HAL_RCC_OscConfig+0x70>
 8003bd2:	f7ff fd0f 	bl	80035f4 <HAL_GetTick>
 8003bd6:	1b80      	subs	r0, r0, r6
 8003bd8:	42b8      	cmp	r0, r7
 8003bda:	d9f6      	bls.n	8003bca <HAL_RCC_OscConfig+0x1fe>
 8003bdc:	e75f      	b.n	8003a9e <HAL_RCC_OscConfig+0xd2>
 8003bde:	4d2c      	ldr	r5, [pc, #176]	; (8003c90 <HAL_RCC_OscConfig+0x2c4>)
 8003be0:	68ab      	ldr	r3, [r5, #8]
 8003be2:	f003 030c 	and.w	r3, r3, #12
 8003be6:	2b08      	cmp	r3, #8
 8003be8:	f43f af43 	beq.w	8003a72 <HAL_RCC_OscConfig+0xa6>
 8003bec:	4e2e      	ldr	r6, [pc, #184]	; (8003ca8 <HAL_RCC_OscConfig+0x2dc>)
 8003bee:	2300      	movs	r3, #0
 8003bf0:	2a02      	cmp	r2, #2
 8003bf2:	6033      	str	r3, [r6, #0]
 8003bf4:	d13e      	bne.n	8003c74 <HAL_RCC_OscConfig+0x2a8>
 8003bf6:	f7ff fcfd 	bl	80035f4 <HAL_GetTick>
 8003bfa:	4607      	mov	r7, r0
 8003bfc:	682b      	ldr	r3, [r5, #0]
 8003bfe:	0199      	lsls	r1, r3, #6
 8003c00:	d432      	bmi.n	8003c68 <HAL_RCC_OscConfig+0x29c>
 8003c02:	f647 77c0 	movw	r7, #32704	; 0x7fc0
 8003c06:	fa97 f7a7 	rbit	r7, r7
 8003c0a:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 8003c0e:	fab7 f787 	clz	r7, r7
 8003c12:	fa92 f2a2 	rbit	r2, r2
 8003c16:	f04f 6170 	mov.w	r1, #251658240	; 0xf000000
 8003c1a:	fab2 f082 	clz	r0, r2
 8003c1e:	fa91 f1a1 	rbit	r1, r1
 8003c22:	6a22      	ldr	r2, [r4, #32]
 8003c24:	69e3      	ldr	r3, [r4, #28]
 8003c26:	4313      	orrs	r3, r2
 8003c28:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8003c2a:	fa02 f707 	lsl.w	r7, r2, r7
 8003c2e:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8003c30:	0852      	lsrs	r2, r2, #1
 8003c32:	3a01      	subs	r2, #1
 8003c34:	4082      	lsls	r2, r0
 8003c36:	433b      	orrs	r3, r7
 8003c38:	4313      	orrs	r3, r2
 8003c3a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8003c3c:	4c14      	ldr	r4, [pc, #80]	; (8003c90 <HAL_RCC_OscConfig+0x2c4>)
 8003c3e:	fab1 f181 	clz	r1, r1
 8003c42:	fa02 f101 	lsl.w	r1, r2, r1
 8003c46:	430b      	orrs	r3, r1
 8003c48:	606b      	str	r3, [r5, #4]
 8003c4a:	2301      	movs	r3, #1
 8003c4c:	6033      	str	r3, [r6, #0]
 8003c4e:	f7ff fcd1 	bl	80035f4 <HAL_GetTick>
 8003c52:	4605      	mov	r5, r0
 8003c54:	6823      	ldr	r3, [r4, #0]
 8003c56:	019a      	lsls	r2, r3, #6
 8003c58:	f53f aef4 	bmi.w	8003a44 <HAL_RCC_OscConfig+0x78>
 8003c5c:	f7ff fcca 	bl	80035f4 <HAL_GetTick>
 8003c60:	1b40      	subs	r0, r0, r5
 8003c62:	2802      	cmp	r0, #2
 8003c64:	d9f6      	bls.n	8003c54 <HAL_RCC_OscConfig+0x288>
 8003c66:	e71a      	b.n	8003a9e <HAL_RCC_OscConfig+0xd2>
 8003c68:	f7ff fcc4 	bl	80035f4 <HAL_GetTick>
 8003c6c:	1bc0      	subs	r0, r0, r7
 8003c6e:	2802      	cmp	r0, #2
 8003c70:	d9c4      	bls.n	8003bfc <HAL_RCC_OscConfig+0x230>
 8003c72:	e714      	b.n	8003a9e <HAL_RCC_OscConfig+0xd2>
 8003c74:	f7ff fcbe 	bl	80035f4 <HAL_GetTick>
 8003c78:	4604      	mov	r4, r0
 8003c7a:	682b      	ldr	r3, [r5, #0]
 8003c7c:	019b      	lsls	r3, r3, #6
 8003c7e:	f57f aee1 	bpl.w	8003a44 <HAL_RCC_OscConfig+0x78>
 8003c82:	f7ff fcb7 	bl	80035f4 <HAL_GetTick>
 8003c86:	1b00      	subs	r0, r0, r4
 8003c88:	2802      	cmp	r0, #2
 8003c8a:	d9f6      	bls.n	8003c7a <HAL_RCC_OscConfig+0x2ae>
 8003c8c:	e707      	b.n	8003a9e <HAL_RCC_OscConfig+0xd2>
 8003c8e:	bf00      	nop
 8003c90:	40023800 	.word	0x40023800
 8003c94:	40007000 	.word	0x40007000
 8003c98:	40023870 	.word	0x40023870
 8003c9c:	40023802 	.word	0x40023802
 8003ca0:	42470000 	.word	0x42470000
 8003ca4:	42470e80 	.word	0x42470e80
 8003ca8:	42470060 	.word	0x42470060

08003cac <HAL_RCC_GetSysClockFreq>:
 8003cac:	4a19      	ldr	r2, [pc, #100]	; (8003d14 <HAL_RCC_GetSysClockFreq+0x68>)
 8003cae:	6893      	ldr	r3, [r2, #8]
 8003cb0:	f003 030c 	and.w	r3, r3, #12
 8003cb4:	2b04      	cmp	r3, #4
 8003cb6:	b510      	push	{r4, lr}
 8003cb8:	d003      	beq.n	8003cc2 <HAL_RCC_GetSysClockFreq+0x16>
 8003cba:	2b08      	cmp	r3, #8
 8003cbc:	d003      	beq.n	8003cc6 <HAL_RCC_GetSysClockFreq+0x1a>
 8003cbe:	4816      	ldr	r0, [pc, #88]	; (8003d18 <HAL_RCC_GetSysClockFreq+0x6c>)
 8003cc0:	bd10      	pop	{r4, pc}
 8003cc2:	4816      	ldr	r0, [pc, #88]	; (8003d1c <HAL_RCC_GetSysClockFreq+0x70>)
 8003cc4:	bd10      	pop	{r4, pc}
 8003cc6:	6851      	ldr	r1, [r2, #4]
 8003cc8:	6853      	ldr	r3, [r2, #4]
 8003cca:	f001 013f 	and.w	r1, r1, #63	; 0x3f
 8003cce:	f413 0f80 	tst.w	r3, #4194304	; 0x400000
 8003cd2:	f647 74c0 	movw	r4, #32704	; 0x7fc0
 8003cd6:	6853      	ldr	r3, [r2, #4]
 8003cd8:	fa94 f0a4 	rbit	r0, r4
 8003cdc:	fab0 f080 	clz	r0, r0
 8003ce0:	ea03 0304 	and.w	r3, r3, r4
 8003ce4:	fa23 f300 	lsr.w	r3, r3, r0
 8003ce8:	bf14      	ite	ne
 8003cea:	480c      	ldrne	r0, [pc, #48]	; (8003d1c <HAL_RCC_GetSysClockFreq+0x70>)
 8003cec:	480a      	ldreq	r0, [pc, #40]	; (8003d18 <HAL_RCC_GetSysClockFreq+0x6c>)
 8003cee:	fbb0 f0f1 	udiv	r0, r0, r1
 8003cf2:	4358      	muls	r0, r3
 8003cf4:	4b07      	ldr	r3, [pc, #28]	; (8003d14 <HAL_RCC_GetSysClockFreq+0x68>)
 8003cf6:	f44f 3240 	mov.w	r2, #196608	; 0x30000
 8003cfa:	685b      	ldr	r3, [r3, #4]
 8003cfc:	fa92 f2a2 	rbit	r2, r2
 8003d00:	fab2 f282 	clz	r2, r2
 8003d04:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8003d08:	40d3      	lsrs	r3, r2
 8003d0a:	3301      	adds	r3, #1
 8003d0c:	005b      	lsls	r3, r3, #1
 8003d0e:	fbb0 f0f3 	udiv	r0, r0, r3
 8003d12:	bd10      	pop	{r4, pc}
 8003d14:	40023800 	.word	0x40023800
 8003d18:	00f42400 	.word	0x00f42400
 8003d1c:	007a1200 	.word	0x007a1200

08003d20 <HAL_RCC_ClockConfig>:
 8003d20:	4b56      	ldr	r3, [pc, #344]	; (8003e7c <HAL_RCC_ClockConfig+0x15c>)
 8003d22:	681a      	ldr	r2, [r3, #0]
 8003d24:	f002 020f 	and.w	r2, r2, #15
 8003d28:	428a      	cmp	r2, r1
 8003d2a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003d2e:	4605      	mov	r5, r0
 8003d30:	460e      	mov	r6, r1
 8003d32:	d330      	bcc.n	8003d96 <HAL_RCC_ClockConfig+0x76>
 8003d34:	682a      	ldr	r2, [r5, #0]
 8003d36:	0794      	lsls	r4, r2, #30
 8003d38:	d437      	bmi.n	8003daa <HAL_RCC_ClockConfig+0x8a>
 8003d3a:	07d0      	lsls	r0, r2, #31
 8003d3c:	d43d      	bmi.n	8003dba <HAL_RCC_ClockConfig+0x9a>
 8003d3e:	4b4f      	ldr	r3, [pc, #316]	; (8003e7c <HAL_RCC_ClockConfig+0x15c>)
 8003d40:	681a      	ldr	r2, [r3, #0]
 8003d42:	f002 020f 	and.w	r2, r2, #15
 8003d46:	4296      	cmp	r6, r2
 8003d48:	f0c0 8088 	bcc.w	8003e5c <HAL_RCC_ClockConfig+0x13c>
 8003d4c:	682a      	ldr	r2, [r5, #0]
 8003d4e:	0751      	lsls	r1, r2, #29
 8003d50:	f100 808c 	bmi.w	8003e6c <HAL_RCC_ClockConfig+0x14c>
 8003d54:	0713      	lsls	r3, r2, #28
 8003d56:	d507      	bpl.n	8003d68 <HAL_RCC_ClockConfig+0x48>
 8003d58:	4a49      	ldr	r2, [pc, #292]	; (8003e80 <HAL_RCC_ClockConfig+0x160>)
 8003d5a:	6929      	ldr	r1, [r5, #16]
 8003d5c:	6893      	ldr	r3, [r2, #8]
 8003d5e:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8003d62:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8003d66:	6093      	str	r3, [r2, #8]
 8003d68:	f7ff ffa0 	bl	8003cac <HAL_RCC_GetSysClockFreq>
 8003d6c:	4b44      	ldr	r3, [pc, #272]	; (8003e80 <HAL_RCC_ClockConfig+0x160>)
 8003d6e:	22f0      	movs	r2, #240	; 0xf0
 8003d70:	689b      	ldr	r3, [r3, #8]
 8003d72:	fa92 f2a2 	rbit	r2, r2
 8003d76:	fab2 f282 	clz	r2, r2
 8003d7a:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8003d7e:	40d3      	lsrs	r3, r2
 8003d80:	4a40      	ldr	r2, [pc, #256]	; (8003e84 <HAL_RCC_ClockConfig+0x164>)
 8003d82:	5cd3      	ldrb	r3, [r2, r3]
 8003d84:	40d8      	lsrs	r0, r3
 8003d86:	4b40      	ldr	r3, [pc, #256]	; (8003e88 <HAL_RCC_ClockConfig+0x168>)
 8003d88:	6018      	str	r0, [r3, #0]
 8003d8a:	200f      	movs	r0, #15
 8003d8c:	f7fe feb6 	bl	8002afc <HAL_InitTick>
 8003d90:	2000      	movs	r0, #0
 8003d92:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003d96:	b2ca      	uxtb	r2, r1
 8003d98:	701a      	strb	r2, [r3, #0]
 8003d9a:	681b      	ldr	r3, [r3, #0]
 8003d9c:	f003 030f 	and.w	r3, r3, #15
 8003da0:	4299      	cmp	r1, r3
 8003da2:	d0c7      	beq.n	8003d34 <HAL_RCC_ClockConfig+0x14>
 8003da4:	2001      	movs	r0, #1
 8003da6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003daa:	4935      	ldr	r1, [pc, #212]	; (8003e80 <HAL_RCC_ClockConfig+0x160>)
 8003dac:	68a8      	ldr	r0, [r5, #8]
 8003dae:	688b      	ldr	r3, [r1, #8]
 8003db0:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8003db4:	4303      	orrs	r3, r0
 8003db6:	608b      	str	r3, [r1, #8]
 8003db8:	e7bf      	b.n	8003d3a <HAL_RCC_ClockConfig+0x1a>
 8003dba:	686a      	ldr	r2, [r5, #4]
 8003dbc:	4b30      	ldr	r3, [pc, #192]	; (8003e80 <HAL_RCC_ClockConfig+0x160>)
 8003dbe:	2a01      	cmp	r2, #1
 8003dc0:	d11e      	bne.n	8003e00 <HAL_RCC_ClockConfig+0xe0>
 8003dc2:	681b      	ldr	r3, [r3, #0]
 8003dc4:	f413 3f00 	tst.w	r3, #131072	; 0x20000
 8003dc8:	d0ec      	beq.n	8003da4 <HAL_RCC_ClockConfig+0x84>
 8003dca:	4c2d      	ldr	r4, [pc, #180]	; (8003e80 <HAL_RCC_ClockConfig+0x160>)
 8003dcc:	68a3      	ldr	r3, [r4, #8]
 8003dce:	f023 0303 	bic.w	r3, r3, #3
 8003dd2:	4313      	orrs	r3, r2
 8003dd4:	60a3      	str	r3, [r4, #8]
 8003dd6:	f7ff fc0d 	bl	80035f4 <HAL_GetTick>
 8003dda:	686b      	ldr	r3, [r5, #4]
 8003ddc:	2b01      	cmp	r3, #1
 8003dde:	4607      	mov	r7, r0
 8003de0:	f241 3888 	movw	r8, #5000	; 0x1388
 8003de4:	d116      	bne.n	8003e14 <HAL_RCC_ClockConfig+0xf4>
 8003de6:	68a3      	ldr	r3, [r4, #8]
 8003de8:	f003 030c 	and.w	r3, r3, #12
 8003dec:	2b04      	cmp	r3, #4
 8003dee:	d0a6      	beq.n	8003d3e <HAL_RCC_ClockConfig+0x1e>
 8003df0:	f7ff fc00 	bl	80035f4 <HAL_GetTick>
 8003df4:	1bc0      	subs	r0, r0, r7
 8003df6:	4540      	cmp	r0, r8
 8003df8:	d9f5      	bls.n	8003de6 <HAL_RCC_ClockConfig+0xc6>
 8003dfa:	2003      	movs	r0, #3
 8003dfc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003e00:	1e91      	subs	r1, r2, #2
 8003e02:	2901      	cmp	r1, #1
 8003e04:	681b      	ldr	r3, [r3, #0]
 8003e06:	d802      	bhi.n	8003e0e <HAL_RCC_ClockConfig+0xee>
 8003e08:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8003e0c:	e7dc      	b.n	8003dc8 <HAL_RCC_ClockConfig+0xa8>
 8003e0e:	f013 0f02 	tst.w	r3, #2
 8003e12:	e7d9      	b.n	8003dc8 <HAL_RCC_ClockConfig+0xa8>
 8003e14:	2b02      	cmp	r3, #2
 8003e16:	d10a      	bne.n	8003e2e <HAL_RCC_ClockConfig+0x10e>
 8003e18:	68a3      	ldr	r3, [r4, #8]
 8003e1a:	f003 030c 	and.w	r3, r3, #12
 8003e1e:	2b08      	cmp	r3, #8
 8003e20:	d08d      	beq.n	8003d3e <HAL_RCC_ClockConfig+0x1e>
 8003e22:	f7ff fbe7 	bl	80035f4 <HAL_GetTick>
 8003e26:	1bc0      	subs	r0, r0, r7
 8003e28:	4540      	cmp	r0, r8
 8003e2a:	d9f5      	bls.n	8003e18 <HAL_RCC_ClockConfig+0xf8>
 8003e2c:	e7e5      	b.n	8003dfa <HAL_RCC_ClockConfig+0xda>
 8003e2e:	2b03      	cmp	r3, #3
 8003e30:	d10f      	bne.n	8003e52 <HAL_RCC_ClockConfig+0x132>
 8003e32:	68a3      	ldr	r3, [r4, #8]
 8003e34:	f003 030c 	and.w	r3, r3, #12
 8003e38:	2b0c      	cmp	r3, #12
 8003e3a:	d080      	beq.n	8003d3e <HAL_RCC_ClockConfig+0x1e>
 8003e3c:	f7ff fbda 	bl	80035f4 <HAL_GetTick>
 8003e40:	1bc0      	subs	r0, r0, r7
 8003e42:	4540      	cmp	r0, r8
 8003e44:	d9f5      	bls.n	8003e32 <HAL_RCC_ClockConfig+0x112>
 8003e46:	e7d8      	b.n	8003dfa <HAL_RCC_ClockConfig+0xda>
 8003e48:	f7ff fbd4 	bl	80035f4 <HAL_GetTick>
 8003e4c:	1bc0      	subs	r0, r0, r7
 8003e4e:	4540      	cmp	r0, r8
 8003e50:	d8d3      	bhi.n	8003dfa <HAL_RCC_ClockConfig+0xda>
 8003e52:	68a3      	ldr	r3, [r4, #8]
 8003e54:	f013 0f0c 	tst.w	r3, #12
 8003e58:	d1f6      	bne.n	8003e48 <HAL_RCC_ClockConfig+0x128>
 8003e5a:	e770      	b.n	8003d3e <HAL_RCC_ClockConfig+0x1e>
 8003e5c:	b2f2      	uxtb	r2, r6
 8003e5e:	701a      	strb	r2, [r3, #0]
 8003e60:	681b      	ldr	r3, [r3, #0]
 8003e62:	f003 030f 	and.w	r3, r3, #15
 8003e66:	429e      	cmp	r6, r3
 8003e68:	d19c      	bne.n	8003da4 <HAL_RCC_ClockConfig+0x84>
 8003e6a:	e76f      	b.n	8003d4c <HAL_RCC_ClockConfig+0x2c>
 8003e6c:	4904      	ldr	r1, [pc, #16]	; (8003e80 <HAL_RCC_ClockConfig+0x160>)
 8003e6e:	68e8      	ldr	r0, [r5, #12]
 8003e70:	688b      	ldr	r3, [r1, #8]
 8003e72:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8003e76:	4303      	orrs	r3, r0
 8003e78:	608b      	str	r3, [r1, #8]
 8003e7a:	e76b      	b.n	8003d54 <HAL_RCC_ClockConfig+0x34>
 8003e7c:	40023c00 	.word	0x40023c00
 8003e80:	40023800 	.word	0x40023800
 8003e84:	08005d74 	.word	0x08005d74
 8003e88:	200001b0 	.word	0x200001b0

08003e8c <HAL_RCC_GetPCLK1Freq>:
 8003e8c:	4b08      	ldr	r3, [pc, #32]	; (8003eb0 <HAL_RCC_GetPCLK1Freq+0x24>)
 8003e8e:	f44f 52e0 	mov.w	r2, #7168	; 0x1c00
 8003e92:	689b      	ldr	r3, [r3, #8]
 8003e94:	fa92 f2a2 	rbit	r2, r2
 8003e98:	fab2 f282 	clz	r2, r2
 8003e9c:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8003ea0:	40d3      	lsrs	r3, r2
 8003ea2:	4a04      	ldr	r2, [pc, #16]	; (8003eb4 <HAL_RCC_GetPCLK1Freq+0x28>)
 8003ea4:	5cd3      	ldrb	r3, [r2, r3]
 8003ea6:	4a04      	ldr	r2, [pc, #16]	; (8003eb8 <HAL_RCC_GetPCLK1Freq+0x2c>)
 8003ea8:	6810      	ldr	r0, [r2, #0]
 8003eaa:	40d8      	lsrs	r0, r3
 8003eac:	4770      	bx	lr
 8003eae:	bf00      	nop
 8003eb0:	40023800 	.word	0x40023800
 8003eb4:	08005d74 	.word	0x08005d74
 8003eb8:	200001b0 	.word	0x200001b0

08003ebc <HAL_RCC_GetPCLK2Freq>:
 8003ebc:	4b08      	ldr	r3, [pc, #32]	; (8003ee0 <HAL_RCC_GetPCLK2Freq+0x24>)
 8003ebe:	f44f 4260 	mov.w	r2, #57344	; 0xe000
 8003ec2:	689b      	ldr	r3, [r3, #8]
 8003ec4:	fa92 f2a2 	rbit	r2, r2
 8003ec8:	fab2 f282 	clz	r2, r2
 8003ecc:	f403 4360 	and.w	r3, r3, #57344	; 0xe000
 8003ed0:	40d3      	lsrs	r3, r2
 8003ed2:	4a04      	ldr	r2, [pc, #16]	; (8003ee4 <HAL_RCC_GetPCLK2Freq+0x28>)
 8003ed4:	5cd3      	ldrb	r3, [r2, r3]
 8003ed6:	4a04      	ldr	r2, [pc, #16]	; (8003ee8 <HAL_RCC_GetPCLK2Freq+0x2c>)
 8003ed8:	6810      	ldr	r0, [r2, #0]
 8003eda:	40d8      	lsrs	r0, r3
 8003edc:	4770      	bx	lr
 8003ede:	bf00      	nop
 8003ee0:	40023800 	.word	0x40023800
 8003ee4:	08005d74 	.word	0x08005d74
 8003ee8:	200001b0 	.word	0x200001b0

08003eec <HAL_RCC_GetClockConfig>:
 8003eec:	230f      	movs	r3, #15
 8003eee:	6003      	str	r3, [r0, #0]
 8003ef0:	4b0b      	ldr	r3, [pc, #44]	; (8003f20 <HAL_RCC_GetClockConfig+0x34>)
 8003ef2:	689a      	ldr	r2, [r3, #8]
 8003ef4:	f002 0203 	and.w	r2, r2, #3
 8003ef8:	6042      	str	r2, [r0, #4]
 8003efa:	689a      	ldr	r2, [r3, #8]
 8003efc:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 8003f00:	6082      	str	r2, [r0, #8]
 8003f02:	689a      	ldr	r2, [r3, #8]
 8003f04:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 8003f08:	60c2      	str	r2, [r0, #12]
 8003f0a:	689b      	ldr	r3, [r3, #8]
 8003f0c:	08db      	lsrs	r3, r3, #3
 8003f0e:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8003f12:	6103      	str	r3, [r0, #16]
 8003f14:	4b03      	ldr	r3, [pc, #12]	; (8003f24 <HAL_RCC_GetClockConfig+0x38>)
 8003f16:	681b      	ldr	r3, [r3, #0]
 8003f18:	f003 030f 	and.w	r3, r3, #15
 8003f1c:	600b      	str	r3, [r1, #0]
 8003f1e:	4770      	bx	lr
 8003f20:	40023800 	.word	0x40023800
 8003f24:	40023c00 	.word	0x40023c00

08003f28 <mbed::Timer::start()>:
 8003f28:	b510      	push	{r4, lr}
 8003f2a:	4604      	mov	r4, r0
 8003f2c:	f7fd fafa 	bl	8001524 <core_util_critical_section_enter>
 8003f30:	6823      	ldr	r3, [r4, #0]
 8003f32:	b92b      	cbnz	r3, 8003f40 <mbed::Timer::start()+0x18>
 8003f34:	68e0      	ldr	r0, [r4, #12]
 8003f36:	f7fd faa0 	bl	800147a <ticker_read>
 8003f3a:	2301      	movs	r3, #1
 8003f3c:	6060      	str	r0, [r4, #4]
 8003f3e:	6023      	str	r3, [r4, #0]
 8003f40:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003f44:	f7fd bb04 	b.w	8001550 <core_util_critical_section_exit>

08003f48 <mbed::Timer::slicetime()>:
 8003f48:	b538      	push	{r3, r4, r5, lr}
 8003f4a:	4605      	mov	r5, r0
 8003f4c:	f7fd faea 	bl	8001524 <core_util_critical_section_enter>
 8003f50:	682c      	ldr	r4, [r5, #0]
 8003f52:	b124      	cbz	r4, 8003f5e <mbed::Timer::slicetime()+0x16>
 8003f54:	68e8      	ldr	r0, [r5, #12]
 8003f56:	f7fd fa90 	bl	800147a <ticker_read>
 8003f5a:	686c      	ldr	r4, [r5, #4]
 8003f5c:	1b04      	subs	r4, r0, r4
 8003f5e:	f7fd faf7 	bl	8001550 <core_util_critical_section_exit>
 8003f62:	4620      	mov	r0, r4
 8003f64:	bd38      	pop	{r3, r4, r5, pc}

08003f66 <mbed::Timer::read_us()>:
 8003f66:	b538      	push	{r3, r4, r5, lr}
 8003f68:	4605      	mov	r5, r0
 8003f6a:	f7fd fadb 	bl	8001524 <core_util_critical_section_enter>
 8003f6e:	4628      	mov	r0, r5
 8003f70:	68ac      	ldr	r4, [r5, #8]
 8003f72:	f7ff ffe9 	bl	8003f48 <mbed::Timer::slicetime()>
 8003f76:	4404      	add	r4, r0
 8003f78:	f7fd faea 	bl	8001550 <core_util_critical_section_exit>
 8003f7c:	4620      	mov	r0, r4
 8003f7e:	bd38      	pop	{r3, r4, r5, pc}

08003f80 <mbed::Timer::read_ms()>:
 8003f80:	b508      	push	{r3, lr}
 8003f82:	f7ff fff0 	bl	8003f66 <mbed::Timer::read_us()>
 8003f86:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8003f8a:	fb90 f0f3 	sdiv	r0, r0, r3
 8003f8e:	bd08      	pop	{r3, pc}

08003f90 <mbed::Timer::reset()>:
 8003f90:	b510      	push	{r4, lr}
 8003f92:	4604      	mov	r4, r0
 8003f94:	f7fd fac6 	bl	8001524 <core_util_critical_section_enter>
 8003f98:	68e0      	ldr	r0, [r4, #12]
 8003f9a:	f7fd fa6e 	bl	800147a <ticker_read>
 8003f9e:	2300      	movs	r3, #0
 8003fa0:	6060      	str	r0, [r4, #4]
 8003fa2:	60a3      	str	r3, [r4, #8]
 8003fa4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003fa8:	f7fd bad2 	b.w	8001550 <core_util_critical_section_exit>

08003fac <mbed::Timer::Timer()>:
 8003fac:	2300      	movs	r3, #0
 8003fae:	b510      	push	{r4, lr}
 8003fb0:	6003      	str	r3, [r0, #0]
 8003fb2:	6043      	str	r3, [r0, #4]
 8003fb4:	6083      	str	r3, [r0, #8]
 8003fb6:	4604      	mov	r4, r0
 8003fb8:	f7fd fa32 	bl	8001420 <get_us_ticker_data>
 8003fbc:	60e0      	str	r0, [r4, #12]
 8003fbe:	4620      	mov	r0, r4
 8003fc0:	f7ff ffe6 	bl	8003f90 <mbed::Timer::reset()>
 8003fc4:	4620      	mov	r0, r4
 8003fc6:	bd10      	pop	{r4, pc}

08003fc8 <void mbed::Callback<void ()>::function_call<void (*)()>(void const*)>:
 8003fc8:	6803      	ldr	r3, [r0, #0]
 8003fca:	4718      	bx	r3

08003fcc <void mbed::Callback<void ()>::function_move<void (*)()>(void*, void const*)>:
 8003fcc:	b108      	cbz	r0, 8003fd2 <void mbed::Callback<void ()>::function_move<void (*)()>(void*, void const*)+0x6>
 8003fce:	680b      	ldr	r3, [r1, #0]
 8003fd0:	6003      	str	r3, [r0, #0]
 8003fd2:	4770      	bx	lr

08003fd4 <void mbed::Callback<void ()>::function_dtor<void (*)()>(void*)>:
 8003fd4:	4770      	bx	lr

08003fd6 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>:
 8003fd6:	4288      	cmp	r0, r1
 8003fd8:	b538      	push	{r3, r4, r5, lr}
 8003fda:	4604      	mov	r4, r0
 8003fdc:	460d      	mov	r5, r1
 8003fde:	d00a      	beq.n	8003ff6 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x20>
 8003fe0:	f7fd f81f 	bl	8001022 <mbed::Callback<void ()>::~Callback()>
 8003fe4:	b13c      	cbz	r4, 8003ff6 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x20>
 8003fe6:	68eb      	ldr	r3, [r5, #12]
 8003fe8:	b11b      	cbz	r3, 8003ff2 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)+0x1c>
 8003fea:	685b      	ldr	r3, [r3, #4]
 8003fec:	4629      	mov	r1, r5
 8003fee:	4620      	mov	r0, r4
 8003ff0:	4798      	blx	r3
 8003ff2:	68eb      	ldr	r3, [r5, #12]
 8003ff4:	60e3      	str	r3, [r4, #12]
 8003ff6:	4620      	mov	r0, r4
 8003ff8:	bd38      	pop	{r3, r4, r5, pc}

08003ffa <mbed::RawSerial::lock()>:
 8003ffa:	4770      	bx	lr

08003ffc <mbed::RawSerial::RawSerial(PinName, PinName, int)>:
 8003ffc:	b510      	push	{r4, lr}
 8003ffe:	4604      	mov	r4, r0
 8004000:	f000 f84e 	bl	80040a0 <mbed::SerialBase::SerialBase(PinName, PinName, int)>
 8004004:	4b01      	ldr	r3, [pc, #4]	; (800400c <mbed::RawSerial::RawSerial(PinName, PinName, int)+0x10>)
 8004006:	6023      	str	r3, [r4, #0]
 8004008:	4620      	mov	r0, r4
 800400a:	bd10      	pop	{r4, pc}
 800400c:	08005d98 	.word	0x08005d98

08004010 <mbed::RawSerial::~RawSerial()>:
 8004010:	b510      	push	{r4, lr}
 8004012:	4b03      	ldr	r3, [pc, #12]	; (8004020 <mbed::RawSerial::~RawSerial()+0x10>)
 8004014:	6003      	str	r3, [r0, #0]
 8004016:	4604      	mov	r4, r0
 8004018:	f7fd f846 	bl	80010a8 <mbed::SerialBase::~SerialBase()>
 800401c:	4620      	mov	r0, r4
 800401e:	bd10      	pop	{r4, pc}
 8004020:	08005d98 	.word	0x08005d98

08004024 <mbed::RawSerial::~RawSerial()>:
 8004024:	b510      	push	{r4, lr}
 8004026:	4604      	mov	r4, r0
 8004028:	f7ff fff2 	bl	8004010 <mbed::RawSerial::~RawSerial()>
 800402c:	4620      	mov	r0, r4
 800402e:	f000 fa47 	bl	80044c0 <operator delete(void*)>
 8004032:	4620      	mov	r0, r4
 8004034:	bd10      	pop	{r4, pc}

08004036 <mbed::donothing()>:
 8004036:	4770      	bx	lr

08004038 <mbed::SerialBase::lock()>:
 8004038:	4770      	bx	lr

0800403a <mbed::SerialBase::unlock()>:
 800403a:	4770      	bx	lr

0800403c <mbed::SerialBase::_irq_handler(unsigned long, SerialIrq)>:
 800403c:	eb00 1201 	add.w	r2, r0, r1, lsl #4
 8004040:	f102 0098 	add.w	r0, r2, #152	; 0x98
 8004044:	f8d2 30a4 	ldr.w	r3, [r2, #164]	; 0xa4
 8004048:	681b      	ldr	r3, [r3, #0]
 800404a:	4718      	bx	r3

0800404c <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))>:
 800404c:	b410      	push	{r4}
 800404e:	b180      	cbz	r0, 8004072 <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))+0x26>
 8004050:	6814      	ldr	r4, [r2, #0]
 8004052:	6853      	ldr	r3, [r2, #4]
 8004054:	b90c      	cbnz	r4, 800405a <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))+0xe>
 8004056:	07da      	lsls	r2, r3, #31
 8004058:	d50b      	bpl.n	8004072 <CThunk<mbed::SerialBase>::trampoline(mbed::SerialBase*, void*, void (mbed::SerialBase::**)(void*))+0x26>
 800405a:	f013 0f01 	tst.w	r3, #1
 800405e:	ea4f 0363 	mov.w	r3, r3, asr #1
 8004062:	bf1c      	itt	ne
 8004064:	58c2      	ldrne	r2, [r0, r3]
 8004066:	5914      	ldrne	r4, [r2, r4]
 8004068:	4418      	add	r0, r3
 800406a:	4623      	mov	r3, r4
 800406c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8004070:	4718      	bx	r3
 8004072:	f85d 4b04 	ldr.w	r4, [sp], #4
 8004076:	4770      	bx	lr

08004078 <mbed::SerialBase::baud(int)>:
 8004078:	b570      	push	{r4, r5, r6, lr}
 800407a:	4605      	mov	r5, r0
 800407c:	4604      	mov	r4, r0
 800407e:	f855 3b4c 	ldr.w	r3, [r5], #76
 8004082:	460e      	mov	r6, r1
 8004084:	681b      	ldr	r3, [r3, #0]
 8004086:	4798      	blx	r3
 8004088:	4628      	mov	r0, r5
 800408a:	4631      	mov	r1, r6
 800408c:	f7ff f8c6 	bl	800321c <serial_baud>
 8004090:	6823      	ldr	r3, [r4, #0]
 8004092:	f8c4 60b8 	str.w	r6, [r4, #184]	; 0xb8
 8004096:	4620      	mov	r0, r4
 8004098:	685b      	ldr	r3, [r3, #4]
 800409a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800409e:	4718      	bx	r3

080040a0 <mbed::SerialBase::SerialBase(PinName, PinName, int)>:
 80040a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80040a4:	b087      	sub	sp, #28
 80040a6:	2500      	movs	r5, #0
 80040a8:	4691      	mov	r9, r2
 80040aa:	9500      	str	r5, [sp, #0]
 80040ac:	4602      	mov	r2, r0
 80040ae:	9501      	str	r5, [sp, #4]
 80040b0:	4604      	mov	r4, r0
 80040b2:	4688      	mov	r8, r1
 80040b4:	461f      	mov	r7, r3
 80040b6:	e89d 0003 	ldmia.w	sp, {r0, r1}
 80040ba:	4b27      	ldr	r3, [pc, #156]	; (8004158 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xb8>)
 80040bc:	f842 3b08 	str.w	r3, [r2], #8
 80040c0:	4b26      	ldr	r3, [pc, #152]	; (800415c <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xbc>)
 80040c2:	e882 0003 	stmia.w	r2, {r0, r1}
 80040c6:	6123      	str	r3, [r4, #16]
 80040c8:	f248 0307 	movw	r3, #32775	; 0x8007
 80040cc:	6163      	str	r3, [r4, #20]
 80040ce:	4b24      	ldr	r3, [pc, #144]	; (8004160 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xc0>)
 80040d0:	61e5      	str	r5, [r4, #28]
 80040d2:	61a4      	str	r4, [r4, #24]
 80040d4:	6222      	str	r2, [r4, #32]
 80040d6:	6263      	str	r3, [r4, #36]	; 0x24
 80040d8:	f3bf 8f6f 	isb	sy
 80040dc:	f3bf 8f4f 	dsb	sy
 80040e0:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 80040e4:	224c      	movs	r2, #76	; 0x4c
 80040e6:	6365      	str	r5, [r4, #52]	; 0x34
 80040e8:	6465      	str	r5, [r4, #68]	; 0x44
 80040ea:	f884 5048 	strb.w	r5, [r4, #72]	; 0x48
 80040ee:	f884 5049 	strb.w	r5, [r4, #73]	; 0x49
 80040f2:	4630      	mov	r0, r6
 80040f4:	f000 ff21 	bl	8004f3a <memset>
 80040f8:	a902      	add	r1, sp, #8
 80040fa:	f8c4 50a4 	str.w	r5, [r4, #164]	; 0xa4
 80040fe:	f8c4 50b4 	str.w	r5, [r4, #180]	; 0xb4
 8004102:	f8c4 70b8 	str.w	r7, [r4, #184]	; 0xb8
 8004106:	4d17      	ldr	r5, [pc, #92]	; (8004164 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xc4>)
 8004108:	4f17      	ldr	r7, [pc, #92]	; (8004168 <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xc8>)
 800410a:	9702      	str	r7, [sp, #8]
 800410c:	f104 0098 	add.w	r0, r4, #152	; 0x98
 8004110:	9505      	str	r5, [sp, #20]
 8004112:	f7ff ff60 	bl	8003fd6 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 8004116:	a802      	add	r0, sp, #8
 8004118:	f7fc ff83 	bl	8001022 <mbed::Callback<void ()>::~Callback()>
 800411c:	a902      	add	r1, sp, #8
 800411e:	f104 00a8 	add.w	r0, r4, #168	; 0xa8
 8004122:	9702      	str	r7, [sp, #8]
 8004124:	9505      	str	r5, [sp, #20]
 8004126:	f7ff ff56 	bl	8003fd6 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 800412a:	a802      	add	r0, sp, #8
 800412c:	f7fc ff79 	bl	8001022 <mbed::Callback<void ()>::~Callback()>
 8004130:	464a      	mov	r2, r9
 8004132:	4641      	mov	r1, r8
 8004134:	4630      	mov	r0, r6
 8004136:	f7fe ffd3 	bl	80030e0 <serial_init>
 800413a:	f8d4 10b8 	ldr.w	r1, [r4, #184]	; 0xb8
 800413e:	4630      	mov	r0, r6
 8004140:	f7ff f86c 	bl	800321c <serial_baud>
 8004144:	4630      	mov	r0, r6
 8004146:	4622      	mov	r2, r4
 8004148:	4908      	ldr	r1, [pc, #32]	; (800416c <mbed::SerialBase::SerialBase(PinName, PinName, int)+0xcc>)
 800414a:	f7ff f86b 	bl	8003224 <serial_irq_handler>
 800414e:	4620      	mov	r0, r4
 8004150:	b007      	add	sp, #28
 8004152:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8004156:	bf00      	nop
 8004158:	08005db0 	.word	0x08005db0
 800415c:	e890a001 	.word	0xe890a001
 8004160:	0800404d 	.word	0x0800404d
 8004164:	08005d84 	.word	0x08005d84
 8004168:	08004037 	.word	0x08004037
 800416c:	0800403d 	.word	0x0800403d

08004170 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)>:
 8004170:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8004174:	4605      	mov	r5, r0
 8004176:	4688      	mov	r8, r1
 8004178:	f855 3b4c 	ldr.w	r3, [r5], #76
 800417c:	681b      	ldr	r3, [r3, #0]
 800417e:	4604      	mov	r4, r0
 8004180:	4616      	mov	r6, r2
 8004182:	4798      	blx	r3
 8004184:	f7fd f9ce 	bl	8001524 <core_util_critical_section_enter>
 8004188:	f8d8 700c 	ldr.w	r7, [r8, #12]
 800418c:	0130      	lsls	r0, r6, #4
 800418e:	b197      	cbz	r7, 80041b6 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x46>
 8004190:	3098      	adds	r0, #152	; 0x98
 8004192:	4641      	mov	r1, r8
 8004194:	4420      	add	r0, r4
 8004196:	f7ff ff1e 	bl	8003fd6 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 800419a:	2201      	movs	r2, #1
 800419c:	4631      	mov	r1, r6
 800419e:	4628      	mov	r0, r5
 80041a0:	f7ff f84c 	bl	800323c <serial_irq_set>
 80041a4:	f7fd f9d4 	bl	8001550 <core_util_critical_section_exit>
 80041a8:	6823      	ldr	r3, [r4, #0]
 80041aa:	4620      	mov	r0, r4
 80041ac:	685b      	ldr	r3, [r3, #4]
 80041ae:	4798      	blx	r3
 80041b0:	b004      	add	sp, #16
 80041b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80041b6:	4b07      	ldr	r3, [pc, #28]	; (80041d4 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x64>)
 80041b8:	9300      	str	r3, [sp, #0]
 80041ba:	3098      	adds	r0, #152	; 0x98
 80041bc:	4b06      	ldr	r3, [pc, #24]	; (80041d8 <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x68>)
 80041be:	9303      	str	r3, [sp, #12]
 80041c0:	4669      	mov	r1, sp
 80041c2:	4420      	add	r0, r4
 80041c4:	f7ff ff07 	bl	8003fd6 <mbed::Callback<void ()>::operator=(mbed::Callback<void ()> const&)>
 80041c8:	4668      	mov	r0, sp
 80041ca:	f7fc ff2a 	bl	8001022 <mbed::Callback<void ()>::~Callback()>
 80041ce:	463a      	mov	r2, r7
 80041d0:	e7e4      	b.n	800419c <mbed::SerialBase::attach(mbed::Callback<void ()>, mbed::SerialBase::IrqType)+0x2c>
 80041d2:	bf00      	nop
 80041d4:	08004037 	.word	0x08004037
 80041d8:	08005d84 	.word	0x08005d84

080041dc <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()>:
 80041dc:	b538      	push	{r3, r4, r5, lr}
 80041de:	4604      	mov	r4, r0
 80041e0:	b148      	cbz	r0, 80041f6 <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x1a>
 80041e2:	3058      	adds	r0, #88	; 0x58
 80041e4:	42a0      	cmp	r0, r4
 80041e6:	d006      	beq.n	80041f6 <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x1a>
 80041e8:	f1a0 052c 	sub.w	r5, r0, #44	; 0x2c
 80041ec:	3814      	subs	r0, #20
 80041ee:	f7fc ff52 	bl	8001096 <mbed::Callback<void (int)>::~Callback()>
 80041f2:	4628      	mov	r0, r5
 80041f4:	e7f6      	b.n	80041e4 <mbed::CircularBuffer<mbed::Transaction<mbed::SPI>, 2ul, unsigned long>::~CircularBuffer()+0x8>
 80041f6:	4620      	mov	r0, r4
 80041f8:	bd38      	pop	{r3, r4, r5, pc}
	...

080041fc <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE>:
 80041fc:	b570      	push	{r4, r5, r6, lr}
 80041fe:	4c0e      	ldr	r4, [pc, #56]	; (8004238 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x3c>)
 8004200:	4620      	mov	r0, r4
 8004202:	2500      	movs	r5, #0
 8004204:	2628      	movs	r6, #40	; 0x28
 8004206:	4632      	mov	r2, r6
 8004208:	4629      	mov	r1, r5
 800420a:	f840 5b04 	str.w	r5, [r0], #4
 800420e:	f000 fe94 	bl	8004f3a <memset>
 8004212:	4632      	mov	r2, r6
 8004214:	4629      	mov	r1, r5
 8004216:	f104 0030 	add.w	r0, r4, #48	; 0x30
 800421a:	62e5      	str	r5, [r4, #44]	; 0x2c
 800421c:	f000 fe8d 	bl	8004f3a <memset>
 8004220:	65a5      	str	r5, [r4, #88]	; 0x58
 8004222:	4620      	mov	r0, r4
 8004224:	65e5      	str	r5, [r4, #92]	; 0x5c
 8004226:	4a05      	ldr	r2, [pc, #20]	; (800423c <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x40>)
 8004228:	f884 5060 	strb.w	r5, [r4, #96]	; 0x60
 800422c:	4904      	ldr	r1, [pc, #16]	; (8004240 <_GLOBAL__sub_I__ZN4mbed3SPI19_transaction_bufferE+0x44>)
 800422e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8004232:	f000 b927 	b.w	8004484 <__aeabi_atexit>
 8004236:	bf00      	nop
 8004238:	20001bac 	.word	0x20001bac
 800423c:	20000194 	.word	0x20000194
 8004240:	080041dd 	.word	0x080041dd

08004244 <__wrap__malloc_r>:
 8004244:	f000 bed0 	b.w	8004fe8 <_malloc_r>

08004248 <__wrap__realloc_r>:
 8004248:	f000 bf2c 	b.w	80050a4 <_realloc_r>

0800424c <__wrap__free_r>:
 800424c:	f000 be7e 	b.w	8004f4c <_free_r>

08004250 <wait_us>:
 8004250:	b570      	push	{r4, r5, r6, lr}
 8004252:	4605      	mov	r5, r0
 8004254:	f7fe fdae 	bl	8002db4 <us_ticker_read>
 8004258:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 800425c:	fb95 f4f4 	sdiv	r4, r5, r4
 8004260:	2c00      	cmp	r4, #0
 8004262:	4606      	mov	r6, r0
 8004264:	dd02      	ble.n	800426c <wait_us+0x1c>
 8004266:	f7fd f957 	bl	8001518 <core_util_are_interrupts_enabled>
 800426a:	b928      	cbnz	r0, 8004278 <wait_us+0x28>
 800426c:	f7fe fda2 	bl	8002db4 <us_ticker_read>
 8004270:	1b80      	subs	r0, r0, r6
 8004272:	42a8      	cmp	r0, r5
 8004274:	d3fa      	bcc.n	800426c <wait_us+0x1c>
 8004276:	bd70      	pop	{r4, r5, r6, pc}
 8004278:	4620      	mov	r0, r4
 800427a:	f000 f92b 	bl	80044d4 <rtos::Thread::wait(unsigned long)>
 800427e:	e7f5      	b.n	800426c <wait_us+0x1c>

08004280 <wait_ms>:
 8004280:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8004284:	4358      	muls	r0, r3
 8004286:	f7ff bfe3 	b.w	8004250 <wait_us>
	...

0800428c <init_serial()>:
 800428c:	b508      	push	{r3, lr}
 800428e:	4b08      	ldr	r3, [pc, #32]	; (80042b0 <init_serial()+0x24>)
 8004290:	681b      	ldr	r3, [r3, #0]
 8004292:	b95b      	cbnz	r3, 80042ac <init_serial()+0x20>
 8004294:	2102      	movs	r1, #2
 8004296:	4807      	ldr	r0, [pc, #28]	; (80042b4 <init_serial()+0x28>)
 8004298:	2203      	movs	r2, #3
 800429a:	f7fe ff21 	bl	80030e0 <serial_init>
 800429e:	f44f 5116 	mov.w	r1, #9600	; 0x2580
 80042a2:	4804      	ldr	r0, [pc, #16]	; (80042b4 <init_serial()+0x28>)
 80042a4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80042a8:	f7fe bfb8 	b.w	800321c <serial_baud>
 80042ac:	bd08      	pop	{r3, pc}
 80042ae:	bf00      	nop
 80042b0:	200019a8 	.word	0x200019a8
 80042b4:	200027c4 	.word	0x200027c4

080042b8 <_close>:
 80042b8:	2802      	cmp	r0, #2
 80042ba:	b510      	push	{r4, lr}
 80042bc:	4604      	mov	r4, r0
 80042be:	dc01      	bgt.n	80042c4 <_close+0xc>
 80042c0:	2000      	movs	r0, #0
 80042c2:	bd10      	pop	{r4, pc}
 80042c4:	f000 fbf8 	bl	8004ab8 <__errno>
 80042c8:	2309      	movs	r3, #9
 80042ca:	6003      	str	r3, [r0, #0]
 80042cc:	3c03      	subs	r4, #3
 80042ce:	4b09      	ldr	r3, [pc, #36]	; (80042f4 <_close+0x3c>)
 80042d0:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 80042d4:	2200      	movs	r2, #0
 80042d6:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 80042da:	b140      	cbz	r0, 80042ee <_close+0x36>
 80042dc:	6803      	ldr	r3, [r0, #0]
 80042de:	691b      	ldr	r3, [r3, #16]
 80042e0:	4798      	blx	r3
 80042e2:	1e04      	subs	r4, r0, #0
 80042e4:	daec      	bge.n	80042c0 <_close+0x8>
 80042e6:	f000 fbe7 	bl	8004ab8 <__errno>
 80042ea:	4264      	negs	r4, r4
 80042ec:	6004      	str	r4, [r0, #0]
 80042ee:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80042f2:	bd10      	pop	{r4, pc}
 80042f4:	20001c10 	.word	0x20001c10

080042f8 <_write>:
 80042f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80042fa:	4605      	mov	r5, r0
 80042fc:	460e      	mov	r6, r1
 80042fe:	4614      	mov	r4, r2
 8004300:	f000 fbda 	bl	8004ab8 <__errno>
 8004304:	2309      	movs	r3, #9
 8004306:	2d02      	cmp	r5, #2
 8004308:	6003      	str	r3, [r0, #0]
 800430a:	dc0f      	bgt.n	800432c <_write+0x34>
 800430c:	4b12      	ldr	r3, [pc, #72]	; (8004358 <_write+0x60>)
 800430e:	681b      	ldr	r3, [r3, #0]
 8004310:	b90b      	cbnz	r3, 8004316 <_write+0x1e>
 8004312:	f7ff ffbb 	bl	800428c <init_serial()>
 8004316:	4635      	mov	r5, r6
 8004318:	1937      	adds	r7, r6, r4
 800431a:	4e10      	ldr	r6, [pc, #64]	; (800435c <_write+0x64>)
 800431c:	42bd      	cmp	r5, r7
 800431e:	d015      	beq.n	800434c <_write+0x54>
 8004320:	f815 1b01 	ldrb.w	r1, [r5], #1
 8004324:	4630      	mov	r0, r6
 8004326:	f7fe fffb 	bl	8003320 <serial_putc>
 800432a:	e7f7      	b.n	800431c <_write+0x24>
 800432c:	3d03      	subs	r5, #3
 800432e:	4b0c      	ldr	r3, [pc, #48]	; (8004360 <_write+0x68>)
 8004330:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8004334:	b160      	cbz	r0, 8004350 <_write+0x58>
 8004336:	6803      	ldr	r3, [r0, #0]
 8004338:	4622      	mov	r2, r4
 800433a:	68db      	ldr	r3, [r3, #12]
 800433c:	4631      	mov	r1, r6
 800433e:	4798      	blx	r3
 8004340:	1e04      	subs	r4, r0, #0
 8004342:	da03      	bge.n	800434c <_write+0x54>
 8004344:	f000 fbb8 	bl	8004ab8 <__errno>
 8004348:	4263      	negs	r3, r4
 800434a:	6003      	str	r3, [r0, #0]
 800434c:	4620      	mov	r0, r4
 800434e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004350:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8004354:	e7fa      	b.n	800434c <_write+0x54>
 8004356:	bf00      	nop
 8004358:	200019a8 	.word	0x200019a8
 800435c:	200027c4 	.word	0x200027c4
 8004360:	20001c10 	.word	0x20001c10

08004364 <_read>:
 8004364:	b570      	push	{r4, r5, r6, lr}
 8004366:	4604      	mov	r4, r0
 8004368:	460d      	mov	r5, r1
 800436a:	4616      	mov	r6, r2
 800436c:	f000 fba4 	bl	8004ab8 <__errno>
 8004370:	2309      	movs	r3, #9
 8004372:	2c02      	cmp	r4, #2
 8004374:	6003      	str	r3, [r0, #0]
 8004376:	dc0b      	bgt.n	8004390 <_read+0x2c>
 8004378:	4b0f      	ldr	r3, [pc, #60]	; (80043b8 <_read+0x54>)
 800437a:	681b      	ldr	r3, [r3, #0]
 800437c:	b90b      	cbnz	r3, 8004382 <_read+0x1e>
 800437e:	f7ff ff85 	bl	800428c <init_serial()>
 8004382:	480e      	ldr	r0, [pc, #56]	; (80043bc <_read+0x58>)
 8004384:	f7fe ffb0 	bl	80032e8 <serial_getc>
 8004388:	2401      	movs	r4, #1
 800438a:	7028      	strb	r0, [r5, #0]
 800438c:	4620      	mov	r0, r4
 800438e:	bd70      	pop	{r4, r5, r6, pc}
 8004390:	3c03      	subs	r4, #3
 8004392:	4b0b      	ldr	r3, [pc, #44]	; (80043c0 <_read+0x5c>)
 8004394:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8004398:	b158      	cbz	r0, 80043b2 <_read+0x4e>
 800439a:	6803      	ldr	r3, [r0, #0]
 800439c:	4632      	mov	r2, r6
 800439e:	689b      	ldr	r3, [r3, #8]
 80043a0:	4629      	mov	r1, r5
 80043a2:	4798      	blx	r3
 80043a4:	1e04      	subs	r4, r0, #0
 80043a6:	daf1      	bge.n	800438c <_read+0x28>
 80043a8:	f000 fb86 	bl	8004ab8 <__errno>
 80043ac:	4263      	negs	r3, r4
 80043ae:	6003      	str	r3, [r0, #0]
 80043b0:	e7ec      	b.n	800438c <_read+0x28>
 80043b2:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 80043b6:	e7e9      	b.n	800438c <_read+0x28>
 80043b8:	200019a8 	.word	0x200019a8
 80043bc:	200027c4 	.word	0x200027c4
 80043c0:	20001c10 	.word	0x20001c10

080043c4 <_lseek>:
 80043c4:	b570      	push	{r4, r5, r6, lr}
 80043c6:	4604      	mov	r4, r0
 80043c8:	460d      	mov	r5, r1
 80043ca:	4616      	mov	r6, r2
 80043cc:	f000 fb74 	bl	8004ab8 <__errno>
 80043d0:	2309      	movs	r3, #9
 80043d2:	2c02      	cmp	r4, #2
 80043d4:	6003      	str	r3, [r0, #0]
 80043d6:	dd0b      	ble.n	80043f0 <_lseek+0x2c>
 80043d8:	3c03      	subs	r4, #3
 80043da:	4b08      	ldr	r3, [pc, #32]	; (80043fc <_lseek+0x38>)
 80043dc:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 80043e0:	b140      	cbz	r0, 80043f4 <_lseek+0x30>
 80043e2:	6803      	ldr	r3, [r0, #0]
 80043e4:	4632      	mov	r2, r6
 80043e6:	4629      	mov	r1, r5
 80043e8:	69db      	ldr	r3, [r3, #28]
 80043ea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80043ee:	4718      	bx	r3
 80043f0:	2000      	movs	r0, #0
 80043f2:	bd70      	pop	{r4, r5, r6, pc}
 80043f4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80043f8:	bd70      	pop	{r4, r5, r6, pc}
 80043fa:	bf00      	nop
 80043fc:	20001c10 	.word	0x20001c10

08004400 <software_init_hook>:
 8004400:	b508      	push	{r3, lr}
 8004402:	f7fe ff9f 	bl	8003344 <mbed_sdk_init>
 8004406:	f7fd f935 	bl	8001674 <software_init_hook_rtos>
 800440a:	bd08      	pop	{r3, pc}

0800440c <mbed_main>:
 800440c:	4770      	bx	lr

0800440e <__wrap_main>:
 800440e:	b508      	push	{r3, lr}
 8004410:	f7ff fffc 	bl	800440c <mbed_main>
 8004414:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8004418:	f7fc bcde 	b.w	8000dd8 <main>

0800441c <_sbrk>:
 800441c:	4a0c      	ldr	r2, [pc, #48]	; (8004450 <_sbrk+0x34>)
 800441e:	6813      	ldr	r3, [r2, #0]
 8004420:	b510      	push	{r4, lr}
 8004422:	4418      	add	r0, r3
 8004424:	f3ef 8108 	mrs	r1, MSP
 8004428:	4288      	cmp	r0, r1
 800442a:	d305      	bcc.n	8004438 <_sbrk+0x1c>
 800442c:	4b09      	ldr	r3, [pc, #36]	; (8004454 <_sbrk+0x38>)
 800442e:	220c      	movs	r2, #12
 8004430:	601a      	str	r2, [r3, #0]
 8004432:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004436:	bd10      	pop	{r4, pc}
 8004438:	4907      	ldr	r1, [pc, #28]	; (8004458 <_sbrk+0x3c>)
 800443a:	680c      	ldr	r4, [r1, #0]
 800443c:	b124      	cbz	r4, 8004448 <_sbrk+0x2c>
 800443e:	4907      	ldr	r1, [pc, #28]	; (800445c <_sbrk+0x40>)
 8004440:	6809      	ldr	r1, [r1, #0]
 8004442:	4421      	add	r1, r4
 8004444:	4288      	cmp	r0, r1
 8004446:	d2f1      	bcs.n	800442c <_sbrk+0x10>
 8004448:	6010      	str	r0, [r2, #0]
 800444a:	4618      	mov	r0, r3
 800444c:	bd10      	pop	{r4, pc}
 800444e:	bf00      	nop
 8004450:	200001b4 	.word	0x200001b4
 8004454:	20002814 	.word	0x20002814
 8004458:	20001d10 	.word	0x20001d10
 800445c:	20001d14 	.word	0x20001d14

08004460 <_exit>:
 8004460:	4c07      	ldr	r4, [pc, #28]	; (8004480 <_exit+0x20>)
 8004462:	b508      	push	{r3, lr}
 8004464:	6823      	ldr	r3, [r4, #0]
 8004466:	4605      	mov	r5, r0
 8004468:	6898      	ldr	r0, [r3, #8]
 800446a:	f000 fbdd 	bl	8004c28 <fflush>
 800446e:	6823      	ldr	r3, [r4, #0]
 8004470:	68d8      	ldr	r0, [r3, #12]
 8004472:	f000 fbd9 	bl	8004c28 <fflush>
 8004476:	b10d      	cbz	r5, 800447c <_exit+0x1c>
 8004478:	f7fd f883 	bl	8001582 <mbed_die>
 800447c:	e7fe      	b.n	800447c <_exit+0x1c>
 800447e:	bf00      	nop
 8004480:	200001b8 	.word	0x200001b8

08004484 <__aeabi_atexit>:
 8004484:	2001      	movs	r0, #1
 8004486:	4770      	bx	lr

08004488 <__wrap_exit>:
 8004488:	b508      	push	{r3, lr}
 800448a:	f7ff ffe9 	bl	8004460 <_exit>

0800448e <__malloc_lock>:
 800448e:	b508      	push	{r3, lr}
 8004490:	f7fd f8fe 	bl	8001690 <__rtos_malloc_lock>
 8004494:	bd08      	pop	{r3, pc}

08004496 <__malloc_unlock>:
 8004496:	b508      	push	{r3, lr}
 8004498:	f7fd f902 	bl	80016a0 <__rtos_malloc_unlock>
 800449c:	bd08      	pop	{r3, pc}
	...

080044a0 <operator new[](unsigned int)>:
 80044a0:	b510      	push	{r4, lr}
 80044a2:	f000 fcc1 	bl	8004e28 <malloc>
 80044a6:	4604      	mov	r4, r0
 80044a8:	b910      	cbnz	r0, 80044b0 <operator new[](unsigned int)+0x10>
 80044aa:	4802      	ldr	r0, [pc, #8]	; (80044b4 <operator new[](unsigned int)+0x14>)
 80044ac:	f7fd f864 	bl	8001578 <error>
 80044b0:	4620      	mov	r0, r4
 80044b2:	bd10      	pop	{r4, pc}
 80044b4:	08005dc0 	.word	0x08005dc0

080044b8 <operator delete[](void*)>:
 80044b8:	b108      	cbz	r0, 80044be <operator delete[](void*)+0x6>
 80044ba:	f000 bcbd 	b.w	8004e38 <free>
 80044be:	4770      	bx	lr

080044c0 <operator delete(void*)>:
 80044c0:	f7ff bffa 	b.w	80044b8 <operator delete[](void*)>

080044c4 <thread_terminate_hook>:
 80044c4:	4b02      	ldr	r3, [pc, #8]	; (80044d0 <thread_terminate_hook+0xc>)
 80044c6:	681b      	ldr	r3, [r3, #0]
 80044c8:	b103      	cbz	r3, 80044cc <thread_terminate_hook+0x8>
 80044ca:	4718      	bx	r3
 80044cc:	4770      	bx	lr
 80044ce:	bf00      	nop
 80044d0:	20001d18 	.word	0x20001d18

080044d4 <rtos::Thread::wait(unsigned long)>:
 80044d4:	f7fd be58 	b.w	8002188 <osDelay>

080044d8 <rt_set_PSP>:
 80044d8:	f380 8809 	msr	PSP, r0
 80044dc:	4770      	bx	lr

080044de <rt_get_PSP>:
 80044de:	f3ef 8009 	mrs	r0, PSP
 80044e2:	4770      	bx	lr

080044e4 <os_set_env>:
 80044e4:	4668      	mov	r0, sp
 80044e6:	f380 8809 	msr	PSP, r0
 80044ea:	485a      	ldr	r0, [pc, #360]	; (8004654 <OS_Tick_Handler+0x10>)
 80044ec:	7800      	ldrb	r0, [r0, #0]
 80044ee:	07c0      	lsls	r0, r0, #31
 80044f0:	bf14      	ite	ne
 80044f2:	2002      	movne	r0, #2
 80044f4:	2003      	moveq	r0, #3
 80044f6:	f380 8814 	msr	CONTROL, r0
 80044fa:	4770      	bx	lr

080044fc <_alloc_box>:
 80044fc:	f8df c158 	ldr.w	r12, [pc, #344]	; 8004658 <OS_Tick_Handler+0x14>
 8004500:	f3ef 8305 	mrs	r3, IPSR
 8004504:	061b      	lsls	r3, r3, #24
 8004506:	bf18      	it	ne
 8004508:	4760      	bxne	r12
 800450a:	f3ef 8314 	mrs	r3, CONTROL
 800450e:	07db      	lsls	r3, r3, #31
 8004510:	bf08      	it	eq
 8004512:	4760      	bxeq	r12
 8004514:	df00      	svc	0
 8004516:	4770      	bx	lr

08004518 <_free_box>:
 8004518:	f8df c140 	ldr.w	r12, [pc, #320]	; 800465c <OS_Tick_Handler+0x18>
 800451c:	f3ef 8305 	mrs	r3, IPSR
 8004520:	061b      	lsls	r3, r3, #24
 8004522:	bf18      	it	ne
 8004524:	4760      	bxne	r12
 8004526:	f3ef 8314 	mrs	r3, CONTROL
 800452a:	07db      	lsls	r3, r3, #31
 800452c:	bf08      	it	eq
 800452e:	4760      	bxeq	r12
 8004530:	df00      	svc	0
 8004532:	4770      	bx	lr

08004534 <SVC_Handler>:
 8004534:	f3ef 8009 	mrs	r0, PSP
 8004538:	6981      	ldr	r1, [r0, #24]
 800453a:	f811 1c02 	ldrb.w	r1, [r1, #-2]
 800453e:	bbe1      	cbnz	r1, 80045ba <SVC_User>
 8004540:	e890 100f 	ldmia.w	r0, {r0, r1, r2, r3, r12}
 8004544:	b510      	push	{r4, lr}
 8004546:	47e0      	blx	r12
 8004548:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800454c:	f3ef 8c09 	mrs	r12, PSP
 8004550:	e88c 0007 	stmia.w	r12, {r0, r1, r2}
 8004554:	4b42      	ldr	r3, [pc, #264]	; (8004660 <OS_Tick_Handler+0x1c>)
 8004556:	e893 0006 	ldmia.w	r3, {r1, r2}
 800455a:	4291      	cmp	r1, r2
 800455c:	bf08      	it	eq
 800455e:	4770      	bxeq	lr
 8004560:	b941      	cbnz	r1, 8004574 <SVC_ContextSave>
 8004562:	f01e 0f10 	tst.w	lr, #16
 8004566:	d116      	bne.n	8004596 <SVC_ContextRestore>
 8004568:	493e      	ldr	r1, [pc, #248]	; (8004664 <OS_Tick_Handler+0x20>)
 800456a:	6808      	ldr	r0, [r1, #0]
 800456c:	f020 0001 	bic.w	r0, r0, #1
 8004570:	6008      	str	r0, [r1, #0]
 8004572:	e010      	b.n	8004596 <SVC_ContextRestore>

08004574 <SVC_ContextSave>:
 8004574:	f01e 0f10 	tst.w	lr, #16
 8004578:	bf06      	itte	eq
 800457a:	ed2c 8a10 	vstmdbeq	r12!, {s16-s31}
 800457e:	2001      	moveq	r0, #1
 8004580:	2000      	movne	r0, #0
 8004582:	f881 0025 	strb.w	r0, [r1, #37]	; 0x25
 8004586:	e92c 0ff0 	stmdb	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 800458a:	f8c1 c02c 	str.w	r12, [r1, #44]	; 0x2c
 800458e:	b40c      	push	{r2, r3}
 8004590:	f7fd fb10 	bl	8001bb4 <rt_stk_check>
 8004594:	bc0c      	pop	{r2, r3}

08004596 <SVC_ContextRestore>:
 8004596:	601a      	str	r2, [r3, #0]
 8004598:	f8d2 c02c 	ldr.w	r12, [r2, #44]	; 0x2c
 800459c:	e8bc 0ff0 	ldmia.w	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 80045a0:	f892 0025 	ldrb.w	r0, [r2, #37]	; 0x25
 80045a4:	2800      	cmp	r0, #0
 80045a6:	bf0e      	itee	eq
 80045a8:	f06f 0e02 	mvneq.w	lr, #2
 80045ac:	f06f 0e12 	mvnne.w	lr, #18
 80045b0:	ecbc 8a10 	vldmiane	r12!, {s16-s31}
 80045b4:	f38c 8809 	msr	PSP, r12

080045b8 <SVC_Exit>:
 80045b8:	4770      	bx	lr

080045ba <SVC_User>:
 80045ba:	b510      	push	{r4, lr}
 80045bc:	4a2a      	ldr	r2, [pc, #168]	; (8004668 <OS_Tick_Handler+0x24>)
 80045be:	6812      	ldr	r2, [r2, #0]
 80045c0:	4291      	cmp	r1, r2
 80045c2:	d809      	bhi.n	80045d8 <SVC_Done>
 80045c4:	4c29      	ldr	r4, [pc, #164]	; (800466c <OS_Tick_Handler+0x28>)
 80045c6:	f854 4021 	ldr.w	r4, [r4, r1, lsl #2]
 80045ca:	e890 100f 	ldmia.w	r0, {r0, r1, r2, r3, r12}
 80045ce:	47a0      	blx	r4
 80045d0:	f3ef 8c09 	mrs	r12, PSP
 80045d4:	e88c 000f 	stmia.w	r12, {r0, r1, r2, r3}

080045d8 <SVC_Done>:
 80045d8:	bd10      	pop	{r4, pc}

080045da <PendSV_Handler>:
 80045da:	b510      	push	{r4, lr}
 80045dc:	f7fd fa76 	bl	8001acc <rt_pop_req>

080045e0 <Sys_Switch>:
 80045e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80045e4:	4b1e      	ldr	r3, [pc, #120]	; (8004660 <OS_Tick_Handler+0x1c>)
 80045e6:	e893 0006 	ldmia.w	r3, {r1, r2}
 80045ea:	4291      	cmp	r1, r2
 80045ec:	bf08      	it	eq
 80045ee:	4770      	bxeq	lr
 80045f0:	f3ef 8c09 	mrs	r12, PSP
 80045f4:	f01e 0f10 	tst.w	lr, #16
 80045f8:	bf06      	itte	eq
 80045fa:	ed2c 8a10 	vstmdbeq	r12!, {s16-s31}
 80045fe:	2001      	moveq	r0, #1
 8004600:	2000      	movne	r0, #0
 8004602:	f881 0025 	strb.w	r0, [r1, #37]	; 0x25
 8004606:	e92c 0ff0 	stmdb	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 800460a:	f8c1 c02c 	str.w	r12, [r1, #44]	; 0x2c
 800460e:	b40c      	push	{r2, r3}
 8004610:	f7fd fad0 	bl	8001bb4 <rt_stk_check>
 8004614:	bc0c      	pop	{r2, r3}
 8004616:	601a      	str	r2, [r3, #0]
 8004618:	f8d2 c02c 	ldr.w	r12, [r2, #44]	; 0x2c
 800461c:	e8bc 0ff0 	ldmia.w	r12!, {r4, r5, r6, r7, r8, r9, r10, r11}
 8004620:	f892 0025 	ldrb.w	r0, [r2, #37]	; 0x25
 8004624:	2800      	cmp	r0, #0
 8004626:	bf0e      	itee	eq
 8004628:	f06f 0e02 	mvneq.w	lr, #2
 800462c:	f06f 0e12 	mvnne.w	lr, #18
 8004630:	ecbc 8a10 	vldmiane	r12!, {s16-s31}
 8004634:	f38c 8809 	msr	PSP, r12

08004638 <Sys_Exit>:
 8004638:	4770      	bx	lr

0800463a <SysTick_Handler>:
 800463a:	b510      	push	{r4, lr}
 800463c:	f7fd fa9c 	bl	8001b78 <rt_systick>
 8004640:	f7ff bfce 	b.w	80045e0 <Sys_Switch>

08004644 <OS_Tick_Handler>:
 8004644:	b510      	push	{r4, lr}
 8004646:	f7fd fa95 	bl	8001b74 <os_tick_irqack>
 800464a:	f7fd fa95 	bl	8001b78 <rt_systick>
 800464e:	f7ff bfc7 	b.w	80045e0 <Sys_Switch>
 8004652:	0000      	.short	0x0000
 8004654:	08005c1a 	.word	0x08005c1a
 8004658:	08001c23 	.word	0x08001c23
 800465c:	08001c3d 	.word	0x08001c3d
 8004660:	2000273c 	.word	0x2000273c
 8004664:	e000ef34 	.word	0xe000ef34
 8004668:	00000000 	.word	0x00000000
 800466c:	fffffffc 	.word	0xfffffffc

08004670 <Reset_Handler>:
 8004670:	f8df d020 	ldr.w	sp, [pc, #32]	; 8004694 <LoopCopyDataInit+0x14>
 8004674:	2100      	movs	r1, #0
 8004676:	e003      	b.n	8004680 <LoopCopyDataInit>

08004678 <CopyDataInit>:
 8004678:	4b07      	ldr	r3, [pc, #28]	; (8004698 <LoopCopyDataInit+0x18>)
 800467a:	585b      	ldr	r3, [r3, r1]
 800467c:	5043      	str	r3, [r0, r1]
 800467e:	3104      	adds	r1, #4

08004680 <LoopCopyDataInit>:
 8004680:	4806      	ldr	r0, [pc, #24]	; (800469c <LoopCopyDataInit+0x1c>)
 8004682:	4b07      	ldr	r3, [pc, #28]	; (80046a0 <LoopCopyDataInit+0x20>)
 8004684:	1842      	adds	r2, r0, r1
 8004686:	429a      	cmp	r2, r3
 8004688:	d3f6      	bcc.n	8004678 <CopyDataInit>
 800468a:	f7fe ff39 	bl	8003500 <SystemInit>
 800468e:	f7fc fe8b 	bl	80013a8 <_start>
 8004692:	4770      	bx	lr
 8004694:	20018000 	.word	0x20018000
 8004698:	08005e84 	.word	0x08005e84
 800469c:	20000194 	.word	0x20000194
 80046a0:	20000230 	.word	0x20000230

080046a4 <ADC_IRQHandler>:
 80046a4:	e7fe      	b.n	80046a4 <ADC_IRQHandler>
	...

080046a8 <__aeabi_drsub>:
 80046a8:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80046ac:	e002      	b.n	80046b4 <__adddf3>
 80046ae:	bf00      	nop

080046b0 <__aeabi_dsub>:
 80046b0:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080046b4 <__adddf3>:
 80046b4:	b530      	push	{r4, r5, lr}
 80046b6:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80046ba:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80046be:	ea94 0f05 	teq	r4, r5
 80046c2:	bf08      	it	eq
 80046c4:	ea90 0f02 	teqeq	r0, r2
 80046c8:	bf1f      	itttt	ne
 80046ca:	ea54 0c00 	orrsne.w	r12, r4, r0
 80046ce:	ea55 0c02 	orrsne.w	r12, r5, r2
 80046d2:	ea7f 5c64 	mvnsne.w	r12, r4, asr #21
 80046d6:	ea7f 5c65 	mvnsne.w	r12, r5, asr #21
 80046da:	f000 80e2 	beq.w	80048a2 <__adddf3+0x1ee>
 80046de:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80046e2:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80046e6:	bfb8      	it	lt
 80046e8:	426d      	neglt	r5, r5
 80046ea:	dd0c      	ble.n	8004706 <__adddf3+0x52>
 80046ec:	442c      	add	r4, r5
 80046ee:	ea80 0202 	eor.w	r2, r0, r2
 80046f2:	ea81 0303 	eor.w	r3, r1, r3
 80046f6:	ea82 0000 	eor.w	r0, r2, r0
 80046fa:	ea83 0101 	eor.w	r1, r3, r1
 80046fe:	ea80 0202 	eor.w	r2, r0, r2
 8004702:	ea81 0303 	eor.w	r3, r1, r3
 8004706:	2d36      	cmp	r5, #54	; 0x36
 8004708:	bf88      	it	hi
 800470a:	bd30      	pophi	{r4, r5, pc}
 800470c:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8004710:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8004714:	f44f 1c80 	mov.w	r12, #1048576	; 0x100000
 8004718:	ea4c 3111 	orr.w	r1, r12, r1, lsr #12
 800471c:	d002      	beq.n	8004724 <__adddf3+0x70>
 800471e:	4240      	negs	r0, r0
 8004720:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8004724:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8004728:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800472c:	ea4c 3313 	orr.w	r3, r12, r3, lsr #12
 8004730:	d002      	beq.n	8004738 <__adddf3+0x84>
 8004732:	4252      	negs	r2, r2
 8004734:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8004738:	ea94 0f05 	teq	r4, r5
 800473c:	f000 80a7 	beq.w	800488e <__adddf3+0x1da>
 8004740:	f1a4 0401 	sub.w	r4, r4, #1
 8004744:	f1d5 0e20 	rsbs	lr, r5, #32
 8004748:	db0d      	blt.n	8004766 <__adddf3+0xb2>
 800474a:	fa02 fc0e 	lsl.w	r12, r2, lr
 800474e:	fa22 f205 	lsr.w	r2, r2, r5
 8004752:	1880      	adds	r0, r0, r2
 8004754:	f141 0100 	adc.w	r1, r1, #0
 8004758:	fa03 f20e 	lsl.w	r2, r3, lr
 800475c:	1880      	adds	r0, r0, r2
 800475e:	fa43 f305 	asr.w	r3, r3, r5
 8004762:	4159      	adcs	r1, r3
 8004764:	e00e      	b.n	8004784 <__adddf3+0xd0>
 8004766:	f1a5 0520 	sub.w	r5, r5, #32
 800476a:	f10e 0e20 	add.w	lr, lr, #32
 800476e:	2a01      	cmp	r2, #1
 8004770:	fa03 fc0e 	lsl.w	r12, r3, lr
 8004774:	bf28      	it	cs
 8004776:	f04c 0c02 	orrcs.w	r12, r12, #2
 800477a:	fa43 f305 	asr.w	r3, r3, r5
 800477e:	18c0      	adds	r0, r0, r3
 8004780:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8004784:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8004788:	d507      	bpl.n	800479a <__adddf3+0xe6>
 800478a:	f04f 0e00 	mov.w	lr, #0
 800478e:	f1dc 0c00 	rsbs	r12, r12, #0
 8004792:	eb7e 0000 	sbcs.w	r0, lr, r0
 8004796:	eb6e 0101 	sbc.w	r1, lr, r1
 800479a:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 800479e:	d31b      	bcc.n	80047d8 <__adddf3+0x124>
 80047a0:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 80047a4:	d30c      	bcc.n	80047c0 <__adddf3+0x10c>
 80047a6:	0849      	lsrs	r1, r1, #1
 80047a8:	ea5f 0030 	movs.w	r0, r0, rrx
 80047ac:	ea4f 0c3c 	mov.w	r12, r12, rrx
 80047b0:	f104 0401 	add.w	r4, r4, #1
 80047b4:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80047b8:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80047bc:	f080 809a 	bcs.w	80048f4 <__adddf3+0x240>
 80047c0:	f1bc 4f00 	cmp.w	r12, #2147483648	; 0x80000000
 80047c4:	bf08      	it	eq
 80047c6:	ea5f 0c50 	movseq.w	r12, r0, lsr #1
 80047ca:	f150 0000 	adcs.w	r0, r0, #0
 80047ce:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80047d2:	ea41 0105 	orr.w	r1, r1, r5
 80047d6:	bd30      	pop	{r4, r5, pc}
 80047d8:	ea5f 0c4c 	movs.w	r12, r12, lsl #1
 80047dc:	4140      	adcs	r0, r0
 80047de:	eb41 0101 	adc.w	r1, r1, r1
 80047e2:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80047e6:	f1a4 0401 	sub.w	r4, r4, #1
 80047ea:	d1e9      	bne.n	80047c0 <__adddf3+0x10c>
 80047ec:	f091 0f00 	teq	r1, #0
 80047f0:	bf04      	itt	eq
 80047f2:	4601      	moveq	r1, r0
 80047f4:	2000      	moveq	r0, #0
 80047f6:	fab1 f381 	clz	r3, r1
 80047fa:	bf08      	it	eq
 80047fc:	3320      	addeq	r3, #32
 80047fe:	f1a3 030b 	sub.w	r3, r3, #11
 8004802:	f1b3 0220 	subs.w	r2, r3, #32
 8004806:	da0c      	bge.n	8004822 <__adddf3+0x16e>
 8004808:	320c      	adds	r2, #12
 800480a:	dd08      	ble.n	800481e <__adddf3+0x16a>
 800480c:	f102 0c14 	add.w	r12, r2, #20
 8004810:	f1c2 020c 	rsb	r2, r2, #12
 8004814:	fa01 f00c 	lsl.w	r0, r1, r12
 8004818:	fa21 f102 	lsr.w	r1, r1, r2
 800481c:	e00c      	b.n	8004838 <__adddf3+0x184>
 800481e:	f102 0214 	add.w	r2, r2, #20
 8004822:	bfd8      	it	le
 8004824:	f1c2 0c20 	rsble	r12, r2, #32
 8004828:	fa01 f102 	lsl.w	r1, r1, r2
 800482c:	fa20 fc0c 	lsr.w	r12, r0, r12
 8004830:	bfdc      	itt	le
 8004832:	ea41 010c 	orrle.w	r1, r1, r12
 8004836:	4090      	lslle	r0, r2
 8004838:	1ae4      	subs	r4, r4, r3
 800483a:	bfa2      	ittt	ge
 800483c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8004840:	4329      	orrge	r1, r5
 8004842:	bd30      	popge	{r4, r5, pc}
 8004844:	ea6f 0404 	mvn.w	r4, r4
 8004848:	3c1f      	subs	r4, #31
 800484a:	da1c      	bge.n	8004886 <__adddf3+0x1d2>
 800484c:	340c      	adds	r4, #12
 800484e:	dc0e      	bgt.n	800486e <__adddf3+0x1ba>
 8004850:	f104 0414 	add.w	r4, r4, #20
 8004854:	f1c4 0220 	rsb	r2, r4, #32
 8004858:	fa20 f004 	lsr.w	r0, r0, r4
 800485c:	fa01 f302 	lsl.w	r3, r1, r2
 8004860:	ea40 0003 	orr.w	r0, r0, r3
 8004864:	fa21 f304 	lsr.w	r3, r1, r4
 8004868:	ea45 0103 	orr.w	r1, r5, r3
 800486c:	bd30      	pop	{r4, r5, pc}
 800486e:	f1c4 040c 	rsb	r4, r4, #12
 8004872:	f1c4 0220 	rsb	r2, r4, #32
 8004876:	fa20 f002 	lsr.w	r0, r0, r2
 800487a:	fa01 f304 	lsl.w	r3, r1, r4
 800487e:	ea40 0003 	orr.w	r0, r0, r3
 8004882:	4629      	mov	r1, r5
 8004884:	bd30      	pop	{r4, r5, pc}
 8004886:	fa21 f004 	lsr.w	r0, r1, r4
 800488a:	4629      	mov	r1, r5
 800488c:	bd30      	pop	{r4, r5, pc}
 800488e:	f094 0f00 	teq	r4, #0
 8004892:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8004896:	bf06      	itte	eq
 8004898:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 800489c:	3401      	addeq	r4, #1
 800489e:	3d01      	subne	r5, #1
 80048a0:	e74e      	b.n	8004740 <__adddf3+0x8c>
 80048a2:	ea7f 5c64 	mvns.w	r12, r4, asr #21
 80048a6:	bf18      	it	ne
 80048a8:	ea7f 5c65 	mvnsne.w	r12, r5, asr #21
 80048ac:	d029      	beq.n	8004902 <__adddf3+0x24e>
 80048ae:	ea94 0f05 	teq	r4, r5
 80048b2:	bf08      	it	eq
 80048b4:	ea90 0f02 	teqeq	r0, r2
 80048b8:	d005      	beq.n	80048c6 <__adddf3+0x212>
 80048ba:	ea54 0c00 	orrs.w	r12, r4, r0
 80048be:	bf04      	itt	eq
 80048c0:	4619      	moveq	r1, r3
 80048c2:	4610      	moveq	r0, r2
 80048c4:	bd30      	pop	{r4, r5, pc}
 80048c6:	ea91 0f03 	teq	r1, r3
 80048ca:	bf1e      	ittt	ne
 80048cc:	2100      	movne	r1, #0
 80048ce:	2000      	movne	r0, #0
 80048d0:	bd30      	popne	{r4, r5, pc}
 80048d2:	ea5f 5c54 	movs.w	r12, r4, lsr #21
 80048d6:	d105      	bne.n	80048e4 <__adddf3+0x230>
 80048d8:	0040      	lsls	r0, r0, #1
 80048da:	4149      	adcs	r1, r1
 80048dc:	bf28      	it	cs
 80048de:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80048e2:	bd30      	pop	{r4, r5, pc}
 80048e4:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80048e8:	bf3c      	itt	cc
 80048ea:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80048ee:	bd30      	popcc	{r4, r5, pc}
 80048f0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80048f4:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80048f8:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80048fc:	f04f 0000 	mov.w	r0, #0
 8004900:	bd30      	pop	{r4, r5, pc}
 8004902:	ea7f 5c64 	mvns.w	r12, r4, asr #21
 8004906:	bf1a      	itte	ne
 8004908:	4619      	movne	r1, r3
 800490a:	4610      	movne	r0, r2
 800490c:	ea7f 5c65 	mvnseq.w	r12, r5, asr #21
 8004910:	bf1c      	itt	ne
 8004912:	460b      	movne	r3, r1
 8004914:	4602      	movne	r2, r0
 8004916:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800491a:	bf06      	itte	eq
 800491c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8004920:	ea91 0f03 	teqeq	r1, r3
 8004924:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8004928:	bd30      	pop	{r4, r5, pc}
 800492a:	bf00      	nop

0800492c <__aeabi_ui2d>:
 800492c:	f090 0f00 	teq	r0, #0
 8004930:	bf04      	itt	eq
 8004932:	2100      	moveq	r1, #0
 8004934:	4770      	bxeq	lr
 8004936:	b530      	push	{r4, r5, lr}
 8004938:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800493c:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8004940:	f04f 0500 	mov.w	r5, #0
 8004944:	f04f 0100 	mov.w	r1, #0
 8004948:	e750      	b.n	80047ec <__adddf3+0x138>
 800494a:	bf00      	nop

0800494c <__aeabi_i2d>:
 800494c:	f090 0f00 	teq	r0, #0
 8004950:	bf04      	itt	eq
 8004952:	2100      	moveq	r1, #0
 8004954:	4770      	bxeq	lr
 8004956:	b530      	push	{r4, r5, lr}
 8004958:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800495c:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8004960:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8004964:	bf48      	it	mi
 8004966:	4240      	negmi	r0, r0
 8004968:	f04f 0100 	mov.w	r1, #0
 800496c:	e73e      	b.n	80047ec <__adddf3+0x138>
 800496e:	bf00      	nop

08004970 <__aeabi_f2d>:
 8004970:	0042      	lsls	r2, r0, #1
 8004972:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8004976:	ea4f 0131 	mov.w	r1, r1, rrx
 800497a:	ea4f 7002 	mov.w	r0, r2, lsl #28
 800497e:	bf1f      	itttt	ne
 8004980:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8004984:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8004988:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 800498c:	4770      	bxne	lr
 800498e:	f092 0f00 	teq	r2, #0
 8004992:	bf14      	ite	ne
 8004994:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8004998:	4770      	bxeq	lr
 800499a:	b530      	push	{r4, r5, lr}
 800499c:	f44f 7460 	mov.w	r4, #896	; 0x380
 80049a0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80049a4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80049a8:	e720      	b.n	80047ec <__adddf3+0x138>
 80049aa:	bf00      	nop

080049ac <__aeabi_ul2d>:
 80049ac:	ea50 0201 	orrs.w	r2, r0, r1
 80049b0:	bf08      	it	eq
 80049b2:	4770      	bxeq	lr
 80049b4:	b530      	push	{r4, r5, lr}
 80049b6:	f04f 0500 	mov.w	r5, #0
 80049ba:	e00a      	b.n	80049d2 <__aeabi_l2d+0x16>

080049bc <__aeabi_l2d>:
 80049bc:	ea50 0201 	orrs.w	r2, r0, r1
 80049c0:	bf08      	it	eq
 80049c2:	4770      	bxeq	lr
 80049c4:	b530      	push	{r4, r5, lr}
 80049c6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80049ca:	d502      	bpl.n	80049d2 <__aeabi_l2d+0x16>
 80049cc:	4240      	negs	r0, r0
 80049ce:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80049d2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80049d6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80049da:	ea5f 5c91 	movs.w	r12, r1, lsr #22
 80049de:	f43f aedc 	beq.w	800479a <__adddf3+0xe6>
 80049e2:	f04f 0203 	mov.w	r2, #3
 80049e6:	ea5f 0cdc 	movs.w	r12, r12, lsr #3
 80049ea:	bf18      	it	ne
 80049ec:	3203      	addne	r2, #3
 80049ee:	ea5f 0cdc 	movs.w	r12, r12, lsr #3
 80049f2:	bf18      	it	ne
 80049f4:	3203      	addne	r2, #3
 80049f6:	eb02 02dc 	add.w	r2, r2, r12, lsr #3
 80049fa:	f1c2 0320 	rsb	r3, r2, #32
 80049fe:	fa00 fc03 	lsl.w	r12, r0, r3
 8004a02:	fa20 f002 	lsr.w	r0, r0, r2
 8004a06:	fa01 fe03 	lsl.w	lr, r1, r3
 8004a0a:	ea40 000e 	orr.w	r0, r0, lr
 8004a0e:	fa21 f102 	lsr.w	r1, r1, r2
 8004a12:	4414      	add	r4, r2
 8004a14:	e6c1      	b.n	800479a <__adddf3+0xe6>
 8004a16:	bf00      	nop

08004a18 <__aeabi_d2f>:
 8004a18:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8004a1c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8004a20:	bf24      	itt	cs
 8004a22:	f5b3 1c00 	subscs.w	r12, r3, #2097152	; 0x200000
 8004a26:	f1dc 5cfe 	rsbscs	r12, r12, #532676608	; 0x1fc00000
 8004a2a:	d90d      	bls.n	8004a48 <__aeabi_d2f+0x30>
 8004a2c:	f001 4c00 	and.w	r12, r1, #2147483648	; 0x80000000
 8004a30:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8004a34:	ea4c 7050 	orr.w	r0, r12, r0, lsr #29
 8004a38:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8004a3c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8004a40:	bf08      	it	eq
 8004a42:	f020 0001 	biceq.w	r0, r0, #1
 8004a46:	4770      	bx	lr
 8004a48:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8004a4c:	d121      	bne.n	8004a92 <__aeabi_d2f+0x7a>
 8004a4e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8004a52:	bfbc      	itt	lt
 8004a54:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8004a58:	4770      	bxlt	lr
 8004a5a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8004a5e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8004a62:	f1c2 0218 	rsb	r2, r2, #24
 8004a66:	f1c2 0c20 	rsb	r12, r2, #32
 8004a6a:	fa10 f30c 	lsls.w	r3, r0, r12
 8004a6e:	fa20 f002 	lsr.w	r0, r0, r2
 8004a72:	bf18      	it	ne
 8004a74:	f040 0001 	orrne.w	r0, r0, #1
 8004a78:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8004a7c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8004a80:	fa03 fc0c 	lsl.w	r12, r3, r12
 8004a84:	ea40 000c 	orr.w	r0, r0, r12
 8004a88:	fa23 f302 	lsr.w	r3, r3, r2
 8004a8c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8004a90:	e7cc      	b.n	8004a2c <__aeabi_d2f+0x14>
 8004a92:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8004a96:	d107      	bne.n	8004aa8 <__aeabi_d2f+0x90>
 8004a98:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8004a9c:	bf1e      	ittt	ne
 8004a9e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8004aa2:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8004aa6:	4770      	bxne	lr
 8004aa8:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8004aac:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8004ab0:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8004ab4:	4770      	bx	lr
 8004ab6:	bf00      	nop

08004ab8 <__errno>:
 8004ab8:	4b01      	ldr	r3, [pc, #4]	; (8004ac0 <__errno+0x8>)
 8004aba:	6818      	ldr	r0, [r3, #0]
 8004abc:	4770      	bx	lr
 8004abe:	bf00      	nop
 8004ac0:	200001b8 	.word	0x200001b8

08004ac4 <__sflush_r>:
 8004ac4:	898a      	ldrh	r2, [r1, #12]
 8004ac6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004aca:	4605      	mov	r5, r0
 8004acc:	0710      	lsls	r0, r2, #28
 8004ace:	460c      	mov	r4, r1
 8004ad0:	d45a      	bmi.n	8004b88 <__sflush_r+0xc4>
 8004ad2:	684b      	ldr	r3, [r1, #4]
 8004ad4:	2b00      	cmp	r3, #0
 8004ad6:	dc05      	bgt.n	8004ae4 <__sflush_r+0x20>
 8004ad8:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8004ada:	2b00      	cmp	r3, #0
 8004adc:	dc02      	bgt.n	8004ae4 <__sflush_r+0x20>
 8004ade:	2000      	movs	r0, #0
 8004ae0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004ae4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8004ae6:	2e00      	cmp	r6, #0
 8004ae8:	d0f9      	beq.n	8004ade <__sflush_r+0x1a>
 8004aea:	2300      	movs	r3, #0
 8004aec:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8004af0:	682f      	ldr	r7, [r5, #0]
 8004af2:	602b      	str	r3, [r5, #0]
 8004af4:	d033      	beq.n	8004b5e <__sflush_r+0x9a>
 8004af6:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8004af8:	89a3      	ldrh	r3, [r4, #12]
 8004afa:	075a      	lsls	r2, r3, #29
 8004afc:	d505      	bpl.n	8004b0a <__sflush_r+0x46>
 8004afe:	6863      	ldr	r3, [r4, #4]
 8004b00:	1ac0      	subs	r0, r0, r3
 8004b02:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8004b04:	b10b      	cbz	r3, 8004b0a <__sflush_r+0x46>
 8004b06:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004b08:	1ac0      	subs	r0, r0, r3
 8004b0a:	2300      	movs	r3, #0
 8004b0c:	4602      	mov	r2, r0
 8004b0e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8004b10:	6a21      	ldr	r1, [r4, #32]
 8004b12:	4628      	mov	r0, r5
 8004b14:	47b0      	blx	r6
 8004b16:	1c43      	adds	r3, r0, #1
 8004b18:	89a3      	ldrh	r3, [r4, #12]
 8004b1a:	d106      	bne.n	8004b2a <__sflush_r+0x66>
 8004b1c:	6829      	ldr	r1, [r5, #0]
 8004b1e:	291d      	cmp	r1, #29
 8004b20:	d84b      	bhi.n	8004bba <__sflush_r+0xf6>
 8004b22:	4a2b      	ldr	r2, [pc, #172]	; (8004bd0 <__sflush_r+0x10c>)
 8004b24:	40ca      	lsrs	r2, r1
 8004b26:	07d6      	lsls	r6, r2, #31
 8004b28:	d547      	bpl.n	8004bba <__sflush_r+0xf6>
 8004b2a:	2200      	movs	r2, #0
 8004b2c:	6062      	str	r2, [r4, #4]
 8004b2e:	04d9      	lsls	r1, r3, #19
 8004b30:	6922      	ldr	r2, [r4, #16]
 8004b32:	6022      	str	r2, [r4, #0]
 8004b34:	d504      	bpl.n	8004b40 <__sflush_r+0x7c>
 8004b36:	1c42      	adds	r2, r0, #1
 8004b38:	d101      	bne.n	8004b3e <__sflush_r+0x7a>
 8004b3a:	682b      	ldr	r3, [r5, #0]
 8004b3c:	b903      	cbnz	r3, 8004b40 <__sflush_r+0x7c>
 8004b3e:	6560      	str	r0, [r4, #84]	; 0x54
 8004b40:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8004b42:	602f      	str	r7, [r5, #0]
 8004b44:	2900      	cmp	r1, #0
 8004b46:	d0ca      	beq.n	8004ade <__sflush_r+0x1a>
 8004b48:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8004b4c:	4299      	cmp	r1, r3
 8004b4e:	d002      	beq.n	8004b56 <__sflush_r+0x92>
 8004b50:	4628      	mov	r0, r5
 8004b52:	f7ff fb7b 	bl	800424c <__wrap__free_r>
 8004b56:	2000      	movs	r0, #0
 8004b58:	6360      	str	r0, [r4, #52]	; 0x34
 8004b5a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004b5e:	6a21      	ldr	r1, [r4, #32]
 8004b60:	2301      	movs	r3, #1
 8004b62:	4628      	mov	r0, r5
 8004b64:	47b0      	blx	r6
 8004b66:	1c41      	adds	r1, r0, #1
 8004b68:	d1c6      	bne.n	8004af8 <__sflush_r+0x34>
 8004b6a:	682b      	ldr	r3, [r5, #0]
 8004b6c:	2b00      	cmp	r3, #0
 8004b6e:	d0c3      	beq.n	8004af8 <__sflush_r+0x34>
 8004b70:	2b1d      	cmp	r3, #29
 8004b72:	d001      	beq.n	8004b78 <__sflush_r+0xb4>
 8004b74:	2b16      	cmp	r3, #22
 8004b76:	d101      	bne.n	8004b7c <__sflush_r+0xb8>
 8004b78:	602f      	str	r7, [r5, #0]
 8004b7a:	e7b0      	b.n	8004ade <__sflush_r+0x1a>
 8004b7c:	89a3      	ldrh	r3, [r4, #12]
 8004b7e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004b82:	81a3      	strh	r3, [r4, #12]
 8004b84:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004b88:	690f      	ldr	r7, [r1, #16]
 8004b8a:	2f00      	cmp	r7, #0
 8004b8c:	d0a7      	beq.n	8004ade <__sflush_r+0x1a>
 8004b8e:	0793      	lsls	r3, r2, #30
 8004b90:	680e      	ldr	r6, [r1, #0]
 8004b92:	bf08      	it	eq
 8004b94:	694b      	ldreq	r3, [r1, #20]
 8004b96:	600f      	str	r7, [r1, #0]
 8004b98:	bf18      	it	ne
 8004b9a:	2300      	movne	r3, #0
 8004b9c:	eba6 0807 	sub.w	r8, r6, r7
 8004ba0:	608b      	str	r3, [r1, #8]
 8004ba2:	f1b8 0f00 	cmp.w	r8, #0
 8004ba6:	dd9a      	ble.n	8004ade <__sflush_r+0x1a>
 8004ba8:	4643      	mov	r3, r8
 8004baa:	463a      	mov	r2, r7
 8004bac:	6a21      	ldr	r1, [r4, #32]
 8004bae:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8004bb0:	4628      	mov	r0, r5
 8004bb2:	47b0      	blx	r6
 8004bb4:	2800      	cmp	r0, #0
 8004bb6:	dc07      	bgt.n	8004bc8 <__sflush_r+0x104>
 8004bb8:	89a3      	ldrh	r3, [r4, #12]
 8004bba:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004bbe:	81a3      	strh	r3, [r4, #12]
 8004bc0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004bc4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004bc8:	4407      	add	r7, r0
 8004bca:	eba8 0800 	sub.w	r8, r8, r0
 8004bce:	e7e8      	b.n	8004ba2 <__sflush_r+0xde>
 8004bd0:	20400001 	.word	0x20400001

08004bd4 <_fflush_r>:
 8004bd4:	b538      	push	{r3, r4, r5, lr}
 8004bd6:	690b      	ldr	r3, [r1, #16]
 8004bd8:	4605      	mov	r5, r0
 8004bda:	460c      	mov	r4, r1
 8004bdc:	b1db      	cbz	r3, 8004c16 <_fflush_r+0x42>
 8004bde:	b118      	cbz	r0, 8004be8 <_fflush_r+0x14>
 8004be0:	6983      	ldr	r3, [r0, #24]
 8004be2:	b90b      	cbnz	r3, 8004be8 <_fflush_r+0x14>
 8004be4:	f000 f872 	bl	8004ccc <__sinit>
 8004be8:	4b0c      	ldr	r3, [pc, #48]	; (8004c1c <_fflush_r+0x48>)
 8004bea:	429c      	cmp	r4, r3
 8004bec:	d109      	bne.n	8004c02 <_fflush_r+0x2e>
 8004bee:	686c      	ldr	r4, [r5, #4]
 8004bf0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004bf4:	b17b      	cbz	r3, 8004c16 <_fflush_r+0x42>
 8004bf6:	4621      	mov	r1, r4
 8004bf8:	4628      	mov	r0, r5
 8004bfa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004bfe:	f7ff bf61 	b.w	8004ac4 <__sflush_r>
 8004c02:	4b07      	ldr	r3, [pc, #28]	; (8004c20 <_fflush_r+0x4c>)
 8004c04:	429c      	cmp	r4, r3
 8004c06:	d101      	bne.n	8004c0c <_fflush_r+0x38>
 8004c08:	68ac      	ldr	r4, [r5, #8]
 8004c0a:	e7f1      	b.n	8004bf0 <_fflush_r+0x1c>
 8004c0c:	4b05      	ldr	r3, [pc, #20]	; (8004c24 <_fflush_r+0x50>)
 8004c0e:	429c      	cmp	r4, r3
 8004c10:	bf08      	it	eq
 8004c12:	68ec      	ldreq	r4, [r5, #12]
 8004c14:	e7ec      	b.n	8004bf0 <_fflush_r+0x1c>
 8004c16:	2000      	movs	r0, #0
 8004c18:	bd38      	pop	{r3, r4, r5, pc}
 8004c1a:	bf00      	nop
 8004c1c:	08005e00 	.word	0x08005e00
 8004c20:	08005e20 	.word	0x08005e20
 8004c24:	08005de0 	.word	0x08005de0

08004c28 <fflush>:
 8004c28:	4601      	mov	r1, r0
 8004c2a:	b920      	cbnz	r0, 8004c36 <fflush+0xe>
 8004c2c:	4b04      	ldr	r3, [pc, #16]	; (8004c40 <fflush+0x18>)
 8004c2e:	4905      	ldr	r1, [pc, #20]	; (8004c44 <fflush+0x1c>)
 8004c30:	6818      	ldr	r0, [r3, #0]
 8004c32:	f000 b8b7 	b.w	8004da4 <_fwalk_reent>
 8004c36:	4b04      	ldr	r3, [pc, #16]	; (8004c48 <fflush+0x20>)
 8004c38:	6818      	ldr	r0, [r3, #0]
 8004c3a:	f7ff bfcb 	b.w	8004bd4 <_fflush_r>
 8004c3e:	bf00      	nop
 8004c40:	08005e40 	.word	0x08005e40
 8004c44:	08004bd5 	.word	0x08004bd5
 8004c48:	200001b8 	.word	0x200001b8

08004c4c <_cleanup_r>:
 8004c4c:	4901      	ldr	r1, [pc, #4]	; (8004c54 <_cleanup_r+0x8>)
 8004c4e:	f000 b8a9 	b.w	8004da4 <_fwalk_reent>
 8004c52:	bf00      	nop
 8004c54:	08004bd5 	.word	0x08004bd5

08004c58 <std.isra.0>:
 8004c58:	2300      	movs	r3, #0
 8004c5a:	b510      	push	{r4, lr}
 8004c5c:	4604      	mov	r4, r0
 8004c5e:	6003      	str	r3, [r0, #0]
 8004c60:	6043      	str	r3, [r0, #4]
 8004c62:	6083      	str	r3, [r0, #8]
 8004c64:	8181      	strh	r1, [r0, #12]
 8004c66:	6643      	str	r3, [r0, #100]	; 0x64
 8004c68:	81c2      	strh	r2, [r0, #14]
 8004c6a:	6103      	str	r3, [r0, #16]
 8004c6c:	6143      	str	r3, [r0, #20]
 8004c6e:	6183      	str	r3, [r0, #24]
 8004c70:	4619      	mov	r1, r3
 8004c72:	2208      	movs	r2, #8
 8004c74:	305c      	adds	r0, #92	; 0x5c
 8004c76:	f000 f960 	bl	8004f3a <memset>
 8004c7a:	4b05      	ldr	r3, [pc, #20]	; (8004c90 <std.isra.0+0x38>)
 8004c7c:	6263      	str	r3, [r4, #36]	; 0x24
 8004c7e:	4b05      	ldr	r3, [pc, #20]	; (8004c94 <std.isra.0+0x3c>)
 8004c80:	62a3      	str	r3, [r4, #40]	; 0x28
 8004c82:	4b05      	ldr	r3, [pc, #20]	; (8004c98 <std.isra.0+0x40>)
 8004c84:	62e3      	str	r3, [r4, #44]	; 0x2c
 8004c86:	4b05      	ldr	r3, [pc, #20]	; (8004c9c <std.isra.0+0x44>)
 8004c88:	6224      	str	r4, [r4, #32]
 8004c8a:	6323      	str	r3, [r4, #48]	; 0x30
 8004c8c:	bd10      	pop	{r4, pc}
 8004c8e:	bf00      	nop
 8004c90:	0800544d 	.word	0x0800544d
 8004c94:	0800546f 	.word	0x0800546f
 8004c98:	080054a7 	.word	0x080054a7
 8004c9c:	080054cb 	.word	0x080054cb

08004ca0 <__sfmoreglue>:
 8004ca0:	b570      	push	{r4, r5, r6, lr}
 8004ca2:	1e4a      	subs	r2, r1, #1
 8004ca4:	2568      	movs	r5, #104	; 0x68
 8004ca6:	4355      	muls	r5, r2
 8004ca8:	460e      	mov	r6, r1
 8004caa:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8004cae:	f7ff fac9 	bl	8004244 <__wrap__malloc_r>
 8004cb2:	4604      	mov	r4, r0
 8004cb4:	b140      	cbz	r0, 8004cc8 <__sfmoreglue+0x28>
 8004cb6:	2100      	movs	r1, #0
 8004cb8:	e880 0042 	stmia.w	r0, {r1, r6}
 8004cbc:	300c      	adds	r0, #12
 8004cbe:	60a0      	str	r0, [r4, #8]
 8004cc0:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8004cc4:	f000 f939 	bl	8004f3a <memset>
 8004cc8:	4620      	mov	r0, r4
 8004cca:	bd70      	pop	{r4, r5, r6, pc}

08004ccc <__sinit>:
 8004ccc:	6983      	ldr	r3, [r0, #24]
 8004cce:	b510      	push	{r4, lr}
 8004cd0:	4604      	mov	r4, r0
 8004cd2:	bb33      	cbnz	r3, 8004d22 <__sinit+0x56>
 8004cd4:	6483      	str	r3, [r0, #72]	; 0x48
 8004cd6:	64c3      	str	r3, [r0, #76]	; 0x4c
 8004cd8:	6503      	str	r3, [r0, #80]	; 0x50
 8004cda:	4b12      	ldr	r3, [pc, #72]	; (8004d24 <__sinit+0x58>)
 8004cdc:	4a12      	ldr	r2, [pc, #72]	; (8004d28 <__sinit+0x5c>)
 8004cde:	681b      	ldr	r3, [r3, #0]
 8004ce0:	6282      	str	r2, [r0, #40]	; 0x28
 8004ce2:	4298      	cmp	r0, r3
 8004ce4:	bf04      	itt	eq
 8004ce6:	2301      	moveq	r3, #1
 8004ce8:	6183      	streq	r3, [r0, #24]
 8004cea:	f000 f81f 	bl	8004d2c <__sfp>
 8004cee:	6060      	str	r0, [r4, #4]
 8004cf0:	4620      	mov	r0, r4
 8004cf2:	f000 f81b 	bl	8004d2c <__sfp>
 8004cf6:	60a0      	str	r0, [r4, #8]
 8004cf8:	4620      	mov	r0, r4
 8004cfa:	f000 f817 	bl	8004d2c <__sfp>
 8004cfe:	2200      	movs	r2, #0
 8004d00:	60e0      	str	r0, [r4, #12]
 8004d02:	2104      	movs	r1, #4
 8004d04:	6860      	ldr	r0, [r4, #4]
 8004d06:	f7ff ffa7 	bl	8004c58 <std.isra.0>
 8004d0a:	2201      	movs	r2, #1
 8004d0c:	2109      	movs	r1, #9
 8004d0e:	68a0      	ldr	r0, [r4, #8]
 8004d10:	f7ff ffa2 	bl	8004c58 <std.isra.0>
 8004d14:	2202      	movs	r2, #2
 8004d16:	2112      	movs	r1, #18
 8004d18:	68e0      	ldr	r0, [r4, #12]
 8004d1a:	f7ff ff9d 	bl	8004c58 <std.isra.0>
 8004d1e:	2301      	movs	r3, #1
 8004d20:	61a3      	str	r3, [r4, #24]
 8004d22:	bd10      	pop	{r4, pc}
 8004d24:	08005e40 	.word	0x08005e40
 8004d28:	08004c4d 	.word	0x08004c4d

08004d2c <__sfp>:
 8004d2c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004d2e:	4b1c      	ldr	r3, [pc, #112]	; (8004da0 <__sfp+0x74>)
 8004d30:	681e      	ldr	r6, [r3, #0]
 8004d32:	69b3      	ldr	r3, [r6, #24]
 8004d34:	4607      	mov	r7, r0
 8004d36:	b913      	cbnz	r3, 8004d3e <__sfp+0x12>
 8004d38:	4630      	mov	r0, r6
 8004d3a:	f7ff ffc7 	bl	8004ccc <__sinit>
 8004d3e:	3648      	adds	r6, #72	; 0x48
 8004d40:	68b4      	ldr	r4, [r6, #8]
 8004d42:	6873      	ldr	r3, [r6, #4]
 8004d44:	3b01      	subs	r3, #1
 8004d46:	d503      	bpl.n	8004d50 <__sfp+0x24>
 8004d48:	6833      	ldr	r3, [r6, #0]
 8004d4a:	b133      	cbz	r3, 8004d5a <__sfp+0x2e>
 8004d4c:	6836      	ldr	r6, [r6, #0]
 8004d4e:	e7f7      	b.n	8004d40 <__sfp+0x14>
 8004d50:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8004d54:	b16d      	cbz	r5, 8004d72 <__sfp+0x46>
 8004d56:	3468      	adds	r4, #104	; 0x68
 8004d58:	e7f4      	b.n	8004d44 <__sfp+0x18>
 8004d5a:	2104      	movs	r1, #4
 8004d5c:	4638      	mov	r0, r7
 8004d5e:	f7ff ff9f 	bl	8004ca0 <__sfmoreglue>
 8004d62:	6030      	str	r0, [r6, #0]
 8004d64:	2800      	cmp	r0, #0
 8004d66:	d1f1      	bne.n	8004d4c <__sfp+0x20>
 8004d68:	230c      	movs	r3, #12
 8004d6a:	603b      	str	r3, [r7, #0]
 8004d6c:	4604      	mov	r4, r0
 8004d6e:	4620      	mov	r0, r4
 8004d70:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004d72:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8004d76:	81e3      	strh	r3, [r4, #14]
 8004d78:	2301      	movs	r3, #1
 8004d7a:	81a3      	strh	r3, [r4, #12]
 8004d7c:	6665      	str	r5, [r4, #100]	; 0x64
 8004d7e:	6025      	str	r5, [r4, #0]
 8004d80:	60a5      	str	r5, [r4, #8]
 8004d82:	6065      	str	r5, [r4, #4]
 8004d84:	6125      	str	r5, [r4, #16]
 8004d86:	6165      	str	r5, [r4, #20]
 8004d88:	61a5      	str	r5, [r4, #24]
 8004d8a:	2208      	movs	r2, #8
 8004d8c:	4629      	mov	r1, r5
 8004d8e:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8004d92:	f000 f8d2 	bl	8004f3a <memset>
 8004d96:	6365      	str	r5, [r4, #52]	; 0x34
 8004d98:	63a5      	str	r5, [r4, #56]	; 0x38
 8004d9a:	64a5      	str	r5, [r4, #72]	; 0x48
 8004d9c:	64e5      	str	r5, [r4, #76]	; 0x4c
 8004d9e:	e7e6      	b.n	8004d6e <__sfp+0x42>
 8004da0:	08005e40 	.word	0x08005e40

08004da4 <_fwalk_reent>:
 8004da4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004da8:	4680      	mov	r8, r0
 8004daa:	4689      	mov	r9, r1
 8004dac:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8004db0:	2600      	movs	r6, #0
 8004db2:	b914      	cbnz	r4, 8004dba <_fwalk_reent+0x16>
 8004db4:	4630      	mov	r0, r6
 8004db6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004dba:	68a5      	ldr	r5, [r4, #8]
 8004dbc:	6867      	ldr	r7, [r4, #4]
 8004dbe:	3f01      	subs	r7, #1
 8004dc0:	d501      	bpl.n	8004dc6 <_fwalk_reent+0x22>
 8004dc2:	6824      	ldr	r4, [r4, #0]
 8004dc4:	e7f5      	b.n	8004db2 <_fwalk_reent+0xe>
 8004dc6:	89ab      	ldrh	r3, [r5, #12]
 8004dc8:	2b01      	cmp	r3, #1
 8004dca:	d907      	bls.n	8004ddc <_fwalk_reent+0x38>
 8004dcc:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8004dd0:	3301      	adds	r3, #1
 8004dd2:	d003      	beq.n	8004ddc <_fwalk_reent+0x38>
 8004dd4:	4629      	mov	r1, r5
 8004dd6:	4640      	mov	r0, r8
 8004dd8:	47c8      	blx	r9
 8004dda:	4306      	orrs	r6, r0
 8004ddc:	3568      	adds	r5, #104	; 0x68
 8004dde:	e7ee      	b.n	8004dbe <_fwalk_reent+0x1a>

08004de0 <__libc_init_array>:
 8004de0:	b570      	push	{r4, r5, r6, lr}
 8004de2:	4e0d      	ldr	r6, [pc, #52]	; (8004e18 <__libc_init_array+0x38>)
 8004de4:	4c0d      	ldr	r4, [pc, #52]	; (8004e1c <__libc_init_array+0x3c>)
 8004de6:	1ba4      	subs	r4, r4, r6
 8004de8:	10a4      	asrs	r4, r4, #2
 8004dea:	2500      	movs	r5, #0
 8004dec:	42a5      	cmp	r5, r4
 8004dee:	d109      	bne.n	8004e04 <__libc_init_array+0x24>
 8004df0:	4e0b      	ldr	r6, [pc, #44]	; (8004e20 <__libc_init_array+0x40>)
 8004df2:	4c0c      	ldr	r4, [pc, #48]	; (8004e24 <__libc_init_array+0x44>)
 8004df4:	f000 fd36 	bl	8005864 <_init>
 8004df8:	1ba4      	subs	r4, r4, r6
 8004dfa:	10a4      	asrs	r4, r4, #2
 8004dfc:	2500      	movs	r5, #0
 8004dfe:	42a5      	cmp	r5, r4
 8004e00:	d105      	bne.n	8004e0e <__libc_init_array+0x2e>
 8004e02:	bd70      	pop	{r4, r5, r6, pc}
 8004e04:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8004e08:	4798      	blx	r3
 8004e0a:	3501      	adds	r5, #1
 8004e0c:	e7ee      	b.n	8004dec <__libc_init_array+0xc>
 8004e0e:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8004e12:	4798      	blx	r3
 8004e14:	3501      	adds	r5, #1
 8004e16:	e7f2      	b.n	8004dfe <__libc_init_array+0x1e>
 8004e18:	2000021c 	.word	0x2000021c
 8004e1c:	2000021c 	.word	0x2000021c
 8004e20:	2000021c 	.word	0x2000021c
 8004e24:	20000228 	.word	0x20000228

08004e28 <malloc>:
 8004e28:	4b02      	ldr	r3, [pc, #8]	; (8004e34 <malloc+0xc>)
 8004e2a:	4601      	mov	r1, r0
 8004e2c:	6818      	ldr	r0, [r3, #0]
 8004e2e:	f7ff ba09 	b.w	8004244 <__wrap__malloc_r>
 8004e32:	bf00      	nop
 8004e34:	200001b8 	.word	0x200001b8

08004e38 <free>:
 8004e38:	4b02      	ldr	r3, [pc, #8]	; (8004e44 <free+0xc>)
 8004e3a:	4601      	mov	r1, r0
 8004e3c:	6818      	ldr	r0, [r3, #0]
 8004e3e:	f7ff ba05 	b.w	800424c <__wrap__free_r>
 8004e42:	bf00      	nop
 8004e44:	200001b8 	.word	0x200001b8
	...

08004e50 <memchr>:
 8004e50:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8004e54:	2a10      	cmp	r2, #16
 8004e56:	db2b      	blt.n	8004eb0 <memchr+0x60>
 8004e58:	f010 0f07 	tst.w	r0, #7
 8004e5c:	d008      	beq.n	8004e70 <memchr+0x20>
 8004e5e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8004e62:	3a01      	subs	r2, #1
 8004e64:	428b      	cmp	r3, r1
 8004e66:	d02d      	beq.n	8004ec4 <memchr+0x74>
 8004e68:	f010 0f07 	tst.w	r0, #7
 8004e6c:	b342      	cbz	r2, 8004ec0 <memchr+0x70>
 8004e6e:	d1f6      	bne.n	8004e5e <memchr+0xe>
 8004e70:	b4f0      	push	{r4, r5, r6, r7}
 8004e72:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8004e76:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 8004e7a:	f022 0407 	bic.w	r4, r2, #7
 8004e7e:	f07f 0700 	mvns.w	r7, #0
 8004e82:	2300      	movs	r3, #0
 8004e84:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8004e88:	3c08      	subs	r4, #8
 8004e8a:	ea85 0501 	eor.w	r5, r5, r1
 8004e8e:	ea86 0601 	eor.w	r6, r6, r1
 8004e92:	fa85 f547 	uadd8	r5, r5, r7
 8004e96:	faa3 f587 	sel	r5, r3, r7
 8004e9a:	fa86 f647 	uadd8	r6, r6, r7
 8004e9e:	faa5 f687 	sel	r6, r5, r7
 8004ea2:	b98e      	cbnz	r6, 8004ec8 <memchr+0x78>
 8004ea4:	d1ee      	bne.n	8004e84 <memchr+0x34>
 8004ea6:	bcf0      	pop	{r4, r5, r6, r7}
 8004ea8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8004eac:	f002 0207 	and.w	r2, r2, #7
 8004eb0:	b132      	cbz	r2, 8004ec0 <memchr+0x70>
 8004eb2:	f810 3b01 	ldrb.w	r3, [r0], #1
 8004eb6:	3a01      	subs	r2, #1
 8004eb8:	ea83 0301 	eor.w	r3, r3, r1
 8004ebc:	b113      	cbz	r3, 8004ec4 <memchr+0x74>
 8004ebe:	d1f8      	bne.n	8004eb2 <memchr+0x62>
 8004ec0:	2000      	movs	r0, #0
 8004ec2:	4770      	bx	lr
 8004ec4:	3801      	subs	r0, #1
 8004ec6:	4770      	bx	lr
 8004ec8:	2d00      	cmp	r5, #0
 8004eca:	bf06      	itte	eq
 8004ecc:	4635      	moveq	r5, r6
 8004ece:	3803      	subeq	r0, #3
 8004ed0:	3807      	subne	r0, #7
 8004ed2:	f015 0f01 	tst.w	r5, #1
 8004ed6:	d107      	bne.n	8004ee8 <memchr+0x98>
 8004ed8:	3001      	adds	r0, #1
 8004eda:	f415 7f80 	tst.w	r5, #256	; 0x100
 8004ede:	bf02      	ittt	eq
 8004ee0:	3001      	addeq	r0, #1
 8004ee2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8004ee6:	3001      	addeq	r0, #1
 8004ee8:	bcf0      	pop	{r4, r5, r6, r7}
 8004eea:	3801      	subs	r0, #1
 8004eec:	4770      	bx	lr
 8004eee:	bf00      	nop

08004ef0 <memcpy>:
 8004ef0:	b510      	push	{r4, lr}
 8004ef2:	1e43      	subs	r3, r0, #1
 8004ef4:	440a      	add	r2, r1
 8004ef6:	4291      	cmp	r1, r2
 8004ef8:	d100      	bne.n	8004efc <memcpy+0xc>
 8004efa:	bd10      	pop	{r4, pc}
 8004efc:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004f00:	f803 4f01 	strb.w	r4, [r3, #1]!
 8004f04:	e7f7      	b.n	8004ef6 <memcpy+0x6>

08004f06 <memmove>:
 8004f06:	4288      	cmp	r0, r1
 8004f08:	b510      	push	{r4, lr}
 8004f0a:	eb01 0302 	add.w	r3, r1, r2
 8004f0e:	d803      	bhi.n	8004f18 <memmove+0x12>
 8004f10:	1e42      	subs	r2, r0, #1
 8004f12:	4299      	cmp	r1, r3
 8004f14:	d10c      	bne.n	8004f30 <memmove+0x2a>
 8004f16:	bd10      	pop	{r4, pc}
 8004f18:	4298      	cmp	r0, r3
 8004f1a:	d2f9      	bcs.n	8004f10 <memmove+0xa>
 8004f1c:	1881      	adds	r1, r0, r2
 8004f1e:	1ad2      	subs	r2, r2, r3
 8004f20:	42d3      	cmn	r3, r2
 8004f22:	d100      	bne.n	8004f26 <memmove+0x20>
 8004f24:	bd10      	pop	{r4, pc}
 8004f26:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8004f2a:	f801 4d01 	strb.w	r4, [r1, #-1]!
 8004f2e:	e7f7      	b.n	8004f20 <memmove+0x1a>
 8004f30:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004f34:	f802 4f01 	strb.w	r4, [r2, #1]!
 8004f38:	e7eb      	b.n	8004f12 <memmove+0xc>

08004f3a <memset>:
 8004f3a:	4402      	add	r2, r0
 8004f3c:	4603      	mov	r3, r0
 8004f3e:	4293      	cmp	r3, r2
 8004f40:	d100      	bne.n	8004f44 <memset+0xa>
 8004f42:	4770      	bx	lr
 8004f44:	f803 1b01 	strb.w	r1, [r3], #1
 8004f48:	e7f9      	b.n	8004f3e <memset+0x4>
	...

08004f4c <_free_r>:
 8004f4c:	b538      	push	{r3, r4, r5, lr}
 8004f4e:	4605      	mov	r5, r0
 8004f50:	2900      	cmp	r1, #0
 8004f52:	d045      	beq.n	8004fe0 <_free_r+0x94>
 8004f54:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004f58:	1f0c      	subs	r4, r1, #4
 8004f5a:	2b00      	cmp	r3, #0
 8004f5c:	bfb8      	it	lt
 8004f5e:	18e4      	addlt	r4, r4, r3
 8004f60:	f7ff fa95 	bl	800448e <__malloc_lock>
 8004f64:	4a1f      	ldr	r2, [pc, #124]	; (8004fe4 <_free_r+0x98>)
 8004f66:	6813      	ldr	r3, [r2, #0]
 8004f68:	4610      	mov	r0, r2
 8004f6a:	b933      	cbnz	r3, 8004f7a <_free_r+0x2e>
 8004f6c:	6063      	str	r3, [r4, #4]
 8004f6e:	6014      	str	r4, [r2, #0]
 8004f70:	4628      	mov	r0, r5
 8004f72:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004f76:	f7ff ba8e 	b.w	8004496 <__malloc_unlock>
 8004f7a:	42a3      	cmp	r3, r4
 8004f7c:	d90c      	bls.n	8004f98 <_free_r+0x4c>
 8004f7e:	6821      	ldr	r1, [r4, #0]
 8004f80:	1862      	adds	r2, r4, r1
 8004f82:	4293      	cmp	r3, r2
 8004f84:	bf04      	itt	eq
 8004f86:	681a      	ldreq	r2, [r3, #0]
 8004f88:	685b      	ldreq	r3, [r3, #4]
 8004f8a:	6063      	str	r3, [r4, #4]
 8004f8c:	bf04      	itt	eq
 8004f8e:	1852      	addeq	r2, r2, r1
 8004f90:	6022      	streq	r2, [r4, #0]
 8004f92:	6004      	str	r4, [r0, #0]
 8004f94:	e7ec      	b.n	8004f70 <_free_r+0x24>
 8004f96:	4613      	mov	r3, r2
 8004f98:	685a      	ldr	r2, [r3, #4]
 8004f9a:	b10a      	cbz	r2, 8004fa0 <_free_r+0x54>
 8004f9c:	42a2      	cmp	r2, r4
 8004f9e:	d9fa      	bls.n	8004f96 <_free_r+0x4a>
 8004fa0:	6819      	ldr	r1, [r3, #0]
 8004fa2:	1858      	adds	r0, r3, r1
 8004fa4:	42a0      	cmp	r0, r4
 8004fa6:	d10b      	bne.n	8004fc0 <_free_r+0x74>
 8004fa8:	6820      	ldr	r0, [r4, #0]
 8004faa:	4401      	add	r1, r0
 8004fac:	1858      	adds	r0, r3, r1
 8004fae:	4282      	cmp	r2, r0
 8004fb0:	6019      	str	r1, [r3, #0]
 8004fb2:	d1dd      	bne.n	8004f70 <_free_r+0x24>
 8004fb4:	6810      	ldr	r0, [r2, #0]
 8004fb6:	6852      	ldr	r2, [r2, #4]
 8004fb8:	605a      	str	r2, [r3, #4]
 8004fba:	4401      	add	r1, r0
 8004fbc:	6019      	str	r1, [r3, #0]
 8004fbe:	e7d7      	b.n	8004f70 <_free_r+0x24>
 8004fc0:	d902      	bls.n	8004fc8 <_free_r+0x7c>
 8004fc2:	230c      	movs	r3, #12
 8004fc4:	602b      	str	r3, [r5, #0]
 8004fc6:	e7d3      	b.n	8004f70 <_free_r+0x24>
 8004fc8:	6820      	ldr	r0, [r4, #0]
 8004fca:	1821      	adds	r1, r4, r0
 8004fcc:	428a      	cmp	r2, r1
 8004fce:	bf04      	itt	eq
 8004fd0:	6811      	ldreq	r1, [r2, #0]
 8004fd2:	6852      	ldreq	r2, [r2, #4]
 8004fd4:	6062      	str	r2, [r4, #4]
 8004fd6:	bf04      	itt	eq
 8004fd8:	1809      	addeq	r1, r1, r0
 8004fda:	6021      	streq	r1, [r4, #0]
 8004fdc:	605c      	str	r4, [r3, #4]
 8004fde:	e7c7      	b.n	8004f70 <_free_r+0x24>
 8004fe0:	bd38      	pop	{r3, r4, r5, pc}
 8004fe2:	bf00      	nop
 8004fe4:	20001d1c 	.word	0x20001d1c

08004fe8 <_malloc_r>:
 8004fe8:	b570      	push	{r4, r5, r6, lr}
 8004fea:	1ccd      	adds	r5, r1, #3
 8004fec:	f025 0503 	bic.w	r5, r5, #3
 8004ff0:	3508      	adds	r5, #8
 8004ff2:	2d0c      	cmp	r5, #12
 8004ff4:	bf38      	it	cc
 8004ff6:	250c      	movcc	r5, #12
 8004ff8:	2d00      	cmp	r5, #0
 8004ffa:	4606      	mov	r6, r0
 8004ffc:	db01      	blt.n	8005002 <_malloc_r+0x1a>
 8004ffe:	42a9      	cmp	r1, r5
 8005000:	d903      	bls.n	800500a <_malloc_r+0x22>
 8005002:	230c      	movs	r3, #12
 8005004:	6033      	str	r3, [r6, #0]
 8005006:	2000      	movs	r0, #0
 8005008:	bd70      	pop	{r4, r5, r6, pc}
 800500a:	f7ff fa40 	bl	800448e <__malloc_lock>
 800500e:	4a23      	ldr	r2, [pc, #140]	; (800509c <_malloc_r+0xb4>)
 8005010:	6814      	ldr	r4, [r2, #0]
 8005012:	4621      	mov	r1, r4
 8005014:	b991      	cbnz	r1, 800503c <_malloc_r+0x54>
 8005016:	4c22      	ldr	r4, [pc, #136]	; (80050a0 <_malloc_r+0xb8>)
 8005018:	6823      	ldr	r3, [r4, #0]
 800501a:	b91b      	cbnz	r3, 8005024 <_malloc_r+0x3c>
 800501c:	4630      	mov	r0, r6
 800501e:	f000 fa05 	bl	800542c <_sbrk_r>
 8005022:	6020      	str	r0, [r4, #0]
 8005024:	4629      	mov	r1, r5
 8005026:	4630      	mov	r0, r6
 8005028:	f000 fa00 	bl	800542c <_sbrk_r>
 800502c:	1c43      	adds	r3, r0, #1
 800502e:	d126      	bne.n	800507e <_malloc_r+0x96>
 8005030:	230c      	movs	r3, #12
 8005032:	6033      	str	r3, [r6, #0]
 8005034:	4630      	mov	r0, r6
 8005036:	f7ff fa2e 	bl	8004496 <__malloc_unlock>
 800503a:	e7e4      	b.n	8005006 <_malloc_r+0x1e>
 800503c:	680b      	ldr	r3, [r1, #0]
 800503e:	1b5b      	subs	r3, r3, r5
 8005040:	d41a      	bmi.n	8005078 <_malloc_r+0x90>
 8005042:	2b0b      	cmp	r3, #11
 8005044:	d90f      	bls.n	8005066 <_malloc_r+0x7e>
 8005046:	600b      	str	r3, [r1, #0]
 8005048:	50cd      	str	r5, [r1, r3]
 800504a:	18cc      	adds	r4, r1, r3
 800504c:	4630      	mov	r0, r6
 800504e:	f7ff fa22 	bl	8004496 <__malloc_unlock>
 8005052:	f104 000b 	add.w	r0, r4, #11
 8005056:	1d23      	adds	r3, r4, #4
 8005058:	f020 0007 	bic.w	r0, r0, #7
 800505c:	1ac3      	subs	r3, r0, r3
 800505e:	d01b      	beq.n	8005098 <_malloc_r+0xb0>
 8005060:	425a      	negs	r2, r3
 8005062:	50e2      	str	r2, [r4, r3]
 8005064:	bd70      	pop	{r4, r5, r6, pc}
 8005066:	428c      	cmp	r4, r1
 8005068:	bf0d      	iteet	eq
 800506a:	6863      	ldreq	r3, [r4, #4]
 800506c:	684b      	ldrne	r3, [r1, #4]
 800506e:	6063      	strne	r3, [r4, #4]
 8005070:	6013      	streq	r3, [r2, #0]
 8005072:	bf18      	it	ne
 8005074:	460c      	movne	r4, r1
 8005076:	e7e9      	b.n	800504c <_malloc_r+0x64>
 8005078:	460c      	mov	r4, r1
 800507a:	6849      	ldr	r1, [r1, #4]
 800507c:	e7ca      	b.n	8005014 <_malloc_r+0x2c>
 800507e:	1cc4      	adds	r4, r0, #3
 8005080:	f024 0403 	bic.w	r4, r4, #3
 8005084:	42a0      	cmp	r0, r4
 8005086:	d005      	beq.n	8005094 <_malloc_r+0xac>
 8005088:	1a21      	subs	r1, r4, r0
 800508a:	4630      	mov	r0, r6
 800508c:	f000 f9ce 	bl	800542c <_sbrk_r>
 8005090:	3001      	adds	r0, #1
 8005092:	d0cd      	beq.n	8005030 <_malloc_r+0x48>
 8005094:	6025      	str	r5, [r4, #0]
 8005096:	e7d9      	b.n	800504c <_malloc_r+0x64>
 8005098:	bd70      	pop	{r4, r5, r6, pc}
 800509a:	bf00      	nop
 800509c:	20001d1c 	.word	0x20001d1c
 80050a0:	20001d20 	.word	0x20001d20

080050a4 <_realloc_r>:
 80050a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80050a6:	4607      	mov	r7, r0
 80050a8:	4614      	mov	r4, r2
 80050aa:	460e      	mov	r6, r1
 80050ac:	b921      	cbnz	r1, 80050b8 <_realloc_r+0x14>
 80050ae:	4611      	mov	r1, r2
 80050b0:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80050b4:	f7ff b8c6 	b.w	8004244 <__wrap__malloc_r>
 80050b8:	b922      	cbnz	r2, 80050c4 <_realloc_r+0x20>
 80050ba:	f7ff f8c7 	bl	800424c <__wrap__free_r>
 80050be:	4625      	mov	r5, r4
 80050c0:	4628      	mov	r0, r5
 80050c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80050c4:	f000 fa64 	bl	8005590 <_malloc_usable_size_r>
 80050c8:	4284      	cmp	r4, r0
 80050ca:	d90f      	bls.n	80050ec <_realloc_r+0x48>
 80050cc:	4621      	mov	r1, r4
 80050ce:	4638      	mov	r0, r7
 80050d0:	f7ff f8b8 	bl	8004244 <__wrap__malloc_r>
 80050d4:	4605      	mov	r5, r0
 80050d6:	2800      	cmp	r0, #0
 80050d8:	d0f2      	beq.n	80050c0 <_realloc_r+0x1c>
 80050da:	4631      	mov	r1, r6
 80050dc:	4622      	mov	r2, r4
 80050de:	f7ff ff07 	bl	8004ef0 <memcpy>
 80050e2:	4631      	mov	r1, r6
 80050e4:	4638      	mov	r0, r7
 80050e6:	f7ff f8b1 	bl	800424c <__wrap__free_r>
 80050ea:	e7e9      	b.n	80050c0 <_realloc_r+0x1c>
 80050ec:	4635      	mov	r5, r6
 80050ee:	e7e7      	b.n	80050c0 <_realloc_r+0x1c>

080050f0 <_printf_common>:
 80050f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 80050f4:	4691      	mov	r9, r2
 80050f6:	461f      	mov	r7, r3
 80050f8:	688a      	ldr	r2, [r1, #8]
 80050fa:	690b      	ldr	r3, [r1, #16]
 80050fc:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8005100:	4293      	cmp	r3, r2
 8005102:	bfb8      	it	lt
 8005104:	4613      	movlt	r3, r2
 8005106:	f8c9 3000 	str.w	r3, [r9]
 800510a:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800510e:	4606      	mov	r6, r0
 8005110:	460c      	mov	r4, r1
 8005112:	b112      	cbz	r2, 800511a <_printf_common+0x2a>
 8005114:	3301      	adds	r3, #1
 8005116:	f8c9 3000 	str.w	r3, [r9]
 800511a:	6823      	ldr	r3, [r4, #0]
 800511c:	0699      	lsls	r1, r3, #26
 800511e:	bf42      	ittt	mi
 8005120:	f8d9 3000 	ldrmi.w	r3, [r9]
 8005124:	3302      	addmi	r3, #2
 8005126:	f8c9 3000 	strmi.w	r3, [r9]
 800512a:	6825      	ldr	r5, [r4, #0]
 800512c:	f015 0506 	ands.w	r5, r5, #6
 8005130:	d107      	bne.n	8005142 <_printf_common+0x52>
 8005132:	f104 0a19 	add.w	r10, r4, #25
 8005136:	68e3      	ldr	r3, [r4, #12]
 8005138:	f8d9 2000 	ldr.w	r2, [r9]
 800513c:	1a9b      	subs	r3, r3, r2
 800513e:	429d      	cmp	r5, r3
 8005140:	db29      	blt.n	8005196 <_printf_common+0xa6>
 8005142:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8005146:	6822      	ldr	r2, [r4, #0]
 8005148:	3300      	adds	r3, #0
 800514a:	bf18      	it	ne
 800514c:	2301      	movne	r3, #1
 800514e:	0692      	lsls	r2, r2, #26
 8005150:	d42e      	bmi.n	80051b0 <_printf_common+0xc0>
 8005152:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8005156:	4639      	mov	r1, r7
 8005158:	4630      	mov	r0, r6
 800515a:	47c0      	blx	r8
 800515c:	3001      	adds	r0, #1
 800515e:	d021      	beq.n	80051a4 <_printf_common+0xb4>
 8005160:	6823      	ldr	r3, [r4, #0]
 8005162:	68e5      	ldr	r5, [r4, #12]
 8005164:	f8d9 2000 	ldr.w	r2, [r9]
 8005168:	f003 0306 	and.w	r3, r3, #6
 800516c:	2b04      	cmp	r3, #4
 800516e:	bf08      	it	eq
 8005170:	1aad      	subeq	r5, r5, r2
 8005172:	68a3      	ldr	r3, [r4, #8]
 8005174:	6922      	ldr	r2, [r4, #16]
 8005176:	bf0c      	ite	eq
 8005178:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800517c:	2500      	movne	r5, #0
 800517e:	4293      	cmp	r3, r2
 8005180:	bfc4      	itt	gt
 8005182:	1a9b      	subgt	r3, r3, r2
 8005184:	18ed      	addgt	r5, r5, r3
 8005186:	f04f 0900 	mov.w	r9, #0
 800518a:	341a      	adds	r4, #26
 800518c:	454d      	cmp	r5, r9
 800518e:	d11b      	bne.n	80051c8 <_printf_common+0xd8>
 8005190:	2000      	movs	r0, #0
 8005192:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8005196:	2301      	movs	r3, #1
 8005198:	4652      	mov	r2, r10
 800519a:	4639      	mov	r1, r7
 800519c:	4630      	mov	r0, r6
 800519e:	47c0      	blx	r8
 80051a0:	3001      	adds	r0, #1
 80051a2:	d103      	bne.n	80051ac <_printf_common+0xbc>
 80051a4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80051a8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 80051ac:	3501      	adds	r5, #1
 80051ae:	e7c2      	b.n	8005136 <_printf_common+0x46>
 80051b0:	18e1      	adds	r1, r4, r3
 80051b2:	1c5a      	adds	r2, r3, #1
 80051b4:	2030      	movs	r0, #48	; 0x30
 80051b6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80051ba:	4422      	add	r2, r4
 80051bc:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80051c0:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80051c4:	3302      	adds	r3, #2
 80051c6:	e7c4      	b.n	8005152 <_printf_common+0x62>
 80051c8:	2301      	movs	r3, #1
 80051ca:	4622      	mov	r2, r4
 80051cc:	4639      	mov	r1, r7
 80051ce:	4630      	mov	r0, r6
 80051d0:	47c0      	blx	r8
 80051d2:	3001      	adds	r0, #1
 80051d4:	d0e6      	beq.n	80051a4 <_printf_common+0xb4>
 80051d6:	f109 0901 	add.w	r9, r9, #1
 80051da:	e7d7      	b.n	800518c <_printf_common+0x9c>

080051dc <_printf_i>:
 80051dc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80051e0:	4617      	mov	r7, r2
 80051e2:	7e0a      	ldrb	r2, [r1, #24]
 80051e4:	b085      	sub	sp, #20
 80051e6:	2a6e      	cmp	r2, #110	; 0x6e
 80051e8:	4698      	mov	r8, r3
 80051ea:	4606      	mov	r6, r0
 80051ec:	460c      	mov	r4, r1
 80051ee:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80051f0:	f101 0e43 	add.w	lr, r1, #67	; 0x43
 80051f4:	f000 80bc 	beq.w	8005370 <_printf_i+0x194>
 80051f8:	d81a      	bhi.n	8005230 <_printf_i+0x54>
 80051fa:	2a63      	cmp	r2, #99	; 0x63
 80051fc:	d02e      	beq.n	800525c <_printf_i+0x80>
 80051fe:	d80a      	bhi.n	8005216 <_printf_i+0x3a>
 8005200:	2a00      	cmp	r2, #0
 8005202:	f000 80c8 	beq.w	8005396 <_printf_i+0x1ba>
 8005206:	2a58      	cmp	r2, #88	; 0x58
 8005208:	f000 808a 	beq.w	8005320 <_printf_i+0x144>
 800520c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8005210:	f884 2042 	strb.w	r2, [r4, #66]	; 0x42
 8005214:	e02a      	b.n	800526c <_printf_i+0x90>
 8005216:	2a64      	cmp	r2, #100	; 0x64
 8005218:	d001      	beq.n	800521e <_printf_i+0x42>
 800521a:	2a69      	cmp	r2, #105	; 0x69
 800521c:	d1f6      	bne.n	800520c <_printf_i+0x30>
 800521e:	6821      	ldr	r1, [r4, #0]
 8005220:	681a      	ldr	r2, [r3, #0]
 8005222:	f011 0f80 	tst.w	r1, #128	; 0x80
 8005226:	d023      	beq.n	8005270 <_printf_i+0x94>
 8005228:	1d11      	adds	r1, r2, #4
 800522a:	6019      	str	r1, [r3, #0]
 800522c:	6813      	ldr	r3, [r2, #0]
 800522e:	e027      	b.n	8005280 <_printf_i+0xa4>
 8005230:	2a73      	cmp	r2, #115	; 0x73
 8005232:	f000 80b4 	beq.w	800539e <_printf_i+0x1c2>
 8005236:	d808      	bhi.n	800524a <_printf_i+0x6e>
 8005238:	2a6f      	cmp	r2, #111	; 0x6f
 800523a:	d02a      	beq.n	8005292 <_printf_i+0xb6>
 800523c:	2a70      	cmp	r2, #112	; 0x70
 800523e:	d1e5      	bne.n	800520c <_printf_i+0x30>
 8005240:	680a      	ldr	r2, [r1, #0]
 8005242:	f042 0220 	orr.w	r2, r2, #32
 8005246:	600a      	str	r2, [r1, #0]
 8005248:	e003      	b.n	8005252 <_printf_i+0x76>
 800524a:	2a75      	cmp	r2, #117	; 0x75
 800524c:	d021      	beq.n	8005292 <_printf_i+0xb6>
 800524e:	2a78      	cmp	r2, #120	; 0x78
 8005250:	d1dc      	bne.n	800520c <_printf_i+0x30>
 8005252:	2278      	movs	r2, #120	; 0x78
 8005254:	f884 2045 	strb.w	r2, [r4, #69]	; 0x45
 8005258:	496e      	ldr	r1, [pc, #440]	; (8005414 <_printf_i+0x238>)
 800525a:	e064      	b.n	8005326 <_printf_i+0x14a>
 800525c:	681a      	ldr	r2, [r3, #0]
 800525e:	f101 0542 	add.w	r5, r1, #66	; 0x42
 8005262:	1d11      	adds	r1, r2, #4
 8005264:	6019      	str	r1, [r3, #0]
 8005266:	6813      	ldr	r3, [r2, #0]
 8005268:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800526c:	2301      	movs	r3, #1
 800526e:	e0a3      	b.n	80053b8 <_printf_i+0x1dc>
 8005270:	f011 0f40 	tst.w	r1, #64	; 0x40
 8005274:	f102 0104 	add.w	r1, r2, #4
 8005278:	6019      	str	r1, [r3, #0]
 800527a:	d0d7      	beq.n	800522c <_printf_i+0x50>
 800527c:	f9b2 3000 	ldrsh.w	r3, [r2]
 8005280:	2b00      	cmp	r3, #0
 8005282:	da03      	bge.n	800528c <_printf_i+0xb0>
 8005284:	222d      	movs	r2, #45	; 0x2d
 8005286:	425b      	negs	r3, r3
 8005288:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 800528c:	4962      	ldr	r1, [pc, #392]	; (8005418 <_printf_i+0x23c>)
 800528e:	220a      	movs	r2, #10
 8005290:	e017      	b.n	80052c2 <_printf_i+0xe6>
 8005292:	6820      	ldr	r0, [r4, #0]
 8005294:	6819      	ldr	r1, [r3, #0]
 8005296:	f010 0f80 	tst.w	r0, #128	; 0x80
 800529a:	d003      	beq.n	80052a4 <_printf_i+0xc8>
 800529c:	1d08      	adds	r0, r1, #4
 800529e:	6018      	str	r0, [r3, #0]
 80052a0:	680b      	ldr	r3, [r1, #0]
 80052a2:	e006      	b.n	80052b2 <_printf_i+0xd6>
 80052a4:	f010 0f40 	tst.w	r0, #64	; 0x40
 80052a8:	f101 0004 	add.w	r0, r1, #4
 80052ac:	6018      	str	r0, [r3, #0]
 80052ae:	d0f7      	beq.n	80052a0 <_printf_i+0xc4>
 80052b0:	880b      	ldrh	r3, [r1, #0]
 80052b2:	4959      	ldr	r1, [pc, #356]	; (8005418 <_printf_i+0x23c>)
 80052b4:	2a6f      	cmp	r2, #111	; 0x6f
 80052b6:	bf14      	ite	ne
 80052b8:	220a      	movne	r2, #10
 80052ba:	2208      	moveq	r2, #8
 80052bc:	2000      	movs	r0, #0
 80052be:	f884 0043 	strb.w	r0, [r4, #67]	; 0x43
 80052c2:	6865      	ldr	r5, [r4, #4]
 80052c4:	60a5      	str	r5, [r4, #8]
 80052c6:	2d00      	cmp	r5, #0
 80052c8:	f2c0 809c 	blt.w	8005404 <_printf_i+0x228>
 80052cc:	6820      	ldr	r0, [r4, #0]
 80052ce:	f020 0004 	bic.w	r0, r0, #4
 80052d2:	6020      	str	r0, [r4, #0]
 80052d4:	2b00      	cmp	r3, #0
 80052d6:	d13f      	bne.n	8005358 <_printf_i+0x17c>
 80052d8:	2d00      	cmp	r5, #0
 80052da:	f040 8095 	bne.w	8005408 <_printf_i+0x22c>
 80052de:	4675      	mov	r5, lr
 80052e0:	2a08      	cmp	r2, #8
 80052e2:	d10b      	bne.n	80052fc <_printf_i+0x120>
 80052e4:	6823      	ldr	r3, [r4, #0]
 80052e6:	07da      	lsls	r2, r3, #31
 80052e8:	d508      	bpl.n	80052fc <_printf_i+0x120>
 80052ea:	6923      	ldr	r3, [r4, #16]
 80052ec:	6862      	ldr	r2, [r4, #4]
 80052ee:	429a      	cmp	r2, r3
 80052f0:	bfde      	ittt	le
 80052f2:	2330      	movle	r3, #48	; 0x30
 80052f4:	f805 3c01 	strble.w	r3, [r5, #-1]
 80052f8:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 80052fc:	ebae 0305 	sub.w	r3, lr, r5
 8005300:	6123      	str	r3, [r4, #16]
 8005302:	f8cd 8000 	str.w	r8, [sp]
 8005306:	463b      	mov	r3, r7
 8005308:	aa03      	add	r2, sp, #12
 800530a:	4621      	mov	r1, r4
 800530c:	4630      	mov	r0, r6
 800530e:	f7ff feef 	bl	80050f0 <_printf_common>
 8005312:	3001      	adds	r0, #1
 8005314:	d155      	bne.n	80053c2 <_printf_i+0x1e6>
 8005316:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800531a:	b005      	add	sp, #20
 800531c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8005320:	f881 2045 	strb.w	r2, [r1, #69]	; 0x45
 8005324:	493c      	ldr	r1, [pc, #240]	; (8005418 <_printf_i+0x23c>)
 8005326:	6822      	ldr	r2, [r4, #0]
 8005328:	6818      	ldr	r0, [r3, #0]
 800532a:	f012 0f80 	tst.w	r2, #128	; 0x80
 800532e:	f100 0504 	add.w	r5, r0, #4
 8005332:	601d      	str	r5, [r3, #0]
 8005334:	d001      	beq.n	800533a <_printf_i+0x15e>
 8005336:	6803      	ldr	r3, [r0, #0]
 8005338:	e002      	b.n	8005340 <_printf_i+0x164>
 800533a:	0655      	lsls	r5, r2, #25
 800533c:	d5fb      	bpl.n	8005336 <_printf_i+0x15a>
 800533e:	8803      	ldrh	r3, [r0, #0]
 8005340:	07d0      	lsls	r0, r2, #31
 8005342:	bf44      	itt	mi
 8005344:	f042 0220 	orrmi.w	r2, r2, #32
 8005348:	6022      	strmi	r2, [r4, #0]
 800534a:	b91b      	cbnz	r3, 8005354 <_printf_i+0x178>
 800534c:	6822      	ldr	r2, [r4, #0]
 800534e:	f022 0220 	bic.w	r2, r2, #32
 8005352:	6022      	str	r2, [r4, #0]
 8005354:	2210      	movs	r2, #16
 8005356:	e7b1      	b.n	80052bc <_printf_i+0xe0>
 8005358:	4675      	mov	r5, lr
 800535a:	fbb3 f0f2 	udiv	r0, r3, r2
 800535e:	fb02 3310 	mls	r3, r2, r0, r3
 8005362:	5ccb      	ldrb	r3, [r1, r3]
 8005364:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8005368:	4603      	mov	r3, r0
 800536a:	2800      	cmp	r0, #0
 800536c:	d1f5      	bne.n	800535a <_printf_i+0x17e>
 800536e:	e7b7      	b.n	80052e0 <_printf_i+0x104>
 8005370:	6808      	ldr	r0, [r1, #0]
 8005372:	681a      	ldr	r2, [r3, #0]
 8005374:	6949      	ldr	r1, [r1, #20]
 8005376:	f010 0f80 	tst.w	r0, #128	; 0x80
 800537a:	d004      	beq.n	8005386 <_printf_i+0x1aa>
 800537c:	1d10      	adds	r0, r2, #4
 800537e:	6018      	str	r0, [r3, #0]
 8005380:	6813      	ldr	r3, [r2, #0]
 8005382:	6019      	str	r1, [r3, #0]
 8005384:	e007      	b.n	8005396 <_printf_i+0x1ba>
 8005386:	f010 0f40 	tst.w	r0, #64	; 0x40
 800538a:	f102 0004 	add.w	r0, r2, #4
 800538e:	6018      	str	r0, [r3, #0]
 8005390:	6813      	ldr	r3, [r2, #0]
 8005392:	d0f6      	beq.n	8005382 <_printf_i+0x1a6>
 8005394:	8019      	strh	r1, [r3, #0]
 8005396:	2300      	movs	r3, #0
 8005398:	6123      	str	r3, [r4, #16]
 800539a:	4675      	mov	r5, lr
 800539c:	e7b1      	b.n	8005302 <_printf_i+0x126>
 800539e:	681a      	ldr	r2, [r3, #0]
 80053a0:	1d11      	adds	r1, r2, #4
 80053a2:	6019      	str	r1, [r3, #0]
 80053a4:	6815      	ldr	r5, [r2, #0]
 80053a6:	6862      	ldr	r2, [r4, #4]
 80053a8:	2100      	movs	r1, #0
 80053aa:	4628      	mov	r0, r5
 80053ac:	f7ff fd50 	bl	8004e50 <memchr>
 80053b0:	b108      	cbz	r0, 80053b6 <_printf_i+0x1da>
 80053b2:	1b40      	subs	r0, r0, r5
 80053b4:	6060      	str	r0, [r4, #4]
 80053b6:	6863      	ldr	r3, [r4, #4]
 80053b8:	6123      	str	r3, [r4, #16]
 80053ba:	2300      	movs	r3, #0
 80053bc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80053c0:	e79f      	b.n	8005302 <_printf_i+0x126>
 80053c2:	6923      	ldr	r3, [r4, #16]
 80053c4:	462a      	mov	r2, r5
 80053c6:	4639      	mov	r1, r7
 80053c8:	4630      	mov	r0, r6
 80053ca:	47c0      	blx	r8
 80053cc:	3001      	adds	r0, #1
 80053ce:	d0a2      	beq.n	8005316 <_printf_i+0x13a>
 80053d0:	6823      	ldr	r3, [r4, #0]
 80053d2:	079b      	lsls	r3, r3, #30
 80053d4:	d507      	bpl.n	80053e6 <_printf_i+0x20a>
 80053d6:	2500      	movs	r5, #0
 80053d8:	f104 0919 	add.w	r9, r4, #25
 80053dc:	68e3      	ldr	r3, [r4, #12]
 80053de:	9a03      	ldr	r2, [sp, #12]
 80053e0:	1a9b      	subs	r3, r3, r2
 80053e2:	429d      	cmp	r5, r3
 80053e4:	db05      	blt.n	80053f2 <_printf_i+0x216>
 80053e6:	68e0      	ldr	r0, [r4, #12]
 80053e8:	9b03      	ldr	r3, [sp, #12]
 80053ea:	4298      	cmp	r0, r3
 80053ec:	bfb8      	it	lt
 80053ee:	4618      	movlt	r0, r3
 80053f0:	e793      	b.n	800531a <_printf_i+0x13e>
 80053f2:	2301      	movs	r3, #1
 80053f4:	464a      	mov	r2, r9
 80053f6:	4639      	mov	r1, r7
 80053f8:	4630      	mov	r0, r6
 80053fa:	47c0      	blx	r8
 80053fc:	3001      	adds	r0, #1
 80053fe:	d08a      	beq.n	8005316 <_printf_i+0x13a>
 8005400:	3501      	adds	r5, #1
 8005402:	e7eb      	b.n	80053dc <_printf_i+0x200>
 8005404:	2b00      	cmp	r3, #0
 8005406:	d1a7      	bne.n	8005358 <_printf_i+0x17c>
 8005408:	780b      	ldrb	r3, [r1, #0]
 800540a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800540e:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8005412:	e765      	b.n	80052e0 <_printf_i+0x104>
 8005414:	08005e55 	.word	0x08005e55
 8005418:	08005e44 	.word	0x08005e44

0800541c <realloc>:
 800541c:	4b02      	ldr	r3, [pc, #8]	; (8005428 <realloc+0xc>)
 800541e:	460a      	mov	r2, r1
 8005420:	4601      	mov	r1, r0
 8005422:	6818      	ldr	r0, [r3, #0]
 8005424:	f7fe bf10 	b.w	8004248 <__wrap__realloc_r>
 8005428:	200001b8 	.word	0x200001b8

0800542c <_sbrk_r>:
 800542c:	b538      	push	{r3, r4, r5, lr}
 800542e:	4c06      	ldr	r4, [pc, #24]	; (8005448 <_sbrk_r+0x1c>)
 8005430:	2300      	movs	r3, #0
 8005432:	4605      	mov	r5, r0
 8005434:	4608      	mov	r0, r1
 8005436:	6023      	str	r3, [r4, #0]
 8005438:	f7fe fff0 	bl	800441c <_sbrk>
 800543c:	1c43      	adds	r3, r0, #1
 800543e:	d102      	bne.n	8005446 <_sbrk_r+0x1a>
 8005440:	6823      	ldr	r3, [r4, #0]
 8005442:	b103      	cbz	r3, 8005446 <_sbrk_r+0x1a>
 8005444:	602b      	str	r3, [r5, #0]
 8005446:	bd38      	pop	{r3, r4, r5, pc}
 8005448:	20002814 	.word	0x20002814

0800544c <__sread>:
 800544c:	b510      	push	{r4, lr}
 800544e:	460c      	mov	r4, r1
 8005450:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005454:	f000 f9f4 	bl	8005840 <_read_r>
 8005458:	2800      	cmp	r0, #0
 800545a:	bfab      	itete	ge
 800545c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800545e:	89a3      	ldrhlt	r3, [r4, #12]
 8005460:	181b      	addge	r3, r3, r0
 8005462:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8005466:	bfac      	ite	ge
 8005468:	6563      	strge	r3, [r4, #84]	; 0x54
 800546a:	81a3      	strhlt	r3, [r4, #12]
 800546c:	bd10      	pop	{r4, pc}

0800546e <__swrite>:
 800546e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005472:	461f      	mov	r7, r3
 8005474:	898b      	ldrh	r3, [r1, #12]
 8005476:	05db      	lsls	r3, r3, #23
 8005478:	4605      	mov	r5, r0
 800547a:	460c      	mov	r4, r1
 800547c:	4616      	mov	r6, r2
 800547e:	d505      	bpl.n	800548c <__swrite+0x1e>
 8005480:	2302      	movs	r3, #2
 8005482:	2200      	movs	r2, #0
 8005484:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005488:	f000 f870 	bl	800556c <_lseek_r>
 800548c:	89a3      	ldrh	r3, [r4, #12]
 800548e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8005492:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8005496:	81a3      	strh	r3, [r4, #12]
 8005498:	4632      	mov	r2, r6
 800549a:	463b      	mov	r3, r7
 800549c:	4628      	mov	r0, r5
 800549e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80054a2:	f000 b841 	b.w	8005528 <_write_r>

080054a6 <__sseek>:
 80054a6:	b510      	push	{r4, lr}
 80054a8:	460c      	mov	r4, r1
 80054aa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80054ae:	f000 f85d 	bl	800556c <_lseek_r>
 80054b2:	1c43      	adds	r3, r0, #1
 80054b4:	89a3      	ldrh	r3, [r4, #12]
 80054b6:	bf15      	itete	ne
 80054b8:	6560      	strne	r0, [r4, #84]	; 0x54
 80054ba:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80054be:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80054c2:	81a3      	strheq	r3, [r4, #12]
 80054c4:	bf18      	it	ne
 80054c6:	81a3      	strhne	r3, [r4, #12]
 80054c8:	bd10      	pop	{r4, pc}

080054ca <__sclose>:
 80054ca:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80054ce:	f000 b83d 	b.w	800554c <_close_r>

080054d2 <strlen>:
 80054d2:	4603      	mov	r3, r0
 80054d4:	f813 2b01 	ldrb.w	r2, [r3], #1
 80054d8:	2a00      	cmp	r2, #0
 80054da:	d1fb      	bne.n	80054d4 <strlen+0x2>
 80054dc:	1a18      	subs	r0, r3, r0
 80054de:	3801      	subs	r0, #1
 80054e0:	4770      	bx	lr

080054e2 <_vsiprintf_r>:
 80054e2:	b510      	push	{r4, lr}
 80054e4:	b09a      	sub	sp, #104	; 0x68
 80054e6:	f44f 7402 	mov.w	r4, #520	; 0x208
 80054ea:	9100      	str	r1, [sp, #0]
 80054ec:	9104      	str	r1, [sp, #16]
 80054ee:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 80054f2:	9102      	str	r1, [sp, #8]
 80054f4:	9105      	str	r1, [sp, #20]
 80054f6:	f64f 71ff 	movw	r1, #65535	; 0xffff
 80054fa:	f8ad 100e 	strh.w	r1, [sp, #14]
 80054fe:	4669      	mov	r1, sp
 8005500:	f8ad 400c 	strh.w	r4, [sp, #12]
 8005504:	f000 f8a8 	bl	8005658 <_svfiprintf_r>
 8005508:	9b00      	ldr	r3, [sp, #0]
 800550a:	2200      	movs	r2, #0
 800550c:	701a      	strb	r2, [r3, #0]
 800550e:	b01a      	add	sp, #104	; 0x68
 8005510:	bd10      	pop	{r4, pc}
	...

08005514 <vsiprintf>:
 8005514:	4613      	mov	r3, r2
 8005516:	460a      	mov	r2, r1
 8005518:	4601      	mov	r1, r0
 800551a:	4802      	ldr	r0, [pc, #8]	; (8005524 <vsiprintf+0x10>)
 800551c:	6800      	ldr	r0, [r0, #0]
 800551e:	f7ff bfe0 	b.w	80054e2 <_vsiprintf_r>
 8005522:	bf00      	nop
 8005524:	200001b8 	.word	0x200001b8

08005528 <_write_r>:
 8005528:	b538      	push	{r3, r4, r5, lr}
 800552a:	4c07      	ldr	r4, [pc, #28]	; (8005548 <_write_r+0x20>)
 800552c:	4605      	mov	r5, r0
 800552e:	4608      	mov	r0, r1
 8005530:	4611      	mov	r1, r2
 8005532:	2200      	movs	r2, #0
 8005534:	6022      	str	r2, [r4, #0]
 8005536:	461a      	mov	r2, r3
 8005538:	f7fe fede 	bl	80042f8 <_write>
 800553c:	1c43      	adds	r3, r0, #1
 800553e:	d102      	bne.n	8005546 <_write_r+0x1e>
 8005540:	6823      	ldr	r3, [r4, #0]
 8005542:	b103      	cbz	r3, 8005546 <_write_r+0x1e>
 8005544:	602b      	str	r3, [r5, #0]
 8005546:	bd38      	pop	{r3, r4, r5, pc}
 8005548:	20002814 	.word	0x20002814

0800554c <_close_r>:
 800554c:	b538      	push	{r3, r4, r5, lr}
 800554e:	4c06      	ldr	r4, [pc, #24]	; (8005568 <_close_r+0x1c>)
 8005550:	2300      	movs	r3, #0
 8005552:	4605      	mov	r5, r0
 8005554:	4608      	mov	r0, r1
 8005556:	6023      	str	r3, [r4, #0]
 8005558:	f7fe feae 	bl	80042b8 <_close>
 800555c:	1c43      	adds	r3, r0, #1
 800555e:	d102      	bne.n	8005566 <_close_r+0x1a>
 8005560:	6823      	ldr	r3, [r4, #0]
 8005562:	b103      	cbz	r3, 8005566 <_close_r+0x1a>
 8005564:	602b      	str	r3, [r5, #0]
 8005566:	bd38      	pop	{r3, r4, r5, pc}
 8005568:	20002814 	.word	0x20002814

0800556c <_lseek_r>:
 800556c:	b538      	push	{r3, r4, r5, lr}
 800556e:	4c07      	ldr	r4, [pc, #28]	; (800558c <_lseek_r+0x20>)
 8005570:	4605      	mov	r5, r0
 8005572:	4608      	mov	r0, r1
 8005574:	4611      	mov	r1, r2
 8005576:	2200      	movs	r2, #0
 8005578:	6022      	str	r2, [r4, #0]
 800557a:	461a      	mov	r2, r3
 800557c:	f7fe ff22 	bl	80043c4 <_lseek>
 8005580:	1c43      	adds	r3, r0, #1
 8005582:	d102      	bne.n	800558a <_lseek_r+0x1e>
 8005584:	6823      	ldr	r3, [r4, #0]
 8005586:	b103      	cbz	r3, 800558a <_lseek_r+0x1e>
 8005588:	602b      	str	r3, [r5, #0]
 800558a:	bd38      	pop	{r3, r4, r5, pc}
 800558c:	20002814 	.word	0x20002814

08005590 <_malloc_usable_size_r>:
 8005590:	f851 0c04 	ldr.w	r0, [r1, #-4]
 8005594:	2800      	cmp	r0, #0
 8005596:	f1a0 0004 	sub.w	r0, r0, #4
 800559a:	bfbc      	itt	lt
 800559c:	580b      	ldrlt	r3, [r1, r0]
 800559e:	18c0      	addlt	r0, r0, r3
 80055a0:	4770      	bx	lr

080055a2 <__ssputs_r>:
 80055a2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, lr}
 80055a6:	688e      	ldr	r6, [r1, #8]
 80055a8:	429e      	cmp	r6, r3
 80055aa:	4682      	mov	r10, r0
 80055ac:	460c      	mov	r4, r1
 80055ae:	4691      	mov	r9, r2
 80055b0:	4698      	mov	r8, r3
 80055b2:	d835      	bhi.n	8005620 <__ssputs_r+0x7e>
 80055b4:	898a      	ldrh	r2, [r1, #12]
 80055b6:	f412 6f90 	tst.w	r2, #1152	; 0x480
 80055ba:	d031      	beq.n	8005620 <__ssputs_r+0x7e>
 80055bc:	6825      	ldr	r5, [r4, #0]
 80055be:	6909      	ldr	r1, [r1, #16]
 80055c0:	1a6f      	subs	r7, r5, r1
 80055c2:	6965      	ldr	r5, [r4, #20]
 80055c4:	2302      	movs	r3, #2
 80055c6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80055ca:	fb95 f5f3 	sdiv	r5, r5, r3
 80055ce:	f108 0301 	add.w	r3, r8, #1
 80055d2:	443b      	add	r3, r7
 80055d4:	429d      	cmp	r5, r3
 80055d6:	bf38      	it	cc
 80055d8:	461d      	movcc	r5, r3
 80055da:	0553      	lsls	r3, r2, #21
 80055dc:	d531      	bpl.n	8005642 <__ssputs_r+0xa0>
 80055de:	4629      	mov	r1, r5
 80055e0:	f7fe fe30 	bl	8004244 <__wrap__malloc_r>
 80055e4:	4606      	mov	r6, r0
 80055e6:	b950      	cbnz	r0, 80055fe <__ssputs_r+0x5c>
 80055e8:	230c      	movs	r3, #12
 80055ea:	f8ca 3000 	str.w	r3, [r10]
 80055ee:	89a3      	ldrh	r3, [r4, #12]
 80055f0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80055f4:	81a3      	strh	r3, [r4, #12]
 80055f6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80055fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 80055fe:	463a      	mov	r2, r7
 8005600:	6921      	ldr	r1, [r4, #16]
 8005602:	f7ff fc75 	bl	8004ef0 <memcpy>
 8005606:	89a3      	ldrh	r3, [r4, #12]
 8005608:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800560c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8005610:	81a3      	strh	r3, [r4, #12]
 8005612:	6126      	str	r6, [r4, #16]
 8005614:	6165      	str	r5, [r4, #20]
 8005616:	443e      	add	r6, r7
 8005618:	1bed      	subs	r5, r5, r7
 800561a:	6026      	str	r6, [r4, #0]
 800561c:	60a5      	str	r5, [r4, #8]
 800561e:	4646      	mov	r6, r8
 8005620:	4546      	cmp	r6, r8
 8005622:	bf28      	it	cs
 8005624:	4646      	movcs	r6, r8
 8005626:	4632      	mov	r2, r6
 8005628:	4649      	mov	r1, r9
 800562a:	6820      	ldr	r0, [r4, #0]
 800562c:	f7ff fc6b 	bl	8004f06 <memmove>
 8005630:	68a3      	ldr	r3, [r4, #8]
 8005632:	1b9b      	subs	r3, r3, r6
 8005634:	60a3      	str	r3, [r4, #8]
 8005636:	6823      	ldr	r3, [r4, #0]
 8005638:	441e      	add	r6, r3
 800563a:	6026      	str	r6, [r4, #0]
 800563c:	2000      	movs	r0, #0
 800563e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, pc}
 8005642:	462a      	mov	r2, r5
 8005644:	f7fe fe00 	bl	8004248 <__wrap__realloc_r>
 8005648:	4606      	mov	r6, r0
 800564a:	2800      	cmp	r0, #0
 800564c:	d1e1      	bne.n	8005612 <__ssputs_r+0x70>
 800564e:	6921      	ldr	r1, [r4, #16]
 8005650:	4650      	mov	r0, r10
 8005652:	f7fe fdfb 	bl	800424c <__wrap__free_r>
 8005656:	e7c7      	b.n	80055e8 <__ssputs_r+0x46>

08005658 <_svfiprintf_r>:
 8005658:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
 800565c:	b09d      	sub	sp, #116	; 0x74
 800565e:	4680      	mov	r8, r0
 8005660:	9303      	str	r3, [sp, #12]
 8005662:	898b      	ldrh	r3, [r1, #12]
 8005664:	061c      	lsls	r4, r3, #24
 8005666:	460d      	mov	r5, r1
 8005668:	4616      	mov	r6, r2
 800566a:	d50f      	bpl.n	800568c <_svfiprintf_r+0x34>
 800566c:	690b      	ldr	r3, [r1, #16]
 800566e:	b96b      	cbnz	r3, 800568c <_svfiprintf_r+0x34>
 8005670:	2140      	movs	r1, #64	; 0x40
 8005672:	f7fe fde7 	bl	8004244 <__wrap__malloc_r>
 8005676:	6028      	str	r0, [r5, #0]
 8005678:	6128      	str	r0, [r5, #16]
 800567a:	b928      	cbnz	r0, 8005688 <_svfiprintf_r+0x30>
 800567c:	230c      	movs	r3, #12
 800567e:	f8c8 3000 	str.w	r3, [r8]
 8005682:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8005686:	e0c5      	b.n	8005814 <_svfiprintf_r+0x1bc>
 8005688:	2340      	movs	r3, #64	; 0x40
 800568a:	616b      	str	r3, [r5, #20]
 800568c:	2300      	movs	r3, #0
 800568e:	9309      	str	r3, [sp, #36]	; 0x24
 8005690:	2320      	movs	r3, #32
 8005692:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8005696:	2330      	movs	r3, #48	; 0x30
 8005698:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800569c:	f04f 0b01 	mov.w	r11, #1
 80056a0:	4637      	mov	r7, r6
 80056a2:	463c      	mov	r4, r7
 80056a4:	f814 3b01 	ldrb.w	r3, [r4], #1
 80056a8:	2b00      	cmp	r3, #0
 80056aa:	d13c      	bne.n	8005726 <_svfiprintf_r+0xce>
 80056ac:	ebb7 0a06 	subs.w	r10, r7, r6
 80056b0:	d00b      	beq.n	80056ca <_svfiprintf_r+0x72>
 80056b2:	4653      	mov	r3, r10
 80056b4:	4632      	mov	r2, r6
 80056b6:	4629      	mov	r1, r5
 80056b8:	4640      	mov	r0, r8
 80056ba:	f7ff ff72 	bl	80055a2 <__ssputs_r>
 80056be:	3001      	adds	r0, #1
 80056c0:	f000 80a3 	beq.w	800580a <_svfiprintf_r+0x1b2>
 80056c4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80056c6:	4453      	add	r3, r10
 80056c8:	9309      	str	r3, [sp, #36]	; 0x24
 80056ca:	783b      	ldrb	r3, [r7, #0]
 80056cc:	2b00      	cmp	r3, #0
 80056ce:	f000 809c 	beq.w	800580a <_svfiprintf_r+0x1b2>
 80056d2:	2300      	movs	r3, #0
 80056d4:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80056d8:	9304      	str	r3, [sp, #16]
 80056da:	9307      	str	r3, [sp, #28]
 80056dc:	9205      	str	r2, [sp, #20]
 80056de:	9306      	str	r3, [sp, #24]
 80056e0:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80056e4:	931a      	str	r3, [sp, #104]	; 0x68
 80056e6:	2205      	movs	r2, #5
 80056e8:	7821      	ldrb	r1, [r4, #0]
 80056ea:	4850      	ldr	r0, [pc, #320]	; (800582c <_svfiprintf_r+0x1d4>)
 80056ec:	f7ff fbb0 	bl	8004e50 <memchr>
 80056f0:	1c67      	adds	r7, r4, #1
 80056f2:	9b04      	ldr	r3, [sp, #16]
 80056f4:	b9d8      	cbnz	r0, 800572e <_svfiprintf_r+0xd6>
 80056f6:	06d9      	lsls	r1, r3, #27
 80056f8:	bf44      	itt	mi
 80056fa:	2220      	movmi	r2, #32
 80056fc:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8005700:	071a      	lsls	r2, r3, #28
 8005702:	bf44      	itt	mi
 8005704:	222b      	movmi	r2, #43	; 0x2b
 8005706:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 800570a:	7822      	ldrb	r2, [r4, #0]
 800570c:	2a2a      	cmp	r2, #42	; 0x2a
 800570e:	d016      	beq.n	800573e <_svfiprintf_r+0xe6>
 8005710:	9a07      	ldr	r2, [sp, #28]
 8005712:	2100      	movs	r1, #0
 8005714:	200a      	movs	r0, #10
 8005716:	4627      	mov	r7, r4
 8005718:	3401      	adds	r4, #1
 800571a:	783b      	ldrb	r3, [r7, #0]
 800571c:	3b30      	subs	r3, #48	; 0x30
 800571e:	2b09      	cmp	r3, #9
 8005720:	d951      	bls.n	80057c6 <_svfiprintf_r+0x16e>
 8005722:	b1c9      	cbz	r1, 8005758 <_svfiprintf_r+0x100>
 8005724:	e011      	b.n	800574a <_svfiprintf_r+0xf2>
 8005726:	2b25      	cmp	r3, #37	; 0x25
 8005728:	d0c0      	beq.n	80056ac <_svfiprintf_r+0x54>
 800572a:	4627      	mov	r7, r4
 800572c:	e7b9      	b.n	80056a2 <_svfiprintf_r+0x4a>
 800572e:	4a3f      	ldr	r2, [pc, #252]	; (800582c <_svfiprintf_r+0x1d4>)
 8005730:	1a80      	subs	r0, r0, r2
 8005732:	fa0b f000 	lsl.w	r0, r11, r0
 8005736:	4318      	orrs	r0, r3
 8005738:	9004      	str	r0, [sp, #16]
 800573a:	463c      	mov	r4, r7
 800573c:	e7d3      	b.n	80056e6 <_svfiprintf_r+0x8e>
 800573e:	9a03      	ldr	r2, [sp, #12]
 8005740:	1d11      	adds	r1, r2, #4
 8005742:	6812      	ldr	r2, [r2, #0]
 8005744:	9103      	str	r1, [sp, #12]
 8005746:	2a00      	cmp	r2, #0
 8005748:	db01      	blt.n	800574e <_svfiprintf_r+0xf6>
 800574a:	9207      	str	r2, [sp, #28]
 800574c:	e004      	b.n	8005758 <_svfiprintf_r+0x100>
 800574e:	4252      	negs	r2, r2
 8005750:	f043 0302 	orr.w	r3, r3, #2
 8005754:	9207      	str	r2, [sp, #28]
 8005756:	9304      	str	r3, [sp, #16]
 8005758:	783b      	ldrb	r3, [r7, #0]
 800575a:	2b2e      	cmp	r3, #46	; 0x2e
 800575c:	d10e      	bne.n	800577c <_svfiprintf_r+0x124>
 800575e:	787b      	ldrb	r3, [r7, #1]
 8005760:	2b2a      	cmp	r3, #42	; 0x2a
 8005762:	f107 0101 	add.w	r1, r7, #1
 8005766:	d132      	bne.n	80057ce <_svfiprintf_r+0x176>
 8005768:	9b03      	ldr	r3, [sp, #12]
 800576a:	1d1a      	adds	r2, r3, #4
 800576c:	681b      	ldr	r3, [r3, #0]
 800576e:	9203      	str	r2, [sp, #12]
 8005770:	2b00      	cmp	r3, #0
 8005772:	bfb8      	it	lt
 8005774:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8005778:	3702      	adds	r7, #2
 800577a:	9305      	str	r3, [sp, #20]
 800577c:	4c2c      	ldr	r4, [pc, #176]	; (8005830 <_svfiprintf_r+0x1d8>)
 800577e:	7839      	ldrb	r1, [r7, #0]
 8005780:	2203      	movs	r2, #3
 8005782:	4620      	mov	r0, r4
 8005784:	f7ff fb64 	bl	8004e50 <memchr>
 8005788:	b138      	cbz	r0, 800579a <_svfiprintf_r+0x142>
 800578a:	2340      	movs	r3, #64	; 0x40
 800578c:	1b00      	subs	r0, r0, r4
 800578e:	fa03 f000 	lsl.w	r0, r3, r0
 8005792:	9b04      	ldr	r3, [sp, #16]
 8005794:	4303      	orrs	r3, r0
 8005796:	9304      	str	r3, [sp, #16]
 8005798:	3701      	adds	r7, #1
 800579a:	7839      	ldrb	r1, [r7, #0]
 800579c:	4825      	ldr	r0, [pc, #148]	; (8005834 <_svfiprintf_r+0x1dc>)
 800579e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80057a2:	2206      	movs	r2, #6
 80057a4:	1c7e      	adds	r6, r7, #1
 80057a6:	f7ff fb53 	bl	8004e50 <memchr>
 80057aa:	2800      	cmp	r0, #0
 80057ac:	d035      	beq.n	800581a <_svfiprintf_r+0x1c2>
 80057ae:	4b22      	ldr	r3, [pc, #136]	; (8005838 <_svfiprintf_r+0x1e0>)
 80057b0:	b9fb      	cbnz	r3, 80057f2 <_svfiprintf_r+0x19a>
 80057b2:	9b03      	ldr	r3, [sp, #12]
 80057b4:	3307      	adds	r3, #7
 80057b6:	f023 0307 	bic.w	r3, r3, #7
 80057ba:	3308      	adds	r3, #8
 80057bc:	9303      	str	r3, [sp, #12]
 80057be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80057c0:	444b      	add	r3, r9
 80057c2:	9309      	str	r3, [sp, #36]	; 0x24
 80057c4:	e76c      	b.n	80056a0 <_svfiprintf_r+0x48>
 80057c6:	fb00 3202 	mla	r2, r0, r2, r3
 80057ca:	2101      	movs	r1, #1
 80057cc:	e7a3      	b.n	8005716 <_svfiprintf_r+0xbe>
 80057ce:	2300      	movs	r3, #0
 80057d0:	9305      	str	r3, [sp, #20]
 80057d2:	4618      	mov	r0, r3
 80057d4:	240a      	movs	r4, #10
 80057d6:	460f      	mov	r7, r1
 80057d8:	3101      	adds	r1, #1
 80057da:	783a      	ldrb	r2, [r7, #0]
 80057dc:	3a30      	subs	r2, #48	; 0x30
 80057de:	2a09      	cmp	r2, #9
 80057e0:	d903      	bls.n	80057ea <_svfiprintf_r+0x192>
 80057e2:	2b00      	cmp	r3, #0
 80057e4:	d0ca      	beq.n	800577c <_svfiprintf_r+0x124>
 80057e6:	9005      	str	r0, [sp, #20]
 80057e8:	e7c8      	b.n	800577c <_svfiprintf_r+0x124>
 80057ea:	fb04 2000 	mla	r0, r4, r0, r2
 80057ee:	2301      	movs	r3, #1
 80057f0:	e7f1      	b.n	80057d6 <_svfiprintf_r+0x17e>
 80057f2:	ab03      	add	r3, sp, #12
 80057f4:	9300      	str	r3, [sp, #0]
 80057f6:	462a      	mov	r2, r5
 80057f8:	4b10      	ldr	r3, [pc, #64]	; (800583c <_svfiprintf_r+0x1e4>)
 80057fa:	a904      	add	r1, sp, #16
 80057fc:	4640      	mov	r0, r8
 80057fe:	f3af 8000 	nop.w
 8005802:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
 8005806:	4681      	mov	r9, r0
 8005808:	d1d9      	bne.n	80057be <_svfiprintf_r+0x166>
 800580a:	89ab      	ldrh	r3, [r5, #12]
 800580c:	065b      	lsls	r3, r3, #25
 800580e:	f53f af38 	bmi.w	8005682 <_svfiprintf_r+0x2a>
 8005812:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005814:	b01d      	add	sp, #116	; 0x74
 8005816:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
 800581a:	ab03      	add	r3, sp, #12
 800581c:	9300      	str	r3, [sp, #0]
 800581e:	462a      	mov	r2, r5
 8005820:	4b06      	ldr	r3, [pc, #24]	; (800583c <_svfiprintf_r+0x1e4>)
 8005822:	a904      	add	r1, sp, #16
 8005824:	4640      	mov	r0, r8
 8005826:	f7ff fcd9 	bl	80051dc <_printf_i>
 800582a:	e7ea      	b.n	8005802 <_svfiprintf_r+0x1aa>
 800582c:	08005e66 	.word	0x08005e66
 8005830:	08005e6c 	.word	0x08005e6c
 8005834:	08005e70 	.word	0x08005e70
 8005838:	00000000 	.word	0x00000000
 800583c:	080055a3 	.word	0x080055a3

08005840 <_read_r>:
 8005840:	b538      	push	{r3, r4, r5, lr}
 8005842:	4c07      	ldr	r4, [pc, #28]	; (8005860 <_read_r+0x20>)
 8005844:	4605      	mov	r5, r0
 8005846:	4608      	mov	r0, r1
 8005848:	4611      	mov	r1, r2
 800584a:	2200      	movs	r2, #0
 800584c:	6022      	str	r2, [r4, #0]
 800584e:	461a      	mov	r2, r3
 8005850:	f7fe fd88 	bl	8004364 <_read>
 8005854:	1c43      	adds	r3, r0, #1
 8005856:	d102      	bne.n	800585e <_read_r+0x1e>
 8005858:	6823      	ldr	r3, [r4, #0]
 800585a:	b103      	cbz	r3, 800585e <_read_r+0x1e>
 800585c:	602b      	str	r3, [r5, #0]
 800585e:	bd38      	pop	{r3, r4, r5, pc}
 8005860:	20002814 	.word	0x20002814

08005864 <_init>:
 8005864:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005866:	bf00      	nop
 8005868:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800586a:	bc08      	pop	{r3}
 800586c:	469e      	mov	lr, r3
 800586e:	4770      	bx	lr

08005870 <_fini>:
 8005870:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005872:	bf00      	nop
 8005874:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8005876:	bc08      	pop	{r3}
 8005878:	469e      	mov	lr, r3
 800587a:	4770      	bx	lr

0800587c <vtable for std_msgs::Time>:
	...
 8005884:	0201 0800 0229 0800 0265 0800 026d 0800     ....)...e...m...

08005894 <vtable for rosserial_msgs::TopicInfo>:
	...
 800589c:	0533 0800 060d 0800 0275 0800 027d 0800     3.......u...}...

080058ac <vtable for rosserial_msgs::Log>:
	...
 80058b4:	0507 0800 05d7 0800 0285 0800 028d 0800     ................

080058c4 <vtable for rosserial_msgs::RequestParamResponse>:
	...
 80058cc:	0425 0800 06c3 0800 0295 0800 029d 0800     %...............

080058dc <vtable for control::HardwareCommand>:
	...
 80058e4:	02a5 0800 02e9 0800 02fd 0800 0305 0800     ................

080058f4 <vtable for control::EncoderData>:
	...
 80058fc:	030d 0800 0381 0800 03a1 0800 03a9 0800     ................

0800590c <vtable for ros::NodeHandle_<MbedHardware, 25, 25, 512, 512>>:
	...
 8005914:	0ae9 0800 0ba9 0800 03f5 0800               ............

08005920 <vtable for ros::Subscriber<control::HardwareCommand, void>>:
	...
 8005928:	03c9 0800 03e1 0800 03e5 0800 03ed 0800     ................
 8005938:	6f63 746e 6f72 2f6c 6f63 6d6d 6e61 2f64     control/command/
 8005948:	6168 6472 6177 6572 6500 636e 635f 6168     hardware.enc_cha
 8005958:	7474 7265 3900 3066 3965 6238 6164 3536     tter.9f0e98bda65
 8005968:	3839 3931 3638 6464 3566 6133 6166 6137     981986ddf53afa7a
 8005978:	3034 3465 0039 3131 6261 3764 3133 3263     40e49.11abd731c2
 8005988:	3935 3333 3632 6331 3664 3831 6233 3164     5933261cd6183bd1
 8005998:	6432 3236 3539 7200 736f 6573 6972 6c61     2d6295.rosserial
 80059a8:	6d5f 6773 2f73 6f4c 0067 6130 3564 6631     _msgs/Log.0ad51f
 80059b8:	3838 6366 3434 3938 6632 6338 3031 3836     88fc44892f8c1068
 80059c8:	3034 3737 3436 3036 3530 7200 736f 6573     4077646005.rosse
 80059d8:	6972 6c61 6d5f 6773 2f73 6f54 6970 4963     rial_msgs/TopicI
 80059e8:	666e 006f                                   nfo.

080059ec <rosserial_msgs::REQUESTPARAM>:
 80059ec:	6f72 7373 7265 6169 5f6c 736d 7367 522f     rosserial_msgs/R
 80059fc:	7165 6575 7473 6150 6172 006d 654d 7373     equestParam.Mess
 8005a0c:	6761 2065 7266 6d6f 6420 7665 6369 2065     age from device 
 8005a1c:	7264 706f 6570 3a64 6d20 7365 6173 6567     dropped: message
 8005a2c:	6c20 7261 6567 2072 6874 6e61 6220 6675      larger than buf
 8005a3c:	6566 2e72 3200 6533 3161 6561 3363 3362     fer..23ea1aec3b3
 8005a4c:	6561 3564 6164 3439 3338 6235 6238 6564     aed5da94835b8bde
 8005a5c:	3431 3836 0063 6f63 746e 6f72 2f6c 6e45     1468c.control/En
 8005a6c:	6f63 6564 4472 7461 0061 3837 3037 3962     coderData.7870b9
 8005a7c:	3935 3362 6433 3835 6466 3766 6132 3961     59b33d58fdf72aa9
 8005a8c:	6132 6163 6334 3538 3032 6300 6e6f 7274     2aca4c8520.contr
 8005a9c:	6c6f 482f 7261 7764 7261 4365 6d6f 616d     ol/HardwareComma
 8005aac:	646e 6300 3764 3631 6336 3437 3563 3235     nd.cd7166c74c552
 8005abc:	3363 3131 6266 6363 6632 3565 3761 6362     c311fbcc2fe5a7bc
 8005acc:	3832 0039 7473 5f64 736d 7367 542f 6d69     289.std_msgs/Tim
 8005adc:	0065 0000                                   e...

08005ae0 <void mbed::Callback<void ()>::generate<mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> >(mbed::Callback<void ()>::method_context<BufferedSerial, void (BufferedSerial::*)()> const&)::ops>:
 8005ae0:	100b 0800 0ffd 0800 1009 0800 6f72 5f73     ............ros_
 8005af0:	696c 2f62 7542 6666 7265 6465 6553 6972     lib/BufferedSeri
 8005b00:	6c61 422f 6675 6566 6572 5364 7265 6169     al/BufferedSeria
 8005b10:	2e6c 7063 0070 7325 2520 2064 7562 6666     l.cpp.%s %d buff
 8005b20:	7265 6f20 6576 7772 6972 6574 2820 616d     er overwrite (ma
 8005b30:	5f78 7562 5f66 6973 657a 203a 6425 6520     x_buf_size: %d e
 8005b40:	6378 6565 6564 3a64 2520 2964 0d21 000a     xceeded: %d)!...

08005b50 <vtable for BufferedSerial>:
	...
 8005b58:	3ffb 0800 3ffb 0800 10f5 0800 114d 0800     .?...?......M...
 8005b68:	0fbd 0800 0fcd 0800 0fd1 0800 126d 0800     ............m...
 8005b78:	1285 0800 1301 0800 12c3 0800               ............

08005b84 <us_data>:
 8005b84:	5b8c 0800 08f4 2000                         .[..... 

08005b8c <us_interface>:
 8005b8c:	2d91 0800 2db5 0800 2ded 0800 2e05 0800     .-...-...-......
 8005b9c:	2dd1 0800 6970 6d6e 7061 6d20 7369 6d2d     .-..pinmap mis-m
 8005bac:	7461 6863 7000 6e69 616d 2070 6f6e 2074     atch.pinmap not 
 8005bbc:	6f66 6e75 2064 6f66 2072 6570 6972 6870     found for periph
 8005bcc:	7265 6c61 6300 756f 646c 6e20 746f 7020     eral.could not p
 8005bdc:	6e69 756f 0074 0000                         inout...

08005be4 <mp_stk_size>:
 8005be4:	0210 0000                                   ....

08005be8 <mp_tcb_size>:
 8005be8:	03cc                                        ..

08005bea <mp_tmr_size>:
	...

08005bec <os_clockrate>:
 8005bec:	03e8 0000 5452 2058 7265 6f72 2072 6f63     ....RTX error co
 8005bfc:	6564 203a 7830 3025 5838 202c 6174 6b73     de: 0x%08X, task
 8005c0c:	4920 3a44 3020 2578 3830 0a58 1000                ID: 0x%08X..

08005c19 <os_fifo_size>:
 8005c19:	0110                                             .

08005c1a <os_flags>:
 8005c1a:	0001                                        ..

08005c1c <os_maxtaskrun>:
 8005c1c:	000f 0000                                   ....

08005c20 <os_messageQ_def_osTimerMessageQ>:
 8005c20:	0004 0000 0918 2000                         ....... 

08005c28 <os_mutex_def_env_mutex>:
 8005c28:	0938 2000                                   8.. 

08005c2c <os_mutex_def_malloc_mutex>:
 8005c2c:	0948 2000                                   H.. 

08005c30 <os_mutex_def_singleton_mutex>:
 8005c30:	0958 2000                                   X.. 

08005c34 <os_rrobin>:
 8005c34:	0005 0001                                   ....

08005c38 <os_stackinfo>:
 8005c38:	0200 0100                                   ....

08005c3c <os_thread_def_osTimerThread>:
 8005c3c:	257d 0800 0002 0000 0001 0000 0320 0000     }%.......... ...
 8005c4c:	2000 2000                                   . . 

08005c50 <os_trv>:
 8005c50:	481f 0001                                   .H..

08005c54 <os_mutex_def_osThreadMutex>:
 8005c54:	196c 2000 6950 6d6e 7061 6520 7272 726f     l.. Pinmap error
 8005c64:	203a 7277 6e6f 2067 6f70 7472 6e20 6d75     : wrong port num
 8005c74:	6562 2e72 0000 0000                         ber.....

08005c7c <ll_pin_defines>:
 8005c7c:	0001 0000 0002 0000 0004 0000 0008 0000     ................
 8005c8c:	0010 0000 0020 0000 0040 0000 0080 0000     .... ...@.......
 8005c9c:	0100 0000 0200 0000 0400 0000 0800 0000     ................
 8005cac:	1000 0000 2000 0000 4000 0000 8000 0000     ..... ...@......
 8005cbc:	6143 6e6e 746f 6920 696e 6974 6c61 7a69     Cannot initializ
 8005ccc:	2065 4155 5452 000a                         e UART..

08005cd4 <PinMap_UART_RX>:
 8005cd4:	0003 0000 4400 4000 0712 0000 000a 0000     .....D.@........
 8005ce4:	1000 4001 0712 0000 000c 0000 1400 4001     ...@...........@
 8005cf4:	0812 0000 0017 0000 1000 4001 0712 0000     ...........@....
 8005d04:	0027 0000 1400 4001 0812 0000 ffff 0000     '......@........
 8005d14:	ffff ffff 0000 0000                         ........

08005d1c <PinMap_UART_TX>:
 8005d1c:	0002 0000 4400 4000 0712 0000 0009 0000     .....D.@........
 8005d2c:	1000 4001 0712 0000 000b 0000 1400 4001     ...@...........@
 8005d3c:	0812 0000 0016 0000 1000 4001 0712 0000     ...........@....
 8005d4c:	0026 0000 1400 4001 0812 0000 ffff 0000     &......@........
 8005d5c:	ffff ffff 0000 0000                         ........

08005d64 <AHBPrescTable>:
	...
 8005d6c:	0201 0403 0706 0908                         ........

08005d74 <APBAHBPrescTable>:
 8005d74:	0000 0000 0201 0403 0201 0403 0706 0908     ................

08005d84 <void mbed::Callback<void ()>::generate<void (*)()>(void (* const&)())::ops>:
 8005d84:	3fc9 0800 3fcd 0800 3fd5 0800               .?...?...?..

08005d90 <vtable for mbed::RawSerial>:
	...
 8005d98:	3ffb 0800 3ffb 0800 4011 0800 4025 0800     .?...?...@..%@..

08005da8 <vtable for mbed::SerialBase>:
	...
 8005db0:	4039 0800 403b 0800 10a9 0800 10e1 0800     9@..;@..........
 8005dc0:	704f 7265 7461 726f 6e20 7765 5d5b 6f20     Operator new[] o
 8005dd0:	7475 6f20 2066 656d 6f6d 7972 0a0d 0000     ut of memory....

08005de0 <__sf_fake_stderr>:
	...

08005e00 <__sf_fake_stdin>:
	...

08005e20 <__sf_fake_stdout>:
	...

08005e40 <_global_impure_ptr>:
 8005e40:	01bc 2000 3130 3332 3534 3736 3938 4241     ... 0123456789AB
 8005e50:	4443 4645 3000 3231 3433 3635 3837 6139     CDEF.0123456789a
 8005e60:	6362 6564 0066 2d23 2b30 0020 6c68 004c     bcdef.#-0+ .hlL.
 8005e70:	6665 4567 4746 0000                         efgEFG..

08005e78 <__EH_FRAME_BEGIN__>:
 8005e78:	0000 0000                                   ....
